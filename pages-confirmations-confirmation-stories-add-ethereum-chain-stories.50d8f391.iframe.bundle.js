"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[92254],{"./ui/pages/confirmations/confirmation/stories/add-ethereum-chain.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_metamask_controller_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@metamask/controller-utils/dist/constants.mjs"),_confirmation__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/pages/confirmations/confirmation/confirmation.js"),_util__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/pages/confirmations/confirmation/stories/util.js");function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}let __WEBPACK_DEFAULT_EXPORT__={title:"Pages/ConfirmationPage/AddEthereumChain",component:_confirmation__WEBPACK_IMPORTED_MODULE_1__.A,argTypes:{redirectToHomeOnZeroConfirmations:{table:{disable:!0}},chainName:{control:"text",description:"The name of the network."},chainId:{control:"text",description:"The hexadecimal chain ID of the network."},rpcUrl:{control:"text",description:"The URL of the RPC endpoint for the network."},ticker:{control:"text",description:"The ticker symbol for the network."},blockExplorerUrl:{name:"rpcPrefs.blockExplorerUrl",control:"text",description:"The URL of the block explorer for the network."}},args:{chainName:"Test Chain",chainId:"0x123",rpcUrl:"https://test:com:8545",ticker:"TST",blockExplorerUrl:"https://test.com/explorer"},parameters:{docs:{description:{component:`An approval to add a network to the wallet.<br/><br/>
Automatically displayed via the \`ConfirmationPage\` component when using the \`ApprovalController.add\` method with the \`type\` set to \`wallet_addEthereumChain\`.<br/><br/>
The below arguments are properties of the \`requestData\` object required by the \`ApprovalController.add\` method.`}}}};var DefaultStory=function(args){var blockExplorerUrl=args.blockExplorerUrl,finalArgs=_object_without_properties(args,["blockExplorerUrl"]);return finalArgs.rpcPrefs={blockExplorerUrl:blockExplorerUrl},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_util__WEBPACK_IMPORTED_MODULE_2__.v,{type:_metamask_controller_utils__WEBPACK_IMPORTED_MODULE_3__.s.AddEthereumChain,requestData:finalArgs},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_confirmation__WEBPACK_IMPORTED_MODULE_1__.A,null))};DefaultStory.storyName="Default",DefaultStory.parameters={...DefaultStory.parameters,docs:{...DefaultStory.parameters?.docs,source:{originalSource:`args => {
  const {
    blockExplorerUrl,
    ...finalArgs
  } = args;
  finalArgs.rpcPrefs = {
    blockExplorerUrl
  };
  return <PendingApproval type={ApprovalType.AddEthereumChain} requestData={finalArgs}>
      <ConfirmationPage />
    </PendingApproval>;
}`,...DefaultStory.parameters?.docs?.source}}};let __namedExportsOrder=["DefaultStory"]}}]);
//# sourceMappingURL=pages-confirmations-confirmation-stories-add-ethereum-chain-stories.50d8f391.iframe.bundle.js.map