{"version":3,"file":"components-component-library-header-base-header-base-stories.17bb330e.iframe.bundle.js","mappings":";AAsBA;AAGA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAIA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;ACmIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/header-base/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {HeaderBase} from './header-base';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      id: \"this-is-a-base-component-it-should-not-be-used-in-your-feature-code-directly-but-as-a-base-for-other-ui-components\",\n      children: \"This is a base component. It should not be used in your feature code directly but as a \\\"base\\\" for other UI components\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"headerbase\",\n      children: \"HeaderBase\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"HeaderBase\"\n      }), \" component is a reusable UI component for displaying a header with optional startAccessory, children (title) and endAccessory content areas. It is designed to be flexible and customizable for various use cases to keep a visually balanced appearance.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-headerbase--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: HeaderBase\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Wrapping content in the \", _jsx(_components.code, {\n        children: \"HeaderBase\"\n      }), \" component will be rendered in the center of the header.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"childrenWrapperProps\"\n      }), \" prop to customize the wrapper element around the \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" content.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-headerbase--children\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { HeaderBase, Text } from '../../component-library';\\nimport {\\n  TextAlign,\\n  TextVariant,\\n} from '../../../helpers/constants/design-system';\\n\\n<HeaderBase>\\n  <Text variant={TextVariant.headingSm} textAlign={TextAlign.Center}>\\n    Title is sentence case no period\\n  </Text>\\n</HeaderBase>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"startaccessory\",\n      children: \"startAccessory\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"startAccessory\"\n      }), \" prop will render the content in the start (left) side of the header.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"startAccessoryWrapperProps\"\n      }), \" prop to customize the wrapper element around the \", _jsx(_components.code, {\n        children: \"startAccessory\"\n      }), \" content.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-headerbase--start-accessory\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  HeaderBase,\\n  Text,\\n  ButtonIcon,\\n  ButtonIconSize,\\n  IconName,\\n} from '../../component-library';\\nimport {\\n  TextAlign,\\n  TextVariant,\\n} from '../../../helpers/constants/design-system';\\n\\n<HeaderBase\\n  startAccessory={\\n    <ButtonIcon\\n      size={ButtonIconSize.Sm}\\n      iconName={IconName.ArrowLeft}\\n      ariaLabel=\\\"back\\\"\\n    />\\n  }\\n>\\n  <Text variant={TextVariant.headingSm} textAlign={TextAlign.Center}>\\n    Title is sentence case no period\\n  </Text>\\n</HeaderBase>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"endaccessory\",\n      children: \"endAccessory\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"endAccessory\"\n      }), \" prop will render the content in the end (right) side of the header.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"endAccessoryWrapperProps\"\n      }), \" prop to customize the wrapper element around the \", _jsx(_components.code, {\n        children: \"endAccessory\"\n      }), \" content.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-headerbase--end-accessory\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  ButtonIcon,\\n  ButtonIconSize,\\n  HeaderBase,\\n  IconName,\\n  Text,\\n} from '../../component-library';\\nimport {\\n  TextAlign,\\n  TextVariant,\\n} from '../../../helpers/constants/design-system';\\n\\n<HeaderBase\\n  endAccessory={\\n    <ButtonIcon\\n      size={ButtonIconSize.Sm}\\n      iconName={IconName.Close}\\n      ariaLabel=\\\"close\\\"\\n    />\\n  }\\n>\\n  <Text variant={TextVariant.headingSm} textAlign={TextAlign.Center}>\\n    Title is sentence case no period\\n  </Text>\\n</HeaderBase>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"use-case-demos\",\n      children: \"Use Case Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Some examples of how the \", _jsx(_components.code, {\n        children: \"HeaderBase\"\n      }), \" component can be used in various use cases with background colors set for visual aid.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-headerbase--use-case-demos\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}