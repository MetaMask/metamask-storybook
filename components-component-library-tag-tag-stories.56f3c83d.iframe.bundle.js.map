{"version":3,"file":"components-component-library-tag-tag-stories.56f3c83d.iframe.bundle.js","mappings":";AAsBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAIA;AAIA;AAGA;AAMA;AAKA;AAIA;AAGA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/tag/README.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {ArgsTable, Canvas, Story} from '@storybook/addon-docs';\nimport {Tag} from './tag';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"tag\",\n      children: \"Tag\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Tag\"\n      }), \" is a component used to display text within a container.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tag--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: Tag\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"label\",\n      children: \"Label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The text content of the \", _jsx(_components.code, {\n        children: \"Tag\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tag--label\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"starticonname\",\n      children: \"StartIconName\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"startIconName\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"IconName\"\n      }), \" enum to change the icon\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/story/components-componentlibrary-icon--default-story\",\n        children: \"IconSearch\"\n      }), \" story to find the icon you want to use\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tag--start-icon-name-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Tag, IconName } from '../../component-library';\\n\\n<Tag startIconName={IconName.Snaps} label=\\\"Snap Name\\\" />;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"starticonprops\",\n      children: \"StartIconProps\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"startIconProps\"\n      }), \" prop to pass props to the icon component used in the parent Tag component\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tag--start-icon-props-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Tag, IconName } from '../../component-library';\\nimport { IconColor } from '../../../helpers/constants/design-system';\\n\\n<Tag\\n  startIconName={IconName.Snaps}\\n  label=\\\"Snap Name\\\"\\n  startIconProps={{ color: IconColor.primaryDefault }}\\n/>;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}