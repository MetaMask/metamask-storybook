{"version":3,"file":"components-ui-typography-typography-stories.b63933c2.iframe.bundle.js","mappings":";;;;;;;;AAgsources":["webpack://metamask-crx/./ui/components/ui/typography/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport ActionableMessage from '../actionable-message';\nimport Typography from '.';\nimport {SEVERITIES} from '../../../helpers/constants/design-system';\nimport {BannerAlert} from '../../component-library/banner-alert';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(BannerAlert, {\n      severity: SEVERITIES.WARNING,\n      title: \"Deprecated\",\n      description: \"<Typography/> has been deprecated in favor of the <Text /> component\",\n      actionButtonLabel: \"See details\",\n      actionButtonProps: {\n        href: 'https://github.com/MetaMask/metamask-extension/issues/17670'\n      }\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"typography\",\n      children: \"Typography\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Good typography improves readability, legibility and hierarchy of information.\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: Typography\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following describes the props and example usage for this component.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"variant\",\n      children: \"Variant\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TYPOGRAPHY\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the font size of the Typography component.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--variant\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typography variant=\\\"TypographyVariant.H1\\\">h1</Typography>\\n<Typography variant=\\\"TypographyVariant.H2\\\">h2</Typography>\\n<Typography variant=\\\"TypographyVariant.H3\\\">h3</Typography>\\n<Typography variant=\\\"TypographyVariant.H4\\\">h4</Typography>\\n<Typography variant=\\\"TypographyVariant.H5\\\">h5</Typography>\\n<Typography variant=\\\"TypographyVariant.H6\\\">h6</Typography>\\n<Typography variant=\\\"TypographyVariant.H7\\\">h7</Typography>\\n<Typography variant=\\\"TypographyVariant.H8\\\">h8</Typography>\\n<Typography variant=\\\"TypographyVariant.H9\\\">h9</Typography>\\n<Typography variant=\\\"TypographyVariant.paragraph\\\">p</Typography>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color\",\n      children: \"Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"COLOR\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the color of the Typography component.\"]\n    }), \"\\n\", _jsx(ActionableMessage, {\n      type: \"warning\",\n      message: \"Do not use any colors in the DEPRECATED COLORS list. This will ensure themability and consistency across the codebase.\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--color\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\nimport { TextColor, Color, BackgroundColor } from '../../../helpers/constants/design-system';\\n\\n<Typography color={TextColor.textDefault}>\\n  text-default\\n</Typography>\\n<Typography color={TextColor.textAlternative}>\\n  text-alternative\\n</Typography>\\n<Typography color={TextColor.textMuted}>\\n  text-muted\\n</Typography>\\n<Typography color={Color.overlayInverse} boxProps={{backgroundColor:{BackgroundColor.overlayDefault}}}>\\n  overlay-inverse\\n</Typography>\\n<Typography color={TextColor.primaryDefault}>\\n  primary-default\\n</Typography>\\n<Typography color={TextColor.primaryInverse} boxProps={{backgroundColor:{BackgroundColor.primaryDefault}}}>\\n  primary-inverse\\n</Typography>\\n<Typography color={TextColor.errorDefault}>\\n  error-default\\n</Typography>\\n<Typography color={TextColor.errorInverse} boxProps={{backgroundColor:{BackgroundColor.errorDefault}}}>\\n  error-inverse\\n</Typography>\\n<Typography color={TextColor.successDefault}>\\n  success-default\\n</Typography>\\n<Typography color={TextColor.successInverse} boxProps={{backgroundColor:{BackgroundColor.successDefault}}}>\\n  success-inverse\\n</Typography>\\n<Typography color={TextColor.warningInverse} boxProps={{backgroundColor:{BackgroundColor.warningDefault}}}>\\n  warning-inverse\\n</Typography>\\n<Typography color={TextColor.infoDefault}>\\n  info-default\\n</Typography>\\n<Typography color={TextColor.infoInverse} boxProps={{backgroundColor:{BackgroundColor.infoDefault}}}>\\n  info-inverse\\n</Typography>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"font-weight\",\n      children: \"Font Weight\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"fontWeight\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"FONT_WEIGHT\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the font weight of the Typography component. There are 2 font weights:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FONT_WEIGHT.NORMAL\"\n        }), \" = \", _jsx(_components.code, {\n          children: \"normal\"\n        }), \" || \", _jsx(_components.code, {\n          children: \"400\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FONT_WEIGHT.BOLD\"\n        }), \" = \", _jsx(_components.code, {\n          children: \"bold\"\n        }), \" || \", _jsx(_components.code, {\n          children: \"700\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--font-weight\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\nimport { FONT_WEIGHT } from '../../../helpers/constants/design-system';\\n\\n<Typography fontWeight={FONT_WEIGHT.NORMAL}>\\n  normal\\n</Typography>\\n<Typography fontWeight={FONT_WEIGHT.BOLD}>\\n  bold\\n</Typography>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"font-style\",\n      children: \"Font Style\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"fontStyle\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"FONT_STYLE\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the font style of the Typography component. There are 2 font styles:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"FONT_STYLE.NORMAL\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"FONT_STYLE.ITALIC\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--font-style\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\nimport { FONT_STYLE } from '../../../helpers/constants/design-system';\\n\\n<Typography fontStyle={FONT_STYLE.NORMAL}>\\n  normal\\n</Typography>\\n<Typography fontStyle={FONT_STYLE.ITALIC}>\\n  bold\\n</Typography>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"align\",\n      children: \"Align\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"align\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TextAlign\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the text alignment of the Typography component.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--align\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\nimport { TextAlign } from '../../../helpers/constants/design-system';\\n\\n<Typography align={TextAlign.Left}>\\n  left\\n</Typography>\\n<Typography align={TextAlign.Center}>\\n  center\\n</Typography>\\n<Typography align={TextAlign.Right}>\\n  right\\n</Typography>\\n<Typography align={TextAlign.Justify}>\\n  justify\\n</Typography>\\n<Typography align={TextAlign.End}>\\n  end\\n</Typography>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"overflow-wrap\",\n      children: \"Overflow Wrap\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"overflowWrap\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"OVERFLOW_WRAP\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the overflow wrap of the Typography component.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--overflow-wrap\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\nimport { OVERFLOW_WRAP } from '../../../helpers/constants/design-system';\\n\\n<div\\n  style={{\\n    width: 250,\\n    border: '1px solid var(--color-error-default)',\\n    display: 'block',\\n  }}\\n>\\n  <Typography overflowWrap={OVERFLOW_WRAP.NORMAL}>\\n    {OVERFLOW_WRAP.NORMAL}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\\n  </Typography>\\n  <Typography overflowWrap={OVERFLOW_WRAP.BREAK_WORD}>\\n    {OVERFLOW_WRAP.BREAK_WORD}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\\n  </Typography>\\n</div>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"as\",\n      children: \"As\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop to change the root html element of the Typography component\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--as\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\n\\n<Typography as=\\\"dd\\\">dd</Typography>\\n<Typography as=\\\"div\\\">div</Typography>\\n<Typography as=\\\"dt\\\">dt</Typography>\\n<Typography as=\\\"em\\\">em</Typography>\\n<Typography as=\\\"h1\\\">h1</Typography>\\n<Typography as=\\\"h2\\\">h2</Typography>\\n<Typography as=\\\"h3\\\">h3</Typography>\\n<Typography as=\\\"h4\\\">h4</Typography>\\n<Typography as=\\\"h5\\\">h5</Typography>\\n<Typography as=\\\"h6\\\">h6</Typography>\\n<Typography as=\\\"li\\\">li</Typography>\\n<Typography as=\\\"p\\\">p</Typography>\\n<Typography as=\\\"span\\\">span</Typography>\\n<Typography as=\\\"strong\\\">strong</Typography>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Renders the html:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<dd>dd</dd>\\n\\n<div>div</div>\\n\\n<dt>dt</dt>\\n\\n<em>em</em>\\n\\n<h1>h1</h1>\\n\\n<h2>h2</h2>\\n\\n<h3>h3</h3>\\n\\n<h4>h4</h4>\\n\\n<h5>h5</h5>\\n\\n<h6>h6</h6>\\n\\n<li>li</li>\\n\\n<p>p</p>\\n\\n<span>span</span>\\n\\n<strong>strong</strong>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"margin\",\n      children: \"Margin\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"margin\"\n      }), \" prop to change margin of the Typography component. For more control over bounding box properties use the \", _jsx(_components.code, {\n        children: \"boxProps\"\n      }), \" props object.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--margin\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\n\\n<Typography margin={4}>This uses the boxProps prop</Typography>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"box-props\",\n      children: \"Box Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"boxProps\"\n      }), \" prop object to pass any valid \", _jsx(_components.a, {\n        href: \"/?path=/story/components-ui-box--default-story\",\n        children: \"Box\"\n      }), \" component props to the Typography component. \", _jsx(_components.code, {\n        children: \"boxProps\"\n      }), \" will overwrite the \", _jsx(_components.code, {\n        children: \"margin\"\n      }), \" prop\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-typography--box-props-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\\nimport Typography from '../../ui/typography';\\nimport { Color } from '../../../helpers/constants/design-system';\\n\\n<Typography\\n  boxProps={{\\n    backgroundColor: Color.infoMuted,\\n    borderColor: Color.infoDefault,\\n    padding: 4,\\n    borderRadius: 4,\\n  }}\\n  color={Color.textDefault}\\n>\\n  This uses the boxProps prop\\n</Typography>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"class-name\",\n      children: \"Class Name\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adds an additional class to the Typography component\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The text content of the typography component\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}