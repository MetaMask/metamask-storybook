"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[55082],{"./ui/components/ui/error-message/error-message.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/components/ui/error-message/index.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Components/UI/ErrorMessage(deprecated)",component:___WEBPACK_IMPORTED_MODULE_1__.A,argTypes:{errorMessage:{control:"text"},errorKey:{control:"text"}}};var DefaultStory=function(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.A,args)};DefaultStory.storyName="Default",DefaultStory.args={errorMessage:"There was an error!"},DefaultStory.parameters={...DefaultStory.parameters,docs:{...DefaultStory.parameters?.docs,source:{originalSource:"args => <ErrorMessage {...args} />",...DefaultStory.parameters?.docs?.source}}};let __namedExportsOrder=["DefaultStory"]},"./ui/components/ui/error-message/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>error_message_component});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),component_library=__webpack_require__("./ui/components/component-library/index.ts"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),ErrorMessage=function(props,context){var errorMessage=props.errorMessage,errorKey=props.errorKey,error=errorKey?context.t(errorKey):errorMessage;return react.createElement("div",{className:"error-message"},react.createElement(component_library.In,{className:"error-message__icon",name:component_library.$M.Warning,size:component_library.lK.Sm,color:design_system.Li.errorDefault,marginRight:2}),react.createElement("div",{className:"error-message__text"},error))};ErrorMessage.propTypes={errorMessage:prop_types_default().string,errorKey:prop_types_default().string},ErrorMessage.contextTypes={t:prop_types_default().func};let error_message_component=ErrorMessage;ErrorMessage.__docgenInfo={description:`@deprecated The \`<ErrorMessage />\` component has been deprecated in favor of the new \`<BannerAlert>\` component from the component-library.
Please update your code to use the new \`<BannerAlert>\` component instead, which can be found at ui/components/component-library/banner-alert/banner-alert.js.
You can find documentation for the new BannerAlert component in the MetaMask Storybook:
{@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-banneralert--docs}
If you would like to help with the replacement of the old ErrorMessage component, please submit a pull request against this GitHub issue:
{@link https://github.com/MetaMask/metamask-extension/issues/20394}`,methods:[],displayName:"ErrorMessage",props:{errorMessage:{description:"The text content for the error message",type:{name:"string"},required:!1},errorKey:{description:"The translate key for localization. Uses context.t(). Will override the error message",type:{name:"string"},required:!1}},context:{t:{type:{name:"func"},required:!1}}}}}]);