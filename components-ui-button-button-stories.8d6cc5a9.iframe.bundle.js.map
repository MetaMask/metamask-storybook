{"version":3,"file":"components-ui-button-button-stories.8d6cc5a9.iframe.bundle.js","mappings":";AAqBA;AAEA;AAIA;AAGA;AAEA;AAGA;AAEA;AAGA;AAIA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAOA;AAIA;AAGA;AAUA;AAEA;AAGA;AAEA;AAIA;AAGA;AAIA;AAIA;AAGA;AAQA;AAGA;AAEA;AAIA;AAGA;AAUA;AAGA;AAAA;AAAA;AC8CA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAoBA;AAAA","sources":["webpack://metamask-crx/./ui/components/ui/button/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport Button from '.';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"button\",\n      children: \"Button\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Buttons communicate actions that users can take.\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-button--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: Button\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following describes the props and example usage for this component.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"type\",\n      children: \"Type\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By changing the \", _jsx(_components.code, {\n        children: \"type\"\n      }), \" prop you can use different styles of the button.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"| type              | Description                                                                                           |\\n| ----------------- | ----------------------------------------------------------------------------------------------------- |\\n| \", _jsx(_components.code, {\n        children: \"default\"\n      }), \"         | default style of the button                                                                           |\\n| \", _jsx(_components.code, {\n        children: \"primary\"\n      }), \"         | the principle call to action on the page                                                              |\\n| \", _jsx(_components.code, {\n        children: \"secondary\"\n      }), \"       | secondary actions on each page                                                                        |\\n| \", _jsx(_components.code, {\n        children: \"warning\"\n      }), \"         | a warning action in the page                                                                          |\\n| \", _jsx(_components.code, {\n        children: \"danger\"\n      }), \"          | a negative action (such as Delete) on the page                                                        |\\n| \", _jsx(_components.code, {\n        children: \"danger--primary\"\n      }), \" | a negative principle call to action (such as Delete) on the page                                      |\\n| \", _jsx(_components.code, {\n        children: \"link\"\n      }), \"            | an optional action or navigation action out of the app changes root html tag from \", _jsx(_components.code, {\n        children: \"<button>\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"<a>\"\n      }), \" |\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-button--type\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"type-link\",\n      children: \"Type Link\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By changing the \", _jsx(_components.code, {\n        children: \"type\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"\\\"link\\\"\"\n      }), \" the root html element of the button changes from \", _jsx(_components.code, {\n        children: \"<button>\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"<a>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rendered html\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<a class=\\\"button btn-link\\\">Click me</a>\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-button--type-link\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"icon\",\n      children: \"Icon\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pass an icon component to \", _jsx(_components.code, {\n        children: \"icon\"\n      }), \" prop to add an icon to the left side of the Button.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-button--icon\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"submit\",\n      children: \"Submit\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the \", _jsx(_components.code, {\n        children: \"submit\"\n      }), \" prop is set to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \" the html type attribute will be set to \", _jsx(_components.code, {\n        children: \"type=\\\"submit\\\"\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<button class=\\\"button btn--rounded btn-primary\\\" type=\\\"submit\\\">Submit</button>\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-button--submit\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"onclick\",\n      children: \"OnClick\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the \", _jsx(_components.code, {\n        children: \"onClick\"\n      }), \" prop is provided and is of type \", _jsx(_components.code, {\n        children: \"function\"\n      }), \" the button html will render with \", _jsx(_components.code, {\n        children: \"role=\\\"button\\\"\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"tabIndex=\\\"0\\\"\"\n      }), \" attributes. It also provides keyboard functionality on press of the \\\"Enter\\\" key.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<button class=\\\"button btn--rounded btn-default\\\" role=\\\"button\\\" tabindex=\\\"0\\\">\\n  Click me\\n</button>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}