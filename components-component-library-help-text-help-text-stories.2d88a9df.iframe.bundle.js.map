{"version":3,"file":"components-component-library-help-text-help-text-stories.2d88a9df.iframe.bundle.js","mappings":";AAuBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAOA;AAEA;AAGA;AAYA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAYA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/help-text/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {Text} from '../text';\nimport {HelpText} from './help-text';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"helptext\",\n      children: \"HelpText\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"HelpText\"\n      }), \" is used to provide instructions or feedback text under a form field including error, and success messages.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-helptext--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: HelpText\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"HelpText\"\n      }), \" accepts all \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-text--default-story#props\",\n        children: \"Text\"\n      }), \" component props\"]\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: Text\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"HelpText\"\n      }), \" renders as a \", _jsx(_components.code, {\n        children: \"<p>\"\n      }), \" tag if the child is a \", _jsx(_components.code, {\n        children: \"string\"\n      }), \" or a \", _jsx(_components.code, {\n        children: \"<div>\"\n      }), \" if the child is an \", _jsx(_components.code, {\n        children: \"object\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { IconColor } from '../../../helpers/constants/design-system';\\nimport { HelpText, Icon, IconName, IconSize } from '../../component-library';\\n\\n<HelpText>Plain text</HelpText> // renders as <p>Plain text</p>\\n<HelpText>\\n  <span>Text and icon</span>\\n  <Icon\\n    marginLeft={1}\\n    color={IconColor.iconAlternative}\\n    name={IconName.Warning}\\n    size={IconSize.Inherit}\\n  />\\n</HelpText> // renders as <div><span>Text and icon</span> <div style={{background: icon/warning.svg}} /></div>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"severity\",\n      children: \"Severity\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"severity\"\n      }), \" prop and \", _jsx(_components.code, {\n        children: \"HelpTextSeverity\"\n      }), \" enum to change the severity of the \", _jsx(_components.code, {\n        children: \"HelpText\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-helptext--severity-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { HelpText, HelpTextSeverity } from '../../component-library';\\n\\n<HelpText>HelpText without severity prop</HelpText>\\n<HelpText severity={HelpTextSeverity.Danger}>\\n  HelpText with severity: SEVERITY.DANGER\\n</HelpText>\\n<HelpText severity={HelpTextSeverity.Success}>\\n  HelpText with severity: SEVERITY.SUCCESS\\n</HelpText>\\n<HelpText severity={HelpTextSeverity.Warning}>\\n  HelpText with severity: SEVERITY.WARNING\\n</HelpText>\\n<HelpText severity={HelpTextSeverity.Info}>\\n  HelpText with severity: SEVERITY.INFO\\n</HelpText>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color\",\n      children: \"Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It may be useful to change the color of the \", _jsx(_components.code, {\n        children: \"HelpText\"\n      }), \". Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TextColor\"\n      }), \" enum to change the color of the \", _jsx(_components.code, {\n        children: \"HelpText\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"TextColor.textDefault\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-helptext--color-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TextColor } from '../../../helpers/constants/design-system';\\nimport { HelpText } from '../../component-library';\\n\\n<HelpText color={TextColor.textDefault}>\\n  This HelpText default color is TextColor.textDefault\\n</HelpText>\\n<HelpText color={TextColor.textAlternative}>\\n  This HelpText color is TextColor.textAlternative\\n</HelpText>\\n<HelpText color={TextColor.textMuted}>\\n  This HelpText color is TextColor.textMuted\\n</HelpText>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}