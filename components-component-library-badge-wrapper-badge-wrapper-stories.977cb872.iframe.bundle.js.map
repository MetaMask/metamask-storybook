{"version":3,"file":"components-component-library-badge-wrapper-badge-wrapper-stories.977cb872.iframe.bundle.js","mappings":";AAwssources":["webpack://metamask-crx/./ui/components/component-library/badge-wrapper/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {BadgeWrapper} from './badge-wrapper';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"badgewrapper\",\n      children: \"BadgeWrapper\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"BadgeWrapper\"\n      }), \" positions a badge on top of another component\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-badgewrapper--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: BadgeWrapper\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" prop to define the element to be wrapped by the \", _jsx(_components.code, {\n        children: \"BadgeWrapper\"\n      }), \". This element will be what the badge is positioned on top of.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-badgewrapper--children\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Color, Size } from '../../../helpers/constants/design-system';\\n\\nimport {\\n  AvatarAccount,\\n  AvatarNetwork,\\n  AvatarNetworkSize,\\n  AvatarToken,\\n  BadgeWrapper,\\n  BadgeWrapperAnchorElementShape,\\n  BadgeWrapperPosition,\\n} from '../../component-library';\\n\\n<BadgeWrapper\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n>\\n  <AvatarAccount\\n    address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\"\\n  />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n>\\n  <AvatarToken\\n    name=\\\"Eth\\\"\\n    src=\\\"./images/eth_logo.svg\\\"\\n    borderColor={BorderColor.borderMuted}\\n  />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Sm}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n  anchorElementShape={BadgeWrapperAnchorElementShape.rectangular}\\n>\\n  <Box\\n    as=\\\"img\\\"\\n    src=\\\"./catnip-spicywright.png\\\"\\n    borderRadius={BorderRadius.SM}\\n    borderColor={BorderColor.borderMuted}\\n    style={{ width: 100, height: 100 }}\\n  />\\n</BadgeWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"badge\",\n      children: \"Badge\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"badge\"\n      }), \" prop to define the badge component to be rendered on top of the \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To access the component containing the badge, use the \", _jsx(_components.code, {\n        children: \"badgeContainerProps\"\n      }), \" prop. The wrapping component is a \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" and accepts all box props.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-badgewrapper--badge\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"\\nimport {\\n  BorderColor,\\n  BorderRadius,\\n  Color,\\n  IconColor,\\n  Size,\\n} from '../../../helpers/constants/design-system';\\n\\nimport {\\n  AvatarAccount,\\n  AvatarNetwork,\\n  AvatarNetworkSize,\\n  BadgeWrapper,\\n  BadgeWrapperAnchorElementShape,\\n  Icon,\\n  IconSize,\\n  IconName,\\n  Tag,\\n} from '../../component-library';\\n\\n<BadgeWrapper\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n>\\n  <AvatarAccount address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\" />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  badge={\\n    <Box\\n      backgroundColor={Color.successDefault}\\n      borderRadius={BorderRadius.full}\\n      borderColor={BorderColor.borderMuted}\\n      borderWidth={2}\\n      style={{ width: 12, height: 12 }}\\n    />\\n  }\\n>\\n  <Icon\\n    name={IconName.Global}\\n    size={IconSize.Xl}\\n    color={IconColor.iconAlternative}\\n  />\\n</BadgeWrapper>\\n<Box\\n  paddingTop={1}\\n  paddingBottom={1}\\n  paddingRight={1}\\n  paddingLeft={1}\\n  backgroundColor={Color.backgroundAlternative}\\n  borderRadius={BorderRadius.SM}\\n  style={{ alignSelf: 'flex-start' }}\\n>\\n  <BadgeWrapper\\n    badge={\\n      <Tag\\n        label=\\\"9999\\\"\\n        backgroundColor={Color.errorDefault}\\n        labelProps={{ color: Color.errorInverse }}\\n        borderColor={BorderColor.errorDefault}\\n      />\\n    }\\n    anchorElementShape={BadgeWrapperAnchorElementShape.rectangular}\\n  >\\n    <Box\\n      paddingTop={1}\\n      paddingBottom={1}\\n      paddingRight={8}\\n      paddingLeft={8}\\n      borderRadius={BorderRadius.SM}\\n      borderColor={BorderColor.borderDefault}\\n      backgroundColor={Color.backgroundDefault}\\n    >\\n      NFTs\\n    </Box>\\n  </BadgeWrapper>\\n</Box>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"position\",\n      children: \"Position\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"position\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"BadgeWrapperPosition\"\n      }), \" enum to set the position of the badge. Possible positions are:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"top left \", _jsx(_components.code, {\n          children: \"BadgeWrapperPosition.topLeft\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"top right \", _jsx(_components.code, {\n          children: \"BadgeWrapperPosition.topRight\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"bottom left \", _jsx(_components.code, {\n          children: \"BadgeWrapperPosition.bottomLeft\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"bottom right \", _jsx(_components.code, {\n          children: \"BadgeWrapperPosition.bottomRight\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you require a custom position, you can use the \", _jsx(_components.code, {\n        children: \"positionObj\"\n      }), \" prop see \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-badgewrapper--position-obj#position-obj\",\n        children: \"Position Obj\"\n      }), \" for more details.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-badgewrapper--position\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BorderColor Size } from '../../../helpers/constants/design-system';\\n\\nimport {\\n  AvatarAccount,\\n  AvatarNetwork,\\n  AvatarNetworkSize,\\n  BadgeWrapper,\\n  BadgeWrapperPosition\\n} from '../../component-library';\\n\\n<BadgeWrapper\\n  position={BadgeWrapperPosition.topLeft}\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n>\\n  <AvatarAccount address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\" />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n>\\n  <AvatarAccount address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\" />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  position={BadgeWrapperPosition.bottomLeft}\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n>\\n  <AvatarAccount address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\" />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  position={BadgeWrapperPosition.bottomRight}\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n>\\n  <AvatarAccount address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\" />\\n</BadgeWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"position-obj\",\n      children: \"Position Obj\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"positionObj\"\n      }), \" prop to set a custom position for the badge. The \", _jsx(_components.code, {\n        children: \"positionObj\"\n      }), \" prop takes an object with the following properties:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"top\"\n        }), \" - the top position of the badge\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"right\"\n        }), \" - the right position of the badge\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"bottom\"\n        }), \" - the bottom position of the badge\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"left\"\n        }), \" - the left position of the badge\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-badgewrapper--position-obj\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BorderColor Size } from '../../../helpers/constants/design-system';\\n\\nimport {\\n  AvatarAccount,\\n  AvatarNetwork,\\n  AvatarNetworkSize,\\n  BadgeWrapper,\\n} from '../../component-library';\\n\\n\\n<BadgeWrapper\\n  badge={\\n    <AvatarNetwork\\n      size={AvatarNetworkSize.Xs}\\n      name=\\\"Avalanche\\\"\\n      src=\\\"./images/avax-token.svg\\\"\\n      borderColor={BorderColor.borderMuted}\\n    />\\n  }\\n  positionObj={{ top: 4, right: -8 }}\\n>\\n  <AvatarAccount address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\"/>\\n</BadgeWrapper>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"anchor-element-shape\",\n      children: \"Anchor Element Shape\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"anchorElementShape\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"BadgeWrapperAnchorElementShape\"\n      }), \" enum to set the badge position relative to the shape of the anchor element. Possible shapes are:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"circular \", _jsx(_components.code, {\n          children: \"BadgeWrapperAnchorElementShape.circular\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"rectangular \", _jsx(_components.code, {\n          children: \"BadgeWrapperAnchorElementShape.rectangular\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-badgewrapper--anchor-element-shape\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Box from '../../ui/box/box';\\n\\nimport { BorderRadius, Color } from '../../../helpers/constants/design-system';\\n\\nimport { BadgeWrapper, BadgeWrapperAnchorElementShape } from '../../component-library';\\n\\n<BadgeWrapper\\n  badge={\\n    <Box\\n      backgroundColor={Color.errorDefault}\\n      borderRadius={BorderRadius.full}\\n      style={{ width: 16, height: 16 }}\\n    />\\n  }\\n>\\n  <Box\\n    backgroundColor={Color.infoDefault}\\n    borderRadius={BorderRadius.full}\\n    style={{ width: 40, height: 40 }}\\n  />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  badge={\\n    <Box\\n      backgroundColor={Color.errorDefault}\\n      borderRadius={BorderRadius.full}\\n      style={{ width: 8, height: 8 }}\\n    />\\n  }\\n>\\n  <Box\\n    backgroundColor={Color.infoDefault}\\n    borderRadius={BorderRadius.full}\\n    style={{ width: 40, height: 40 }}\\n  />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  anchorElementShape={BadgeWrapperAnchorElementShape.rectangular}\\n  badge={\\n    <Box\\n      backgroundColor={Color.errorDefault}\\n      borderRadius={BorderRadius.full}\\n      style={{ width: 16, height: 16 }}\\n    />\\n  }\\n>\\n  <Box\\n    backgroundColor={Color.infoDefault}\\n    style={{ width: 40, height: 40 }}\\n  />\\n</BadgeWrapper>\\n<BadgeWrapper\\n  anchorElementShape={BadgeWrapperAnchorElementShape.rectangular}\\n  badge={\\n    <Box\\n      backgroundColor={Color.errorDefault}\\n      borderRadius={BorderRadius.full}\\n      style={{ width: 8, height: 8 }}\\n    />\\n  }\\n>\\n  <Box\\n    backgroundColor={Color.infoDefault}\\n    style={{ width: 40, height: 40 }}\\n  />\\n</BadgeWrapper>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}