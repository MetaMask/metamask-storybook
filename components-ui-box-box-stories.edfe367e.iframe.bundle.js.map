{"version":3,"file":"components-ui-box-box-stories.edfe367e.iframe.bundle.js","mappings":";AAgCA;AAAA;AAAA;AAGA;AAEA;AAIA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAKA;AAKA;AAKA;AAKA;AAAA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAAA;AAKA;AAKA;AAGA;AAGA;AAEA;AAGA;AAuBA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAuBA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AASA;AAIA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAWA;AAIA;AAMA;AAGA;AAAA;AAAA;AAAA;AAEA;AAGA;AAeA;AAIA;AAMA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAeA;AAIA;AAMA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAaA;AAIA;AAMA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AASA;AACA;AAEA;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAEA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACksources":["webpack://metamask-crx/./ui/components/ui/box/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas} from '@storybook/addon-docs';\nimport {Severity} from '../../../helpers/constants/design-system';\nimport {BannerAlert} from '../../component-library/banner-alert';\nimport Box from '.';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    a: \"a\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(BannerAlert, {\n      severity: Severity.Warning,\n      title: \"Deprecated\",\n      description: \"The JS version of <Box/> has been deprecated in favor of the TS version from component-library\",\n      actionButtonLabel: \"See details\",\n      actionButtonProps: {\n        href: 'https://github.com/MetaMask/metamask-extension/issues/19526'\n      },\n      marginBottom: 4\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", \"\\n\", _jsx(_components.h1, {\n      id: \"box-deprecated\",\n      children: \"Box (deprecated)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Box is a utility component that can be used for layout or as a base for other UI components.\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"| Name               | Description                                                                                                                                                                                                                    | Default           |\\n| ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------- |\\n| children           | The children of the Box component. If \", _jsx(_components.code, {\n        children: \"function\"\n      }), \" type will render the child as the Box node instead of a child of the Box                                                                                                      | -                 |\\n| className          | Additional className of the Box component                                                                                                                                                                                      | -                 |\\n| margin             | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values [1, 2, 'auto'] for responsive props                                                                                                                                     | -                 |\\n| marginTop          | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values for responsive props                                                                                                                                                    | -                 |\\n| marginBottom       | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values for responsive props                                                                                                                                                    | -                 |\\n| marginRight        | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values for responsive props                                                                                                                                                    | -                 |\\n| marginLeft         | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values for responsive props                                                                                                                                                    | -                 |\\n| marginInline       | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values for responsive props                                                                                                                                                    | -                 |\\n| marginInlineStart  | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values for responsive props                                                                                                                                                    | -                 |\\n| marginInlineEnd    | 0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto' or array of values for responsive props                                                                                                                                                    | -                 |\\n| padding            | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| paddingTop         | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| paddingBottom      | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| paddingRight       | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| paddingLeft        | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| paddingInline      | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| paddingInlineStart | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| paddingInlineEnd   | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| display            | Display values or array of Display values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"                 | -                 |\\n| flexDirection      | FlexDirection values or array of FlexDirection values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"     | FlexDirection.Row |\\n| flexWrap           | FlexWrap values or array of FlexWrap values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"               | -                 |\\n| alignItems         | AlignItems values or array of AlignItems values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"           | -                 |\\n| justifyContent     | JustifyContent values or array of JustifyContent values from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"                        | -                 |\\n| gap                | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| textAlign          | TextAlign values or array of TextAlign values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"             | -                 |\\n| width              | BlockSize values or array of BlockSize values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"             | -                 |\\n| height             | BlockSize values or array of BlockSize values for responsive props \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"                  | -                 |\\n| color              | Color values or array of Color values for responsive props \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"                          | -                 |\\n| backgroundColor    | BackgroundColor values or array of BackgroundColor values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \" | -                 |\\n| borderColor        | BorderColor values or array of BorderColor values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"         | -                 |\\n| borderWidth        | 0, 1, 2, 4, 6, 8, 9, 10, 12 or array of numbers [1, 2] for responsive props                                                                                                                                                    | -                 |\\n| borderRadius       | BorderRadius values or array of BorderRadius values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"       | -                 |\\n| borderStyle        | BORDER_STYLE values or array of BORDER_STYLE values for responsive props from \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/blob/main/ui/helpers/constants/design-system.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"../ui/helpers/constants/design-system.js\"\n      }), \"       | -                 |\\n| as                 | The polymorphic \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop allows you to change the root HTML element of the Box component. Defaults to 'div'                                                                                                                   | 'div'             |\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following describes the props and example usage for this component.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"margin\",\n      children: \"Margin\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The margin props \", _jsx(_components.code, {\n        children: \"margin\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginTop\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginRight\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginBottom\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginLeft\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginInline\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginInlineStart\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"marginInlineEnd\"\n      }), \" can be used to set the margins of the \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" component. All of the margin props accept \", _jsx(_components.a, {\n        href: \"#responsive-props\",\n        children: \"responsive props\"\n      }), \" in the form of array props\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Accepted props are: \", _jsx(_components.code, {\n        children: \"0, 1, 2, 4, 6, 8, 9, 10, 12, 'auto\"\n      }), \" or array of these values\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--margin\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Box margin={4} />\\n<Box marginTop={4} />\\n<Box marginRight={4} />\\n<Box marginBottom={4} />\\n<Box marginLeft={'auto'} />\\n<Box marginInline={4} />\\n<Box marginInlineStart={4} />\\n<Box marginInlineEnd={4} />\\n\\n// Responsive props\\n<Box margin={[4, 8]} />\\n<Box marginTop={[4, 8]} />\\n<Box marginRight={[4, 8]} />\\n<Box marginBottom={[4, 8]} />\\n<Box marginLeft={['auto', 8]} />\\n<Box marginInline={['auto', 8]} />\\n<Box marginInlineStart={['auto', 8]} />\\n<Box marginInlineEnd={['auto', 8]} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"padding\",\n      children: \"Padding\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The padding props work very similarly to margin. The padding props \", _jsx(_components.code, {\n        children: \"padding\"\n      }), \", \", _jsx(_components.code, {\n        children: \"paddingTop\"\n      }), \", \", _jsx(_components.code, {\n        children: \"paddingRight\"\n      }), \", \", _jsx(_components.code, {\n        children: \"paddingBottom\"\n      }), \", \", _jsx(_components.code, {\n        children: \"paddingLeft\"\n      }), \", \", _jsx(_components.code, {\n        children: \"paddingInline\"\n      }), \", \", _jsx(_components.code, {\n        children: \"paddingInlineStart\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"paddingInlineEnd\"\n      }), \" can be used to set the paddings of the \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" component. All of the padding props accept \", _jsx(_components.a, {\n        href: \"#responsive-props\",\n        children: \"responsive props\"\n      }), \" in the form of array props\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Accepted props are: \", _jsx(_components.code, {\n        children: \"0, 1, 2, 4, 6, 8, 9, 10, 12\"\n      }), \" or array of these values\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--padding\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Box padding={4} />\\n<Box paddingTop={4} />\\n<Box paddingRight={4} />\\n<Box paddingBottom={4} />\\n<Box paddingLeft={4} />\\n\\n// Responsive props\\n<Box padding={[4, 8]} />\\n<Box paddingTop={[4, 8]} />\\n<Box paddingRight={[4, 8]} />\\n<Box paddingBottom={[4, 8]} />\\n<Box paddingLeft={[4, 8]} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"display\",\n      children: \"Display\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"display\"\n      }), \" prop can be used to set the display of the \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" component. All of the display props accept \", _jsx(_components.a, {\n        href: \"#responsive-props\",\n        children: \"responsive props\"\n      }), \" in the form of array props.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Accepted props imported from the design system \", _jsx(_components.code, {\n        children: \"Display\"\n      }), \" const are:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.Block\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.Flex\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.Grid\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.InlineBlock\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.InlineFlex\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.InlineGrid\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.Inline\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.ListItem\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Display.None\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"or array of these values.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Display } from '../../../helpers/constants/design-system';\\nimport Box from '../ui/box';\\n\\n<Box display={Display.Block} />\\n<Box display={Display.Flex} />\\n<Box display={Display.Grid} />\\n<Box display={Display.InlineBlock} />\\n<Box display={Display.InlineFlex} />\\n<Box display={Display.Inline} />\\n<Box display={Display.None} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color\",\n      children: \"Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop can be used to set the color of the content in Box component. The \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop accepts \", _jsx(_components.a, {\n        href: \"#responsive-props\",\n        children: \"responsive props\"\n      }), \" in the form of array props. Defaults to \", _jsx(_components.code, {\n        children: \"Color.textDefault\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--color-story\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of importing \", _jsx(_components.code, {\n        children: \"TextColor\"\n      }), \" object with \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TextColor } from '../../../helpers/constants/design-system';\\nimport Box from '../ui/box';\\n\\n<Box color={TextColor.textDefault}>Text goes here</Box>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"background-color\",\n      children: \"Background Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" prop along with the \", _jsx(_components.code, {\n        children: \"Color\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"BackgroundColor\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"ui/helpers/constants/design-system.js\"\n      }), \" to change background color. The \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" prop accepts \", _jsx(_components.a, {\n        href: \"#responsive-props\",\n        children: \"responsive props\"\n      }), \" in the form of array props.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--background-color-story\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of importing \", _jsx(_components.code, {\n        children: \"BackgroundColor\"\n      }), \" object with \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  BackgroundColor,\\n  TextColor,\\n} from '../../../helpers/constants/design-system';\\nimport Box from '../ui/box';\\n\\n<Box backgroundColor={BackgroundColor.backgroundDefault}>\\n  <Typography color={TextColor.textDefault}>\\n    BackgroundColor.backgroundDefault\\n  </Typography>\\n</Box>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"border-color\",\n      children: \"Border Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"borderColor\"\n      }), \" prop along with the \", _jsx(_components.code, {\n        children: \"Color\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"BorderColor\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"ui/helpers/constants/design-system.js\"\n      }), \" to change border color. The \", _jsx(_components.code, {\n        children: \"borderColor\"\n      }), \" prop accepts \", _jsx(_components.a, {\n        href: \"#responsive-props\",\n        children: \"responsive props\"\n      }), \" in the form of array props.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--border-color-story\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of importing \", _jsx(_components.code, {\n        children: \"BorderColor\"\n      }), \" object with \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  BackgroundColor,\\n  BorderColor,\\n  TextColor,\\n} from '../../../helpers/constants/design-system';\\nimport Box from '../ui/box';\\n\\n<Box\\n  backgroundColor={BackgroundColor.backgroundDefault}\\n  borderColor={BorderColor.borderDefault}\\n>\\n  <Typography color={TextColor.textDefault}>\\n    BorderColor.borderDefault\\n  </Typography>\\n</Box>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"border-radius\",\n      children: \"Border Radius\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"borderRadius\"\n      }), \" prop along with the \", _jsx(_components.code, {\n        children: \"BorderRadius\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"ui/helpers/constants/design-system.js\"\n      }), \" to change border radius. The \", _jsx(_components.code, {\n        children: \"borderRadius\"\n      }), \" prop accepts \", _jsx(_components.a, {\n        href: \"#responsive-props\",\n        children: \"responsive props\"\n      }), \" in the form of array props.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--border-radius-story\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of importing \", _jsx(_components.code, {\n        children: \"BorderRadius\"\n      }), \" object with \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BorderRadius } from '../../../helpers/constants/design-system';\\nimport Box from '../ui/box';\\n\\n<Box borderRadius={BorderRadius.none}>BorderRadius.none 0px</Box>\\n<Box borderRadius={BorderRadius.XS}>BorderRadius.XS 2px</Box>\\n<Box borderRadius={BorderRadius.SM}>BorderRadius.SM 4px</Box>\\n<Box borderRadius={BorderRadius.MD}>BorderRadius.MD 6px</Box>\\n<Box borderRadius={BorderRadius.LG}>BorderRadius.LG 8px</Box>\\n<Box borderRadius={BorderRadius.XL}>BorderRadius.XL 12px</Box>\\n<Box borderRadius={BorderRadius.pill}>BorderRadius.pill 9999px</Box>\\n<Box borderRadius={BorderRadius.full}>BorderRadius.full 50%</Box>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"responsive-props\",\n      children: \"Responsive Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The box component provides a responsive props api in the form of array props. Array props are inspired by \", _jsx(_components.a, {\n        href: \"https://styled-system.com/guides/array-props\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"styled-systems array props\"\n      }), \". The responsive props follow a mobile first methodology with the first item in the array applying the style to the base level size e.g. \", _jsx(_components.code, {\n        children: \"0px\"\n      }), \" and up. The second item overwrites the first items styles at the next breakpoint.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"All Box props accept the responsive props format\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To skip a breakpoint use \", _jsx(_components.code, {\n          children: \"null\"\n        }), \" as the skipped item's value e.g. \", _jsx(_components.code, {\n          children: \"<Box display={['display', null, ;flex']} />\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"// the responsive props\\n<Box display={['block', 'flex']} />\\n\\n// is equivalent to the css\\n.box {\\n  display: block;\\n\\n  @media screen and (max-width: $breakpoint-sm) {\\n    display: flex;\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--responsive-props\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  BorderColor,\\n  BackgroundColor,\\n} from '../../../helpers/constants/design-system';\\nimport Box from '../ui/box';\\n\\n<Box\\n  padding={[2, 4]}\\n  gap={[2, 4]}\\n  display={['flex']}\\n  flexDirection={['column', 'row']}\\n  borderColor={BorderColor.borderDefault}\\n>\\n  <Box\\n    padding={[4, 8]}\\n    backgroundColor={BackgroundColor.backgroundAlternative}\\n    borderColor={BorderColor.borderMuted}\\n  >\\n    responsive\\n  </Box>\\n  <Box\\n    padding={[4, 8]}\\n    backgroundColor={BackgroundColor.backgroundAlternative}\\n    borderColor={BorderColor.borderMuted}\\n  >\\n    props\\n  </Box>\\n  <Box\\n    padding={[4, 8]}\\n    backgroundColor={BackgroundColor.backgroundAlternative}\\n    borderColor={BorderColor.borderMuted}\\n  >\\n    example\\n  </Box>\\n</Box>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"as\",\n      children: \"As\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The polymorphic \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop allows you to change the root HTML element of the Box component. Defaults to \", _jsx(_components.code, {\n        children: \"'div'\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--as\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Box from '../../ui/box';\\n\\n<Box>div(default)</Box>\\n<Box as=\\\"ul\\\">ul</Box>\\n<Box as=\\\"li\\\">li</Box>\\n<Box as=\\\"button\\\">button</Box>\\n<Box as=\\\"header\\\">header</Box>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"width\",\n      children: \"Width\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"width\"\n      }), \" prop to pass a singular \", _jsx(_components.code, {\n        children: \"BlockSize\"\n      }), \" or for a responsive width pass an array up to 4 \", _jsx(_components.code, {\n        children: \"BlockSize\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Responsive widths go from smallest to largest screen sizes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Example: [BlockSize.Half, BlockSize.ThreeFourths, BlockSize.OneFifth, BlockSize.ThreeSixths]\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"BlockSize.Half is the default width for \", _jsx(_components.code, {\n          children: \"base screen size (0px)\"\n        }), \" and up\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"BlockSize.ThreeFourths is the width for \", _jsx(_components.code, {\n          children: \"small screen size (576px) \"\n        }), \" and up\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"BlockSize.OneFifth is the width for \", _jsx(_components.code, {\n          children: \"medium screen size (768px)\"\n        }), \" and up\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"BlockSize.ThreeSixths is the width for \", _jsx(_components.code, {\n          children: \"large screen size (1280px)\"\n        }), \" and up\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-box-deprecated--width\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  BlockSize,\\n  Display,\\n  FlexWrap,\\n} from '../../../helpers/constants/design-system';\\nimport Box from '../../ui/box';\\n\\n<>\\n  <p>Static widths</p>\\n\\n  <Box display={Display.Flex}>\\n    <Box width={BlockSize.Full}>BlockSize.Full</Box>\\n    <Box width={BlockSize.Half}>BlockSize.Half</Box>\\n    <Box width={BlockSize.Half}>BlockSize.Half</Box>\\n    <Box width={BlockSize.OneThird}>BlockSize.OneThird</Box>\\n    <Box width={BlockSize.OneThird}>BlockSize.OneThird</Box>\\n    <Box width={BlockSize.OneThird}>BlockSize.OneThird</Box>\\n    <Box width={BlockSize.OneFourth}>BlockSize.OneFourth</Box>\\n    <Box width={BlockSize.OneFourth}>BlockSize.OneFourth</Box>\\n    <Box width={BlockSize.OneFourth}>BlockSize.OneFourth</Box>\\n    <Box width={BlockSize.OneFourth}>BlockSize.OneFourth</Box>\\n  </Box>\\n\\n  <p>Responsive widths</p>\\n\\n  <Box display={Display.Flex} flexWrap={FlexWrap.Wrap}>\\n    <Box\\n      width={[\\n        BlockSize.Full,\\n        BlockSize.Half,\\n        BlockSize.OneThird,\\n        BlockSize.OneFourth,\\n      ]}\\n    >\\n      BlockSize.Full, BlockSize.Half, BlockSize.OneThird, BlockSize.OneFourth,\\n    </Box>\\n    <Box\\n      width={[\\n        BlockSize.Full,\\n        BlockSize.Half,\\n        BlockSize.OneThird,\\n        BlockSize.OneFourth,\\n      ]}\\n    >\\n      BlockSize.Full, BlockSize.Half, BlockSize.OneThird, BlockSize.OneFourth,\\n    </Box>\\n    <Box\\n      width={[\\n        BlockSize.Full,\\n        BlockSize.Half,\\n        BlockSize.OneThird,\\n        BlockSize.OneFourth,\\n      ]}\\n    >\\n      BlockSize.Full, BlockSize.Half, BlockSize.OneThird, BlockSize.OneFourth,\\n    </Box>\\n    <Box\\n      width={[\\n        BlockSize.Full,\\n        BlockSize.Half,\\n        BlockSize.OneThird,\\n        BlockSize.OneFourth,\\n      ]}\\n    >\\n      BlockSize.Full, BlockSize.Half, BlockSize.OneThird, BlockSize.OneFourth,\\n    </Box>\\n  </Box>\\n</>;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}