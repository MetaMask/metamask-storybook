(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[5644],{"./node_modules/@metamask/logo/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{let foxJson=__webpack_require__("./node_modules/@metamask/logo/fox.json"),{calculateSizingOptions,createLogoViewer,loadModelFromJson,createModelRenderer,createNode,setAttribute,setGradientDefinitions,setMaskDefinitions}=__webpack_require__("./node_modules/@metamask/logo/util.js");function createLogo(options={}){let cameraDistance=options.cameraDistance||400,{height,width}=calculateSizingOptions(options),meshJson=options.meshJson||foxJson,container=createNode("svg");setAttribute(container,"width",`${width}px`),setAttribute(container,"height",`${height}px`),document.body.appendChild(container),setGradientDefinitions(container,meshJson.gradients),setMaskDefinitions({container,masks:meshJson.masks,height,width});let renderFox=createModelRenderer(container,cameraDistance,loadModelFromJson(meshJson));return createLogoViewer(container,(lookCurrent,slowDrift)=>{renderFox(container.getBoundingClientRect(),lookCurrent,slowDrift)},Object.assign({cameraDistance},options))}module.exports=createLogo},"./node_modules/@metamask/logo/util.js":(module,__unused_webpack_exports,__webpack_require__)=>{let perspective=__webpack_require__("./node_modules/gl-mat4/perspective.js"),multiply=__webpack_require__("./node_modules/gl-mat4/multiply.js"),lookAt=__webpack_require__("./node_modules/gl-mat4/lookAt.js"),invert=__webpack_require__("./node_modules/gl-mat4/invert.js"),rotate=__webpack_require__("./node_modules/gl-mat4/rotate.js"),transform=__webpack_require__("./node_modules/gl-vec3/transformMat4.js"),SVG_NS="http://www.w3.org/2000/svg",replaceChildrenPonyfill=function(...addNodes){for(;this.lastChild;)this.removeChild(this.lastChild);addNodes.length>0&&this.append(...addNodes)};function createLogoViewer(container,renderScene,{followMouse=!1,followMotion=!1,slowDrift=!1,lazyRender=!0}={}){let shouldRender=!0,mouse={x:0,y:0},lookCurrent=[0,0],renderCurrentScene=()=>{updateLookCurrent(),renderScene(lookCurrent,slowDrift)};function setLookAtTarget(target){let bounds=container.getBoundingClientRect();mouse.x=1-2*(target.x-bounds.left)/bounds.width,mouse.y=1-2*(target.y-bounds.top)/bounds.height}function stopAnimation(){shouldRender=!1}function startAnimation(){shouldRender=!0}function setFollowMouse(state){followMouse=state}function setFollowMotion(state){followMotion=state}function lookAtAndRender(target){setLookAtTarget(target),lookCurrent[0]=mouse.x,lookCurrent[1]=mouse.y+.2833333333333334,renderCurrentScene()}function renderLoop(){shouldRender&&(window.requestAnimationFrame(renderLoop),renderCurrentScene())}function updateLookCurrent(){lookCurrent[0]=.7*lookCurrent[0]+.3*mouse.x,lookCurrent[1]=.7*lookCurrent[1]+.3*mouse.y+.085}return window.addEventListener("mousemove",function(ev){shouldRender||startAnimation(),followMouse&&(setLookAtTarget({x:ev.clientX,y:ev.clientY}),renderCurrentScene())}),window.addEventListener("deviceorientation",function(event){shouldRender||startAnimation(),followMotion&&(setLookAtTarget({x:200+10*event.gamma,y:-300+10*event.beta}),renderCurrentScene())}),lazyRender?renderCurrentScene():renderLoop(),{container,lookAt:setLookAtTarget,setFollowMouse,setFollowMotion,stopAnimation,startAnimation,lookAtAndRender,renderCurrentScene}}function loadModelFromJson(modelJson,createSvgPolygon=createStandardModelPolygon){let vertCount=modelJson.positions.length,positions=new Float32Array(3*vertCount),transformed=new Float32Array(3*vertCount),{polygons,polygonsByChunk}=createPolygonsFromModelJson(modelJson,createSvgPolygon);return positionsFromModel(positions,modelJson),{updatePositions:createPositionUpdater(positions,transformed,vertCount),positions,transformed,polygons,polygonsByChunk}}function createModelRenderer(container,cameraDistance,modelObj){let{updatePositions,transformed,polygons}=modelObj;for(let polygon of polygons)container.appendChild(polygon.svg);let computeMatrix=createMatrixComputer(cameraDistance),updateFaces=createFaceUpdater(container,polygons,transformed);return(rect,lookPos,slowDrift)=>{updatePositions(computeMatrix(rect,lookPos,slowDrift)),updateFaces(rect,container,polygons,transformed)}}function positionsFromModel(positions,modelJson){let pp=modelJson.positions,ptr=0;for(let i=0;i<pp.length;++i){let p=pp[i];for(let j=0;j<3;++j)positions[ptr]=p[j],ptr+=1}}function createPolygonsFromModelJson(modelJson,createSvgPolygon){let polygons=[],polygonsByChunk=modelJson.chunks.map((chunk,index)=>{let{faces}=chunk;return faces.map(face=>{let polygon=new Polygon(createSvgPolygon(chunk,{gradients:modelJson.gradients,index,masks:modelJson.masks}),face);return polygons.push(polygon),polygon})});return{polygons,polygonsByChunk}}function createStandardModelPolygon(chunk,{gradients={},index,masks}){let svgPolygon=createNode("polygon");if(chunk.gradient&&chunk.color)throw Error(`Both gradient and color for chunk '${index}'. These options are mutually exclusive.`);if(chunk.gradient){let gradientId=chunk.gradient;if(!gradients[gradientId])throw Error(`Gradient ID not found: '${gradientId}'`);setAttribute(svgPolygon,"fill",`url('#${gradientId}')`),setAttribute(svgPolygon,"stroke",`url('#${gradientId}')`)}else{let fill="string"==typeof chunk.color?chunk.color:`rgb(${chunk.color})`;setAttribute(svgPolygon,"fill",fill),setAttribute(svgPolygon,"stroke",fill)}if(chunk.mask){if(!masks[chunk.mask])throw Error(`Mask ID not found: '${chunk.mask}'`);setAttribute(svgPolygon,"mask",`url('#${chunk.mask}')`)}return setAttribute(svgPolygon,"points","0,0, 10,0, 0,10"),svgPolygon}function createMatrixComputer(distance){let objectCenter=new Float32Array(3),up=new Float32Array([0,1,0]),projection=new Float32Array(16),model=new Float32Array(16),view=lookAt(new Float32Array(16),new Float32Array([0,0,distance]),objectCenter,up),invView=invert(new Float32Array(16),view),invProjection=new Float32Array(16),target=new Float32Array(3),transformedMatrix=new Float32Array(16),X=new Float32Array([1,0,0]),Y=new Float32Array([0,1,0]),Z=new Float32Array([0,0,1]);return(rect,lookPos,slowDrift)=>{if(perspective(projection,Math.PI/4,rect.width/rect.height,100,1e3),invert(invProjection,projection),target[0]=lookPos[0],target[1]=lookPos[1],target[2]=1.2,transform(target,target,invProjection),transform(target,target,invView),lookAt(model,objectCenter,target,up),slowDrift){let time=Date.now()/1e3;rotate(model,model,.1+.2*Math.sin(time/3),X),rotate(model,model,-.1+.03*Math.sin(time/2),Z),rotate(model,model,.5+.2*Math.sin(time/3),Y)}return multiply(transformedMatrix,projection,view),multiply(transformedMatrix,transformedMatrix,model),transformedMatrix}}function createPositionUpdater(positions,transformed,vertCount){return M=>{let m00=M[0],m01=M[1],m02=M[2],m03=M[3],m10=M[4],m11=M[5],m12=M[6],m13=M[7],m20=M[8],m21=M[9],m22=M[10],m23=M[11],m30=M[12],m31=M[13],m32=M[14],m33=M[15];for(let i=0;i<vertCount;++i){let x=positions[3*i],y=positions[3*i+1],z=positions[3*i+2],tw=x*m03+y*m13+z*m23+m33;transformed[3*i]=(x*m00+y*m10+z*m20+m30)/tw,transformed[3*i+1]=(x*m01+y*m11+z*m21+m31)/tw,transformed[3*i+2]=(x*m02+y*m12+z*m22+m32)/tw}}}function compareZ(a,b){return b.zIndex-a.zIndex}function createFaceUpdater(container,polygons,transformed){let toDraw=[];return rect=>{let i;let w=rect.width,h=rect.height;for(i=0,toDraw.length=0;i<polygons.length;++i){let poly=polygons[i],{indices}=poly,i0=indices[0],i1=indices[1],i2=indices[2],ax=transformed[3*i0],ay=transformed[3*i0+1],bx=transformed[3*i1],by=transformed[3*i1+1],cx=transformed[3*i2];if((bx-ax)*(transformed[3*i2+1]-ay)-(by-ay)*(cx-ax)<0)continue;let points=[],zmax=-1/0,zmin=1/0,element=poly.svg;for(let j=0;j<3;++j){let idx=indices[j];points.push(`${.5*w*(1-transformed[3*idx])},${.5*h*(1-transformed[3*idx+1])}`);let z=transformed[3*idx+2];zmax=Math.max(zmax,z),zmin=Math.min(zmin,z)}poly.zIndex=zmax+.25*zmin;let joinedPoints=points.join(" ");-1===joinedPoints.indexOf("NaN")&&setAttribute(element,"points",joinedPoints),toDraw.push(poly)}toDraw.sort(compareZ);let newPolygons=toDraw.map(poly=>poly.svg),defs=container.getElementsByTagName("defs"),maskChildren=container.getElementsByTagName("mask");container.replaceChildren?container.replaceChildren(...defs,...maskChildren,...newPolygons):replaceChildrenPonyfill.bind(container)(...defs,...maskChildren,...newPolygons)}}function calculateSizingOptions(options={}){let width=options.width||400,height=options.height||400;return!options.pxNotRatio&&(width=Math.floor(window.innerWidth*(options.width||.25)),height=Math.floor(window.innerHeight*options.height||width),"minWidth"in options&&width<options.minWidth&&(width=options.minWidth,height=Math.floor(options.minWidth*options.height/options.width))),{width,height}}function createNode(type){return document.createElementNS(SVG_NS,type)}function setAttribute(node,attribute,value){node.setAttributeNS(null,attribute,value)}function svgElementToSvgImageContent(svgElement){return`<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"> <svg width="521px" height="521px" version="1.1" baseProfile="full" xmlns="${SVG_NS}" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events">`+svgElement.innerHTML+"</svg>"}function Polygon(svg,indices){this.svg=svg,this.indices=indices,this.zIndex=0}function setGradientDefinitions(container,gradients){if(!gradients||0===Object.keys(gradients).length)return;let defsContainer=createNode("defs"),linearCoordinateAttributes=["x1","x2","y1","y2"],radialCoordinateAttributes=["cx","cy","fr","fx","fy","r"],commonAttributes=["gradientTransform","gradientUnits","spreadMethod","stops","type"],allLinearAttributes=[...linearCoordinateAttributes,...commonAttributes],allRadialAttributes=[...radialCoordinateAttributes,...commonAttributes];for(let[gradientId,gradientDefinition]of Object.entries(gradients)){let gradient;if("linear"===gradientDefinition.type){gradient=createNode("linearGradient");let unsupportedLinearAttribute=Object.keys(gradientDefinition).find(attribute=>!allLinearAttributes.includes(attribute));if(unsupportedLinearAttribute)throw Error(`Unsupported linear gradient attribute: '${unsupportedLinearAttribute}'`);if(linearCoordinateAttributes.some(attributeName=>void 0!==gradientDefinition[attributeName])){let missingAttributes=linearCoordinateAttributes.filter(attributeName=>void 0===gradientDefinition[attributeName]);if(missingAttributes.length>0)throw Error(`Missing coordinate attributes: '${missingAttributes.join(", ")}'`);for(let attribute of linearCoordinateAttributes){if("string"!=typeof gradientDefinition[attribute])throw Error(`Type of '${attribute}' option expected to be 'string'. Instead received type '${typeof gradientDefinition[attribute]}'`);setAttribute(gradient,attribute,gradientDefinition[attribute])}}}else if("radial"===gradientDefinition.type){gradient=createNode("radialGradient");let presentCoordinateAttributes=radialCoordinateAttributes.filter(attributeName=>void 0!==gradientDefinition[attributeName]),unsupportedRadialAttribute=Object.keys(gradientDefinition).find(attribute=>!allRadialAttributes.includes(attribute));if(unsupportedRadialAttribute)throw Error(`Unsupported radial gradient attribute: '${unsupportedRadialAttribute}'`);if(presentCoordinateAttributes.length>0)for(let attribute of presentCoordinateAttributes){if("string"!=typeof gradientDefinition[attribute])throw Error(`Type of '${attribute}' option expected to be 'string'. Instead received type '${typeof gradientDefinition[attribute]}'`);setAttribute(gradient,attribute,gradientDefinition[attribute])}}else throw Error(`Unsupported gradient type: '${gradientDefinition.type}'`);if(setAttribute(gradient,"id",gradientId),void 0!==gradientDefinition.gradientUnits){if(!["userSpaceOnUse","objectBoundingBox"].includes(gradientDefinition.gradientUnits))throw Error(`Unrecognized value for 'gradientUnits' attribute: '${gradientDefinition.gradientUnits}'`);setAttribute(gradient,"gradientUnits",gradientDefinition.gradientUnits)}if(void 0!==gradientDefinition.gradientTransform){if("string"!=typeof gradientDefinition.gradientTransform)throw Error(`Type of 'gradientTransform' option expected to be 'string'. Instead received type '${typeof gradientDefinition.gradientTransform}'`);setAttribute(gradient,"gradientTransform",gradientDefinition.gradientTransform)}if(void 0!==gradientDefinition.spreadMethod){if(!["pad","reflect","repeat"].includes(gradientDefinition.spreadMethod))throw Error(`Unrecognized value for 'spreadMethod' attribute: '${gradientDefinition.spreadMethod}'`);setAttribute(gradient,"spreadMethod",gradientDefinition.spreadMethod)}if(void 0!==gradientDefinition.stops){if(!Array.isArray(gradientDefinition.stops))throw Error("The 'stop' attribute must be an array");for(let stopDefinition of gradientDefinition.stops){if("object"!=typeof stopDefinition)throw Error(`Each entry in the 'stop' attribute must be an object. Instead received type '${typeof stopDefinition}'`);let stop=createNode("stop");void 0!==stopDefinition.offset&&setAttribute(stop,"offset",stopDefinition.offset),void 0!==stopDefinition["stop-color"]&&setAttribute(stop,"stop-color",stopDefinition["stop-color"]),void 0!==stopDefinition["stop-opacity"]&&setAttribute(stop,"stop-opacity",stopDefinition["stop-opacity"]),gradient.appendChild(stop)}}defsContainer.appendChild(gradient)}container.appendChild(defsContainer)}function setMaskDefinitions({container,masks,height,width}){if(masks&&0!==Object.keys(masks).length)for(let[maskId,maskDefinition]of Object.entries(masks)){let mask=createNode("mask");setAttribute(mask,"id",maskId);let maskedRect=createNode("rect");setAttribute(maskedRect,"width",1.5*width),setAttribute(maskedRect,"height",1.5*height),setAttribute(maskedRect,"x",`-${Math.floor(width/4)}`),setAttribute(maskedRect,"y",`-${Math.floor(height/4)}`),setAttribute(maskedRect,"fill",maskDefinition.color),mask.appendChild(maskedRect),container.appendChild(mask)}}module.exports={calculateSizingOptions,createLogoViewer,createModelRenderer,loadModelFromJson,positionsFromModel,createPolygonsFromModelJson,createStandardModelPolygon,createMatrixComputer,compareZ,createFaceUpdater,createNode,setAttribute,setGradientDefinitions,setMaskDefinitions,svgElementToSvgImageContent,Polygon}},"./node_modules/gl-mat4/identity.js":module=>{module.exports=identity;function identity(out){return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}},"./node_modules/gl-mat4/invert.js":module=>{module.exports=invert;function invert(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32,det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;return det?(det=1/det,out[0]=(a11*b11-a12*b10+a13*b09)*det,out[1]=(a02*b10-a01*b11-a03*b09)*det,out[2]=(a31*b05-a32*b04+a33*b03)*det,out[3]=(a22*b04-a21*b05-a23*b03)*det,out[4]=(a12*b08-a10*b11-a13*b07)*det,out[5]=(a00*b11-a02*b08+a03*b07)*det,out[6]=(a32*b02-a30*b05-a33*b01)*det,out[7]=(a20*b05-a22*b02+a23*b01)*det,out[8]=(a10*b10-a11*b08+a13*b06)*det,out[9]=(a01*b08-a00*b10-a03*b06)*det,out[10]=(a30*b04-a31*b02+a33*b00)*det,out[11]=(a21*b02-a20*b04-a23*b00)*det,out[12]=(a11*b07-a10*b09-a12*b06)*det,out[13]=(a00*b09-a01*b07+a02*b06)*det,out[14]=(a31*b01-a30*b03-a32*b00)*det,out[15]=(a20*b03-a21*b01+a22*b00)*det,out):null}},"./node_modules/gl-mat4/lookAt.js":(module,__unused_webpack_exports,__webpack_require__)=>{var identity=__webpack_require__("./node_modules/gl-mat4/identity.js");function lookAt(out,eye,center,up){var x0,x1,x2,y0,y1,y2,z0,z1,z2,len,eyex=eye[0],eyey=eye[1],eyez=eye[2],upx=up[0],upy=up[1],upz=up[2],centerx=center[0],centery=center[1],centerz=center[2];return 1e-6>Math.abs(eyex-centerx)&&1e-6>Math.abs(eyey-centery)&&1e-6>Math.abs(eyez-centerz)?identity(out):(len=1/Math.sqrt((z0=eyex-centerx)*z0+(z1=eyey-centery)*z1+(z2=eyez-centerz)*z2),z0*=len,z1*=len,z2*=len,(len=Math.sqrt((x0=upy*z2-upz*z1)*x0+(x1=upz*z0-upx*z2)*x1+(x2=upx*z1-upy*z0)*x2))?(x0*=len=1/len,x1*=len,x2*=len):(x0=0,x1=0,x2=0),(len=Math.sqrt((y0=z1*x2-z2*x1)*y0+(y1=z2*x0-z0*x2)*y1+(y2=z0*x1-z1*x0)*y2))?(y0*=len=1/len,y1*=len,y2*=len):(y0=0,y1=0,y2=0),out[0]=x0,out[1]=y0,out[2]=z0,out[3]=0,out[4]=x1,out[5]=y1,out[6]=z1,out[7]=0,out[8]=x2,out[9]=y2,out[10]=z2,out[11]=0,out[12]=-(x0*eyex+x1*eyey+x2*eyez),out[13]=-(y0*eyex+y1*eyey+y2*eyez),out[14]=-(z0*eyex+z1*eyey+z2*eyez),out[15]=1,out)}module.exports=lookAt},"./node_modules/gl-mat4/multiply.js":module=>{module.exports=multiply;function multiply(out,a,b){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b0=b[0],b1=b[1],b2=b[2],b3=b[3];return out[0]=b0*a00+b1*a10+b2*a20+b3*a30,out[1]=b0*a01+b1*a11+b2*a21+b3*a31,out[2]=b0*a02+b1*a12+b2*a22+b3*a32,out[3]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[4],b1=b[5],b2=b[6],b3=b[7],out[4]=b0*a00+b1*a10+b2*a20+b3*a30,out[5]=b0*a01+b1*a11+b2*a21+b3*a31,out[6]=b0*a02+b1*a12+b2*a22+b3*a32,out[7]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[8],b1=b[9],b2=b[10],b3=b[11],out[8]=b0*a00+b1*a10+b2*a20+b3*a30,out[9]=b0*a01+b1*a11+b2*a21+b3*a31,out[10]=b0*a02+b1*a12+b2*a22+b3*a32,out[11]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[12],b1=b[13],b2=b[14],b3=b[15],out[12]=b0*a00+b1*a10+b2*a20+b3*a30,out[13]=b0*a01+b1*a11+b2*a21+b3*a31,out[14]=b0*a02+b1*a12+b2*a22+b3*a32,out[15]=b0*a03+b1*a13+b2*a23+b3*a33,out}},"./node_modules/gl-mat4/perspective.js":module=>{module.exports=perspective;function perspective(out,fovy,aspect,near,far){var f=1/Math.tan(fovy/2),nf=1/(near-far);return out[0]=f/aspect,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=f,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=(far+near)*nf,out[11]=-1,out[12]=0,out[13]=0,out[14]=2*far*near*nf,out[15]=0,out}},"./node_modules/gl-mat4/rotate.js":module=>{module.exports=rotate;function rotate(out,a,rad,axis){var s,c,t,a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23,b00,b01,b02,b10,b11,b12,b20,b21,b22,x=axis[0],y=axis[1],z=axis[2],len=Math.sqrt(x*x+y*y+z*z);return 1e-6>Math.abs(len)?null:(x*=len=1/len,y*=len,z*=len,s=Math.sin(rad),t=1-(c=Math.cos(rad)),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],b00=x*x*t+c,b01=y*x*t+z*s,b02=z*x*t-y*s,b10=x*y*t-z*s,b11=y*y*t+c,b12=z*y*t+x*s,b20=x*z*t+y*s,b21=y*z*t-x*s,b22=z*z*t+c,out[0]=a00*b00+a10*b01+a20*b02,out[1]=a01*b00+a11*b01+a21*b02,out[2]=a02*b00+a12*b01+a22*b02,out[3]=a03*b00+a13*b01+a23*b02,out[4]=a00*b10+a10*b11+a20*b12,out[5]=a01*b10+a11*b11+a21*b12,out[6]=a02*b10+a12*b11+a22*b12,out[7]=a03*b10+a13*b11+a23*b12,out[8]=a00*b20+a10*b21+a20*b22,out[9]=a01*b20+a11*b21+a21*b22,out[10]=a02*b20+a12*b21+a22*b22,out[11]=a03*b20+a13*b21+a23*b22,a!==out&&(out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out)}},"./node_modules/gl-vec3/transformMat4.js":module=>{module.exports=transformMat4;function transformMat4(out,a,m){var x=a[0],y=a[1],z=a[2],w=m[3]*x+m[7]*y+m[11]*z+m[15];return w=w||1,out[0]=(m[0]*x+m[4]*y+m[8]*z+m[12])/w,out[1]=(m[1]*x+m[5]*y+m[9]*z+m[13])/w,out[2]=(m[2]*x+m[6]*y+m[10]*z+m[14])/w,out}},"./node_modules/@metamask/logo/fox.json":module=>{"use strict";module.exports=JSON.parse('{"positions":[[111.024597,52.604599,46.225899],[114.025002,87.673302,58.9818],[66.192001,80.898003,55.394299],[72.113297,35.491798,30.871401],[97.804497,116.560997,73.978798],[16.7623,58.010899,58.078201],[52.608898,30.3641,42.556099],[106.881401,31.945499,46.9133],[113.484596,38.6049,49.121498],[108.6633,43.2332,46.315399],[101.216599,15.9822,46.308201],[16.6605,-16.2883,93.618698],[40.775002,-10.2288,85.276398],[23.926901,-2.5103,86.736504],[11.1691,-7.0037,99.377602],[9.5692,-34.393902,141.671997],[12.596,7.1655,88.740997],[61.180901,8.8142,76.996803],[39.719501,-28.927099,88.963799],[13.7962,-68.575699,132.057007],[15.2674,-62.32,129.688004],[14.8446,-52.6096,140.113007],[12.8917,-49.771599,144.740997],[35.604198,-71.758003,81.063904],[47.462502,-68.606102,63.369701],[38.2486,-64.730202,38.909901],[-12.8917,-49.771599,144.740997],[-13.7962,-68.575699,132.057007],[17.802099,-71.758003,81.063904],[19.1243,-69.0168,49.420101],[38.2486,-66.275597,17.776199],[12.8928,-36.703499,141.671997],[109.283997,-93.589897,27.824301],[122.117996,-36.8894,35.025002],[67.7668,-30.197001,78.417801],[33.180698,101.851997,25.3186],[9.4063,-35.589802,150.722],[-9.5692,-34.393902,141.671997],[-9.4063,-35.589802,150.722],[11.4565,-37.899399,150.722],[-12.596,7.1655,88.740997],[-11.1691,-7.0037,99.377602],[70.236504,62.836201,-3.9475],[47.263401,54.293999,-27.414801],[28.7302,91.731102,-24.972601],[69.167603,6.5862,-12.7757],[28.7302,49.1003,-48.3596],[31.903,5.692,-47.821999],[35.075802,-34.432899,-16.280899],[115.284103,48.681499,48.684101],[110.842796,28.4821,49.176201],[-19.1243,-69.0168,49.420101],[-38.2486,-66.275597,17.776199],[-111.024597,52.604599,46.225899],[-72.113297,35.491798,30.871401],[-66.192001,80.898003,55.394299],[-114.025002,87.673302,58.9818],[-97.804497,116.560997,73.978798],[-52.608898,30.3641,42.556099],[-16.7623,58.010899,58.078201],[-106.881401,31.945499,46.9133],[-108.6633,43.2332,46.315399],[-113.484596,38.6049,49.121498],[-101.216599,15.9822,46.308201],[-16.6605,-16.2883,93.618698],[-23.926901,-2.5103,86.736504],[-40.775002,-10.2288,85.276398],[-61.180901,8.8142,76.996803],[-39.719501,-28.927099,88.963799],[-14.8446,-52.6096,140.113007],[-15.2674,-62.32,129.688004],[-47.462502,-68.606102,63.369701],[-35.604198,-71.758003,81.063904],[-38.2486,-64.730202,38.909901],[-17.802099,-71.758003,81.063904],[-12.8928,-36.703499,141.671997],[-67.7668,-30.197001,78.417801],[-122.117996,-36.8894,35.025002],[-109.283997,-93.589897,27.824301],[-33.180698,101.851997,25.3186],[-11.4565,-37.899399,150.722],[-70.236504,62.836201,-3.9475],[-28.7302,91.731102,-24.972601],[-47.263401,54.293999,-27.414801],[-69.167603,6.5862,-12.7757],[-28.7302,49.1003,-48.3596],[-31.903,5.692,-47.821999],[-35.075802,-34.432899,-16.280899],[-115.284103,48.681499,48.684101],[-110.842796,28.4821,49.176201]],"chunks":[{"color":[119,57,0],"faces":[[0,1,2],[2,3,0],[4,5,2],[6,3,2],[2,5,6],[7,8,9],[10,3,6],[10,50,7],[7,3,10],[7,9,3],[49,0,9],[3,9,0],[53,54,55],[55,56,53],[57,56,55],[58,59,55],[55,54,58],[60,61,62],[63,58,54],[63,60,89],[60,63,54],[60,54,61],[88,61,53],[54,53,61],[2,1,4],[55,59,57]]},{"color":[36,51,67],"faces":[[11,12,13],[64,65,66]]},{"color":[228,116,36],"faces":[[14,15,11],[11,16,14],[17,12,18],[41,64,37],[67,68,66]]},{"color":[192,172,157],"faces":[[19,20,21],[21,22,19],[20,19,23],[23,24,20],[23,25,24],[19,22,26],[26,27,19],[23,28,29],[23,29,30],[25,23,30],[29,51,52],[52,30,29],[27,26,69],[69,70,27],[70,71,72],[72,27,70],[72,71,73],[51,74,72],[52,51,72],[73,52,72],[19,27,74],[74,28,19],[51,29,28],[28,74,51],[74,27,72],[28,23,19]]},{"color":[214,194,178],"faces":[[21,20,24],[24,31,21],[69,71,70],[71,69,75]]},{"color":[228,119,25],"faces":[[31,24,18],[6,5,16],[16,17,6],[24,32,33],[33,34,24],[5,4,35],[75,68,71],[58,67,40],[40,59,58],[71,76,77],[77,78,71]]},{"color":[205,98,0],"faces":[[24,34,18],[16,13,12],[12,17,16],[13,16,11],[71,68,76],[40,67,66],[66,65,40],[65,64,40]]},{"color":[0,0,0],"faces":[[36,15,37],[37,38,36],[31,39,22],[22,21,31],[31,15,36],[36,39,31],[75,69,26],[26,80,75],[75,80,38],[38,37,75],[38,80,39],[39,36,38],[39,80,26],[26,22,39]]},{"color":[247,132,25],"faces":[[17,33,10],[17,18,34],[34,33,17],[10,6,17],[11,15,31],[31,18,11],[18,12,11],[14,16,40],[40,41,14],[59,5,35],[35,79,59],[67,63,77],[67,77,76],[76,68,67],[63,67,58],[64,68,75],[75,37,64],[68,64,66],[14,41,37],[37,15,14],[5,59,40],[40,16,5]]},{"color":[225,119,25],"faces":[[35,4,42],[4,1,42],[42,43,44],[44,35,42],[45,43,42],[42,10,45],[30,32,24],[24,25,30],[30,33,32],[33,30,10],[44,43,46],[43,45,47],[47,46,43],[48,47,45],[45,30,48],[30,45,10],[49,42,0],[8,7,42],[50,42,7],[50,10,42],[1,0,42],[42,9,8],[42,49,9],[64,41,40],[57,59,79],[79,81,57],[57,81,56],[82,79,35],[35,44,82],[81,79,82],[82,83,81],[84,63,81],[81,83,84],[44,46,85],[85,82,44],[52,73,71],[71,78,52],[52,78,77],[77,63,52],[82,85,83],[83,85,86],[86,84,83],[87,52,84],[84,86,87],[52,63,84],[88,53,81],[62,81,60],[89,60,81],[89,81,63],[56,81,53],[81,62,61],[81,61,88],[48,87,86],[86,47,48],[47,86,85],[85,46,47],[48,30,52],[52,87,48]]}]}')}}]);