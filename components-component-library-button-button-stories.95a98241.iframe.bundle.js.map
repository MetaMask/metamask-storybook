{"version":3,"file":"components-component-library-button-button-stories.95a98241.iframe.bundle.js","mappings":";AA0BA;AAUA;AAOA;AAIA;AAGA;AAEA;AAGA;AAUA;AAEA;AACA;AAIA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAYA;AAEA;AACA;AAOA;AAOA;AAIA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAMA;AAIA;AACA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAEA;AAGA;AAUA;AAKA;AAIA;AAGA;AAAA;AAAA;AAEA;AAIA;AAGA;AAAA;AAAA;ACrEA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/button/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {Button} from './button';\nimport {ButtonBase} from '../button-base';\nimport {ButtonLink} from '../button-link';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"button\",\n      children: \"Button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" is used for user actions. It unifies \", _jsx(_components.code, {\n        children: \"ButtonPrimary\"\n      }), \", \", _jsx(_components.code, {\n        children: \"ButtonSecondary\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: Button\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"variant\",\n      children: \"Variant\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"ButtonVariant\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/components/component-library\"\n      }), \" to change the \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" variant.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible variants include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonVariant.Primary\"\n        }), \" (default)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"ButtonVariant.Secondary\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"ButtonVariant.Link\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--variant\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button, ButtonVariant } from '../ui/component-library/button';\\n\\n<Button variant={ButtonVariant.Primary}>Button Primary</Button>\\n<Button variant={ButtonVariant.Secondary}>Button Secondary</Button>\\n<Button variant={ButtonVariant.Link}>Button Link</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"ButtonSize\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/components/component-library\"\n      }), \" to change the size of \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"Buttonsize.Md\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Buttonsize.Inherit\"\n        }), \" inherits the font-size of the parent element. For \", _jsx(_components.a, {\n          href: \"/docs/components-componentlibrary-buttonlink--default-story\",\n          children: \"ButtonLink\"\n        }), \" uses only\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Buttonsize.Auto\"\n        }), \" inherits auto height, but keeps the same button font-size. For \", _jsx(_components.a, {\n          href: \"/docs/components-componentlibrary-buttonlink--default-story\",\n          children: \"ButtonLink\"\n        }), \" uses only\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Buttonsize.Sm\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Buttonsize.Md\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Buttonsize.Lg\"\n        }), \" 48px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button, ButtonSize } from '../../component-library';\\n\\n<Button size={Buttonsize.Inherit} />\\n<Button size={Buttonsize.Sm} />\\n<Button size={Buttonsize.Md} />\\n<Button size={Buttonsize.Lg} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"danger\",\n      children: \"Danger\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"danger\"\n      }), \" boolean prop to change the \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" to danger color.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--danger\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button } from '../../component-library';\\n\\n<Button>Normal</Button>\\n<Button danger>Danger</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"href\",\n      children: \"Href\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When an \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" prop is passed it will change the element to an anchor(\", _jsx(_components.code, {\n        children: \"a\"\n      }), \") tag.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--href\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button } from '../../component-library';\\n\\n<Button href=\\\"/\\\">Anchor Element</Button>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"block\",\n      children: \"Block\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use boolean \", _jsx(_components.code, {\n        children: \"block\"\n      }), \" prop to quickly enable a full width block button\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--block\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button } from '../../component-library';\\n\\n<Button>Default Button</Button>\\n<Button block>Block Button</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"as\",\n      children: \"As\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" box prop to change the element of \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"button\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When an \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" prop is passed it will change the element to an anchor(\", _jsx(_components.code, {\n        children: \"a\"\n      }), \") tag.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Button \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" options:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"button\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"a\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--as\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button } from '../../component-library';\\n\\n\\n<Button as=\\\"button\\\">Button Element</Button>\\n<Button as=\\\"a\\\" href=\\\"#\\\">\\n  Anchor Element\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"disabled\",\n      children: \"Disabled\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the boolean \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" prop to disable button\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--disabled\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button } from '../../component-library';\\n\\n<Button disabled>Disabled Button</Button>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"loading\",\n      children: \"Loading\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the boolean \", _jsx(_components.code, {\n        children: \"loading\"\n      }), \" prop to set loading spinner\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--loading\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button } from '../../component-library';\\n\\n<Button loading>Loading Button</Button>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"icon-name\",\n      children: \"Icon Name\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"startIconName\"\n      }), \" and/or \", _jsx(_components.code, {\n        children: \"endIconName\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"IconName\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/components/component-library/icon\"\n      }), \" to select icon.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/story/components-componentlibrary-icon--default-story\",\n        children: \"IconSearch\"\n      }), \" story to find the icon you want to use.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--start-icon-name\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button, IconName } from '../../component-library';\\n\\n<Button startIconName={IconName.AddSquare}>Button</Button>;\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-button--end-icon-name\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Button, IconName } from '../../component-library';\\n\\n<Button endIconName={IconName.Arrow2Right}>Button</Button>;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}