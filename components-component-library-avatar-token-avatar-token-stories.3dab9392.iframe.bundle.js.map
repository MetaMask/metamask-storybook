{"version":3,"file":"components-component-library-avatar-token-avatar-token-stories.3dab9392.iframe.bundle.js","mappings":";AAwBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAUA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAUA;AAIA;AAGA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAEA;AAGA;AAUA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACuJA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/avatar-token/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {AvatarToken} from './avatar-token';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"avatartoken\",\n      children: \"AvatarToken\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AvatarToken\"\n      }), \" is a component responsible for display of the image of a given token\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatartoken--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: AvatarToken\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"AvatarTokenSize\"\n      }), \" enum to change the size of \", _jsx(_components.code, {\n        children: \"AvatarToken\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"IconSize.Sm\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarTokenSize.Xs\"\n        }), \" 16px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarTokenSize.Sm\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarTokenSize.Md\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarTokenSize.Lg\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarTokenSize.Xl\"\n        }), \" 48px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Defaults to \", _jsx(_components.code, {\n        children: \"AvatarTokenSize.Md\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The fallback display of the \", _jsx(_components.code, {\n        children: \"AvatarToken\"\n      }), \" is a circle with the initial letter of the network name. The size of the initial letter is calculated based on the size of the \", _jsx(_components.code, {\n        children: \"AvatarToken\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatartoken--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarToken, AvatarTokenSize } from '../../component-library';\\n\\n<AvatarToken size={AvatarTokenSize.Xs} />\\n<AvatarToken size={AvatarTokenSize.Sm} />\\n<AvatarToken size={AvatarTokenSize.Md} />\\n<AvatarToken size={AvatarTokenSize.Lg} />\\n<AvatarToken size={AvatarTokenSize.Xl} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"name\",\n      children: \"Name\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" prop to set the initial letter of the \", _jsx(_components.code, {\n        children: \"AvatarToken\"\n      }), \". This will be used as the fallback display if no image url is passed to the \", _jsx(_components.code, {\n        children: \"src\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component props to change the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \", \", _jsx(_components.code, {\n        children: \"font-weight\"\n      }), \", \", _jsx(_components.code, {\n        children: \"font-family\"\n      }), \", etc.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatartoken--name\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarToken } from '../../component-library';\\n<AvatarToken name=\\\"eth\\\" />;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"src\",\n      children: \"Src\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"src\"\n      }), \" prop to set the image to be rendered of the \", _jsx(_components.code, {\n        children: \"AvatarToken\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatartoken--src\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarToken } from '../../component-library';\\n\\n<AvatarToken src=\\\"./images/eth_logo.svg\\\" />\\n<AvatarToken src=\\\"./images/arbitrum.svg\\\" />\\n<AvatarToken src=\\\"./images/bnb.png\\\" />\\n<AvatarToken src=\\\"https://static.cx.metamask.io/api/v1/tokenIcons/1/0x6b175474e89094c44da98b954eedeac495271d0f.png\\\" />\\n<AvatarToken src=\\\"https://static.cx.metamask.io/api/v1/tokenIcons/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.png\\\" />\\n<AvatarToken src=\\\"https://static.cx.metamask.io/api/v1/tokenIcons/1/0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0.png\\\" />\\n<AvatarToken src=\\\"https://i.seadn.io/gae/lSm8ChaI-3RqC9MTpi0j3KBXdfdPd57PN5UeQLY49JA3twy9wSt2dpaa22sSc6oyiXi2OEUR6GeFX8jwkZHEMADu6_Bd4EwTJ-rg?w=500&auto=format\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"show-halo\",\n      children: \"Show Halo\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"showHalo\"\n      }), \" prop to display the component with halo effect. Only works if an image url is supplied to \", _jsx(_components.code, {\n        children: \"src\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatartoken--show-halo\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarToken } from '../../component-library';\\n\\n<AvatarToken src=\\\"./images/eth_logo.svg\\\" showHalo />;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color-background-color-and-border-color\",\n      children: \"Color, Background Color And Border Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \", \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"borderColor\"\n      }), \" props to set the text color, background-color and border-color of the \", _jsx(_components.code, {\n        children: \"AvatarToken\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatartoken--color-background-color-and-border-color\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TextColor, BackgroundColor, BorderColor, } from '../../../helpers/constants/design-system';\\nimport { AvatarToken } from '../../component-library';\\n\\n<AvatarToken\\n    backgroundColor={BackgroundColor.goerli}\\n    borderColor={BorderColor.goerli}\\n    name=\\\"G\\\"\\n    color={Color.primaryInverse}\\n>\\n  G\\n</AvatarToken>\\n<AvatarToken\\n  backgroundColor={BackgroundColor.sepolia}\\n  borderColor={BorderColor.sepolia}\\n  name=\\\"S\\\"\\n  color={Color.primaryInverse}\\n>\\n  S\\n</AvatarToken>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}