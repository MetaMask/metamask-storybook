{"version":3,"file":"components-component-library-banner-tip-banner-tip-stories.8cf49c09.iframe.bundle.js","mappings":";AAyqBA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/banner-tip/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {BannerTip} from './banner-tip';\nimport {BannerBase} from '../banner-base';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"bannertip\",\n      children: \"BannerTip\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"BannerTip\"\n      }), \" is an inline notification that offers users educational tips, knowledge, and helpful links\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: BannerTip\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"logo-type\",\n      children: \"Logo Type\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"logoType\"\n      }), \" prop with the \", _jsx(_components.code, {\n        children: \"BannerTipLogoType\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"../../component-library\"\n      }), \" to change the context of \", _jsx(_components.code, {\n        children: \"BannerTip\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible options:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"BannerTipLogoType.Greeting\"\n        }), \" Default\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"BannerTipLogoType.Chat\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--logo-type\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BannerTip } from '../../component-library';\\n\\n<BannerTip logoType={BannerTipLogoType.Greeting}>\\n  This is a demo of greeting.\\n</BannerTip>\\n<BannerTip logoType={BannerTipLogoType.Chat}>\\n  This is a demo of chat.\\n</BannerTip>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"title\",\n      children: \"Title\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" prop to pass a string that is sentence case no period. Use the \", _jsx(_components.code, {\n        children: \"titleProps\"\n      }), \" prop to pass additional props to the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--title\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BannerTip } from '../../component-library';\\n\\n<BannerTip title=\\\"Title is sentence case no period\\\">\\n  Pass only a string through the title prop\\n</BannerTip>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"description\",\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"description\"\n      }), \" is the content area of the \", _jsx(_components.code, {\n        children: \"BannerTip\"\n      }), \" that must be a string. Description shouldn't repeat title and only 1-3 lines.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If content requires more than a string, see \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" prop below.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--description\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BannerTip } from '../../component-library';\\n<BannerTip\\n  title=\\\"Description vs children\\\"\\n  description=\\\"Pass only a string through the description prop or you can use children if the contents require more\\\"\\n/>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" prop is an alternative to \", _jsx(_components.code, {\n        children: \"description\"\n      }), \" for \", _jsx(_components.code, {\n        children: \"BannerTip\"\n      }), \" when more than a string is needed. Children content shouldn't repeat title and only 1-3 lines.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--children\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BannerTip, ButtonLinkSize } from '../../component-library';\\n\\n<BannerTip>\\n  Description shouldn't repeat title. 1-3 lines. Can contain a\\n  <ButtonLink\\n    size={ButtonLinkSize.Auto}\\n    href=\\\"https://metamask.io/\\\"\\n    externalLink\\n  >\\n    hyperlink.\\n  </ButtonLink>\\n</BannerTip>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"action-button-label-onclick--props\",\n      children: \"Action Button Label, onClick, & Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"actionButtonLabel\"\n      }), \" prop to pass text, \", _jsx(_components.code, {\n        children: \"actionButtonOnClick\"\n      }), \" prop to pass an onClick handler, and \", _jsx(_components.code, {\n        children: \"actionButtonProps\"\n      }), \" prop to pass an object of \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-buttonlink--default-story\",\n        children: \"ButtonLink props\"\n      }), \" for the action\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--action-button\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BannerTip, IconName } from '../../component-library';\\n\\n<BannerTip\\n  title=\\\"Action prop demo\\\"\\n  actionButtonLabel=\\\"Action\\\"\\n  actionButtonProps={{\\n    endIconName: IconName.Arrow2Right,\\n  }}\\n  actionButtonOnClick={() => console.log('ButtonLink actionButtonOnClick demo')}\\n>\\n  Use actionButtonLabel for action text, actionButtonOnClick for the onClick\\n  handler, and actionButtonProps to pass any ButtonLink prop types such as\\n  iconName\\n</BannerTip>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"on-close\",\n      children: \"On Close\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"onClose\"\n      }), \" prop to pass a function to the close button. The close button will appear when this prop is used.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Additional props can be passed to the close button with \", _jsx(_components.code, {\n        children: \"closeButtonProps\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--on-close\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BannerTip } from '../../component-library';\\n\\n<BannerTip\\n  title=\\\"onClose demo\\\"\\n  onClose={() => console.log('close button clicked')}\\n>\\n  Click the close button icon to hide this notifcation\\n</BannerTip>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"start-accessory\",\n      children: \"Start Accessory\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"startAccessory\"\n      }), \" prop to pass a ReactNode to the start of the \", _jsx(_components.code, {\n        children: \"BannerTip\"\n      }), \". This is useful for overriding the defaults defined by \", _jsx(_components.code, {\n        children: \"BannerTip\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-bannertip--start-accessory\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BannerTip } from '../../component-library';\\n\\n<BannerTip\\n  startAccessory={<Icon name={IconName.Messages} />}\\n  title=\\\"StartAccessory\\\"\\n>\\n  This is a demo of startAccessory override.\\n</BannerTip>;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}