{"version":3,"file":"components-component-library-tag-url-tag-url-stories.a314ea23.iframe.bundle.js","mappings":";AAsBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAcA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAIA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAUA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACiCA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/tag-url/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {TagUrl} from './tag-url';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"tag-url\",\n      children: \"Tag Url\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"TagUrl\"\n      }), \" is a component used to display dApp information\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tagurl--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: TagUrl\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"action-button-label\",\n      children: \"Action Button Label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"actionButtonLabel\"\n      }), \" to add a \", _jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \" inside of \", _jsx(_components.code, {\n        children: \"TagUrl\"\n      }), \". Use the \", _jsx(_components.code, {\n        children: \"actionButtonProps\"\n      }), \" prop object to add the necessary \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onClick\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tagurl--action-button-label\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TagUrl } from '../../ui/component-library/tag-url';\\n\\n<TagUrl\\n  label=\\\"app.uniswap.org\\\"\\n  src=\\\"https://uniswap.org/favicon.ico\\\"\\n  showLockIcon\\n  actionButtonLabel=\\\"Permissions\\\"\\n  actionButtonProps={{\\n    externalLink: true,\\n    href: 'https://metamask.io',\\n  }}\\n/>\\n<TagUrl\\n  label=\\\"app.uniswap.org\\\"\\n  src=\\\"https://uniswap.org/favicon.ico\\\"\\n  showLockIcon\\n  actionButtonLabel=\\\"Action\\\"\\n  actionButtonProps={{\\n    externalLink: true,\\n    href: 'https://metamask.io',\\n  }}\\n/>\\n<TagUrl\\n  label=\\\"app.uniswap.org\\\"\\n  src=\\\"https://uniswap.org/favicon.ico\\\"\\n  showLockIcon\\n  actionButtonLabel=\\\"Click\\\"\\n  actionButtonProps={{\\n    externalLink: true,\\n    href: 'https://metamask.io',\\n  }}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"show-lock-icon\",\n      children: \"Show Lock Icon\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"showLockIcon\"\n      }), \" prop to render a lock icon next to the \", _jsx(_components.code, {\n        children: \"label\"\n      }), \". It's intended use is to display if the url uses \", _jsx(_components.code, {\n        children: \"https\"\n      }), \". This logic should be added during implementation and is not included in the component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"false\"\n      }), \" by default.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Props for the lock icon can be changed using the \", _jsx(_components.code, {\n        children: \"lockIconProps\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tagurl--show-lock-icon\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TagUrl } from '../../ui/component-library';\\n\\n<TagUrl\\n  label=\\\"app.uniswap.org\\\"\\n  src=\\\"https://uniswap.org/favicon.ico\\\"\\n  showLockIcon\\n  actionButtonLabel=\\\"Permissions\\\"\\n/>\\n\\n<TagUrl src=\\\"\\\" label=\\\"http://notsecure.com\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"src\",\n      children: \"Src\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"src\"\n      }), \" prop with an image url to render the \", _jsx(_components.code, {\n        children: \"AvatarFavicon\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tagurl--src\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TagUrl } from '../../ui/component-library/tag-url';\\n\\n<TagUrl\\n  src=\\\"https://uniswap.org/favicon.ico\\\"\\n  label=\\\"app.uniswap.org\\\"\\n  showLockIcon\\n/>\\n<TagUrl\\n  src=\\\"https://metamask.github.io/test-dapp/metamask-fox.svg\\\"\\n  label=\\\"metamask.github.io\\\"\\n  showLockIcon\\n/>\\n<TagUrl\\n  src=\\\"https://1inch.exchange/assets/favicon/favicon-32x32.png\\\"\\n  label=\\\"1inch.exchange\\\"\\n  showLockIcon\\n/>\\n<TagUrl label=\\\"fallback\\\" src=\\\"\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"label\",\n      children: \"Label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"label\"\n      }), \" prop for the text content of the \", _jsx(_components.code, {\n        children: \"TagUrl\"\n      }), \" component\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note: \", _jsx(_components.code, {\n        children: \"TagUrl\"\n      }), \" doesn't not contain string manipulation logic to detect \", _jsx(_components.code, {\n        children: \"https\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"http\"\n      }), \" it will display whatever is passed to \", _jsx(_components.code, {\n        children: \"label\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-tagurl--label\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TagUrl } from '../../ui/component-library/tag-url';\\n\\n<TagUrl\\n  src=\\\"https://uniswap.org/favicon.ico\\\"\\n  showLockIcon\\n  label=\\\"app.uniswap.org\\\"\\n/>\\n<TagUrl\\n  src=\\\"https://metamask.github.io/test-dapp/metamask-fox.svg\\\"\\n  showLockIcon\\n  label=\\\"metamask.github.io\\\"\\n/>\\n<TagUrl\\n  src=\\\"\\\"\\n  showLockIcon\\n  label=\\\"metamask.github.io\\\"\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}