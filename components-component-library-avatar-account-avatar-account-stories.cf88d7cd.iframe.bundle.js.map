{"version":3,"file":"components-component-library-avatar-account-avatar-account-stories.cf88d7cd.iframe.bundle.js","mappings":";AAyBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAUA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;ACgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAUA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/avatar-account/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {AvatarAccount} from './avatar-account';\nimport {AvatarBase} from '../';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"avataraccount\",\n      children: \"AvatarAccount\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AvatarAccount\"\n      }), \" is a type of avatar reserved for representing accounts.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataraccount--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: AvatarAccount\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"AvatarAccountSize\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"../../component-library\"\n      }), \" to change the size of \", _jsx(_components.code, {\n        children: \"AvatarAccount\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarAccountSize.Xs\"\n        }), \" 16px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarAccountSize.Sm\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarAccountSize.Md\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarAccountSize.Lg\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarAccountSize.Xl\"\n        }), \" 48px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Defaults to \", _jsx(_components.code, {\n        children: \"AvatarAccountSize.MD\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataraccount--size\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarAccount, AvatarAccountSize } from '../../component-library';\\n\\n<AvatarAccount size={AvatarAccountSize.Xs} />\\n<AvatarAccount size={AvatarAccountSize.Sm} />\\n<AvatarAccount size={AvatarAccountSize.Md} />\\n<AvatarAccount size={AvatarAccountSize.Lg} />\\n<AvatarAccount size={AvatarAccountSize.Xl} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"variant\",\n      children: \"Variant\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"AvatarAccountVariant\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"../../component-library\"\n      }), \" to change between jazzicon and blockies variants.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataraccount--variant\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarAccount, AvatarAccountVariant } from '../../component-library';\\n\\n<AvatarAccount variant={AvatarAccountVariant.Jazzicon} />\\n<AvatarAccount variant={AvatarAccountVariant.Blockies} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"address\",\n      children: \"Address\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the required \", _jsx(_components.code, {\n        children: \"address\"\n      }), \" for generating images\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataraccount--address\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarAccount, AvatarAccountVariant } from '../../component-library';\\n\\n<AvatarAccount variant={AvatarAccountVariant.Jazzicon} address=\\\"0x5CfE73b6021E818B776b421B1c4Db2474086a7e1\\\" />\\n<AvatarAccount variant={AvatarAccountVariant.Blockies} address=\\\"0x0\\\" />\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}