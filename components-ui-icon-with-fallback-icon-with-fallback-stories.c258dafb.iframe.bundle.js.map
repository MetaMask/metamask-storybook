{"version":3,"file":"components-ui-icon-with-fallback-icon-with-fallback-stories.c258dafb.iframe.bundle.js","mappings":";AAoBA;AAMA;AAIA;AAGA;AAEA;AAGA;AAEA;AAGA;AAMA;ACgBA;AAAA;AAUA;AAAA","sources":["webpack://metamask-crx/./ui/components/ui/icon-with-fallback/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport IconWithFallback from '.';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"iconwithfallback\",\n      children: \"IconWithFallback\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Icon component that takes an image src and uses \", _jsx(_components.code, {\n        children: \"onError\"\n      }), \" to fallback to the first letter of the icon \", _jsx(_components.code, {\n        children: \"name\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-iconwithfallback--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: IconWithFallback\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following describes the props and example usage for this component.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"fallback\",\n      children: \"Fallback\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the image src errors \", _jsx(_components.code, {\n        children: \"onError\"\n      }), \" the image tag will be replace with a span and the first letter of the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" prop\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-iconwithfallback--default-story\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}