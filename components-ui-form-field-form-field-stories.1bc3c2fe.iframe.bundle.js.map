{"version":3,"file":"components-ui-form-field-form-field-stories.1bc3c2fe.iframe.bundle.js","mappings":";AA4BA;AAAA;AAGA;AAEA;AAIA;AAGA;AAEA;AAGA;AAEA;AAIA;AAGA;AAEA;AAIA;AAGA;AAOA;AAEA;AAaA;ACkKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/ui/form-field/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {Severity} from '../../../helpers/constants/design-system';\nimport {BannerAlert} from '../../component-library/banner-alert';\nimport FormField from '.';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(BannerAlert, {\n      severity: Severity.Warning,\n      title: \"Deprecated\",\n      description: \"FormField has been deprecated in favor of FormTextField\",\n      actionButtonLabel: \"See details\",\n      actionButtonProps: {\n        href: 'https://github.com/MetaMask/metamask-extension/issues/19737'\n      },\n      marginBottom: 4\n    }), \"\\n\", \"\\n\", _jsx(_components.h1, {\n      id: \"form-field\",\n      children: \"Form Field\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Various data fields available for forms and pages.\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-formfield--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: FormField\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"title-detail\",\n      children: \"Title detail\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Show form fields with title detail on the left of the title\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-formfield--form-field-with-title-detail\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"error\",\n      children: \"Error\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Show form fields with error state\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-formfield--form-field-with-error\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"custom-components\",\n      children: \"Custom Components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the custom component props \", _jsx(_components.code, {\n        children: \"TitleTextCustomComponent\"\n      }), \", \", _jsx(_components.code, {\n        children: \"TitleUnitCustomComponent\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"TooltipCustomComponent\"\n      }), \" to replace the default components.\\nIf these props exists they will replace their respective text props. The FormField is wrapped in a Box component that renders as a \", _jsx(_components.code, {\n        children: \"<label />\"\n      }), \" element.\\nTo change the element type, use the \", _jsx(_components.code, {\n        children: \"wrappingLabelProps\"\n      }), \" and polymorphic \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop. e.g \", _jsx(_components.code, {\n        children: \"wrappingLabelProps={{ as: 'div' }}\"\n      }), \". Make sure to provide your own \", _jsx(_components.code, {\n        children: \"<label />\"\n      }), \" element combined with the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" prop and \", _jsx(_components.code, {\n        children: \"htmlFor\"\n      }), \" to ensure accessibility\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-formfield--custom-components\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}