{"version":3,"file":"components-component-library-text-text-stories.1f84b3cf.iframe.bundle.js","mappingscA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAGA;AAIA;AAAA;AAOA;AAeA;AAGA;AAMA;AAcsources":["webpack://metamask-crx/./ui/components/component-library/text/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {Text} from '../text';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    hr: \"hr\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"text\",\n      children: \"Text\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Good typography improves readability, legibility and hierarchy of information.\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"Contribute to improving the UI consistency of the extension by helping to replace the deprecated \", _jsx(_components.code, {\n          children: \"<Typography>\"\n        }), \" with \", _jsx(_components.code, {\n          children: \"<Text>\"\n        }), \". \", _jsx(_components.a, {\n          href: \"#converting-from-typography-to-text\",\n          children: \"See details\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: Text\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"variant\",\n      children: \"Variant\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TextVariant\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the font size of the component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"TextVariant\"\n      }), \" options:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.displayMd (default renders as \", _jsx(_components.code, {\n          children: \"h1\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.headingLg (default renders as \", _jsx(_components.code, {\n          children: \"h2\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.headingMd (default renders as \", _jsx(_components.code, {\n          children: \"h3\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.headingSm (default renders as \", _jsx(_components.code, {\n          children: \"h4\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodyLgMedium (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodyMd (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodyMdBold (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodyMdMedium (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodySm (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodySmMedium (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodySmBold (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodyXs (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.bodyXsMedium (default renders as \", _jsx(_components.code, {\n          children: \"p\"\n        }), \" tag)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"TextVariant.inherit (default renders as \", _jsx(_components.code, {\n          children: \"span\"\n        }), \" tag)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--variant\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.displayMd}>display-md</Text>\\n<Text variant={TextVariant.headingLg}>heading-lg</Text>\\n<Text variant={TextVariant.headingMd}>heading-md</Text>\\n<Text variant={TextVariant.headingSm}>heading-sm</Text>\\n<Text variant={TextVariant.bodyLgMedium}>body-lg-medium</Text>\\n<Text variant={TextVariant.bodyMd}>body-md</Text>\\n<Text variant={TextVariant.bodyMdBold}>body-md-bold</Text>\\n<Text variant={TextVariant.bodyMdMedium}>body-md-medium</Text>\\n<Text variant={TextVariant.bodySm}>body-sm</Text>\\n<Text variant={TextVariant.bodySmMedium}>body-sm-medium</Text>\\n<Text variant={TextVariant.bodySmBold}>body-sm-bold</Text>\\n<Text variant={TextVariant.bodyXs}>body-xs</Text>\\n<Text variant={TextVariant.bodyXsMedium}>body-xs-medium</Text>\\n<Text variant={TextVariant.inherit}>inherit</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color\",\n      children: \"Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TextColor\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the color of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--color-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { TextColor, BackgroundColor } from '../../../helpers/constants/design-system';\\n\\n<Text color={TextColor.textDefault}>\\n  text-default\\n</Text>\\n<Text color={TextColor.textAlternative}>\\n  text-alternative\\n</Text>\\n<Text color={TextColor.textMuted}>\\n  text-muted\\n</Text>\\n<Text color={TextColor.primaryDefault}>\\n  primary-default\\n</Text>\\n<Text color={TextColor.primaryInverse} backgroundColor={BackgroundColor.primaryDefault}>\\n  primary-inverse\\n</Text>\\n<Text color={TextColor.errorDefault}>\\n  error-default\\n</Text>\\n<Text color={TextColor.errorInverse} backgroundColor={BackgroundColor.errorDefault}>\\n  error-inverse\\n</Text>\\n<Text color={TextColor.successDefault}>\\n  success-default\\n</Text>\\n<Text color={TextColor.successInverse} backgroundColor={BackgroundColor.successDefault}>\\n  success-inverse\\n</Text>\\n<Text color={TextColor.warningDefault}>\\n  warning-default\\n</Text>\\n<Text color={TextColor.warningInverse} backgroundColor={BackgroundColor.warningDefault}>\\n  warning-inverse\\n</Text>\\n<Text color={TextColor.infoDefault}>\\n  info-default\\n</Text>\\n<Text color={TextColor.infoInverse} backgroundColor={BackgroundColor.infoDefault}>\\n  info-inverse\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"font-weight\",\n      children: \"Font Weight\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"fontWeight\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"FontWeight\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the font weight of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component. There are 3 font weights:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FontWeight.Normal\"\n        }), \" = \", _jsx(_components.code, {\n          children: \"normal\"\n        }), \" || \", _jsx(_components.code, {\n          children: \"400\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FontWeight.Medium\"\n        }), \" = \", _jsx(_components.code, {\n          children: \"medium\"\n        }), \" || \", _jsx(_components.code, {\n          children: \"500\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FontWeight.Bold\"\n        }), \" = \", _jsx(_components.code, {\n          children: \"bold\"\n        }), \" || \", _jsx(_components.code, {\n          children: \"700\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--font-weight-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { FontWeight } from '../../../helpers/constants/design-system';\\n\\n<Text fontWeight={FontWeight.Normal}>\\n  normal\\n</Text>\\n<Text fontWeight={FontWeight.Medium}>\\n  medium\\n</Text>\\n<Text fontWeight={FontWeight.Bold}>\\n  bold\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"font-style\",\n      children: \"Font Style\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"fontStyle\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"FontStyle\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the font style of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component. There are 2 font styles:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"FontStyle.Normal\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"FontStyle.Italic\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--font-style-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { FontStyle } from '../../../helpers/constants/design-system';\\n\\n<Text fontStyle={FontStyle.Normal}>\\n  normal\\n</Text>\\n<Text fontStyle={FontStyle.Italic}>\\n  bold\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"font-family\",\n      children: \"Font Family\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"fontFamily\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"FontFamily\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./text.types\"\n      }), \" to change the font family of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component. There are 3 font families:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FontFamily.Default\"\n        }), \" (Geist)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FontFamily.Accent\"\n        }), \" (MMSans)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"FontFamily.Hero\"\n        }), \" (MMPoly)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--font-family-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { FontFamily } from '../../../helpers/constants/design-system';\\n\\n<Text fontFamily={FontFamily.Default}>\\n  Default Font (Geist)\\n</Text>\\n<Text fontFamily={FontFamily.Accent}>\\n  Accent Font (MMSans)\\n</Text>\\n<Text fontFamily={FontFamily.Hero}>\\n  Hero Font (MMPoly)\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"text-transform\",\n      children: \"Text Transform\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"textTransform\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TextTransform\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.ts\"\n      }), \" to change the text alignment of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--text-transform-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { TextTransform } from '../../../helpers/constants/design-system';\\n\\n<Text textAlign={TextTransform.Uppercase}>\\n  uppercase\\n</Text>\\n<Text textAlign={TextTransform.Lowercase}>\\n  lowercase\\n</Text>\\n<Text textAlign={TextTransform.Capitalize}>\\n  capitalize\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"text-align\",\n      children: \"Text Align\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"textAlign\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TextAlign\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.ts\"\n      }), \" to change the text alignment of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--text-align-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { TextAlign } from '../../../helpers/constants/design-system';\\n\\n<Text textAlign={TextAlign.Left}>\\n  left\\n</Text>\\n<Text textAlign={TextAlign.Center}>\\n  center\\n</Text>\\n<Text textAlign={TextAlign.Right}>\\n  right\\n</Text>\\n<Text textAlign={TextAlign.Justify}>\\n  justify\\n</Text>\\n<Text textAlign={TextAlign.End}>\\n  end\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"overflow-wrap\",\n      children: \"Overflow Wrap\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"overflowWrap\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"OverflowWrap\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.ts\"\n      }), \" to change the overflow wrap of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--overflow-wrap-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\nimport { OverflowWrap } from '../../../helpers/constants/design-system';\\n\\n<div\\n  style={{\\n    width: 250,\\n    border: '1px solid var(--color-error-default)',\\n    display: 'block',\\n  }}\\n>\\n  <Text overflowWrap={OverflowWrap.Normal}>\\n    {OverflowWrap.Normal}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\\n  </Text>\\n  <Text overflowWrap={OverflowWrap.BreakWord}>\\n    {OverflowWrap.BreakWord}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\\n  </Text>\\n</div>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"ellipsis\",\n      children: \"Ellipsis\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the boolean \", _jsx(_components.code, {\n        children: \"ellipsis\"\n      }), \" prop to change the if the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component to have an ellipsis.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--ellipsis\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\n\\n<div\\n  style={{\\n    width: 250,\\n    border: '1px solid var(--color-error-default)',\\n    display: 'block',\\n  }}\\n>\\n  <Text ellipsis>Ellipsis: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d</Text>\\n  <Text>No Ellipsis: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d</Text>\\n</div>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"as\",\n      children: \"As\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop to change the root html element of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also utilize the \", _jsx(_components.code, {\n        children: \"ValidTag\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./text.types\"\n      }), \" to ensure that you are using a valid html element\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--as\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Display } from '../../../helpers/constants/design-system';\\nimport { Text } from '../../component-library'\\n\\n<Text as=\\\"dd\\\">dd</Text>\\n<Text as=\\\"div\\\">div</Text>\\n<Text as=\\\"dt\\\">dt</Text>\\n<Text as=\\\"em\\\">em</Text>\\n<Text as=\\\"h1\\\">h1</Text>\\n<Text as=\\\"h2\\\">h2</Text>\\n<Text as=\\\"h3\\\">h3</Text>\\n<Text as=\\\"h4\\\">h4</Text>\\n<Text as=\\\"h5\\\">h5</Text>\\n<Text as=\\\"h6\\\">h6</Text>\\n<Text as=\\\"li\\\">li</Text>\\n<Text as=\\\"p\\\">p</Text>\\n<Text display={Display.Block} as=\\\"span\\\">span</Text>\\n<Text display={Display.Block} as=\\\"strong\\\">strong</Text>\\n<Text as=\\\"ul\\\">ul</Text>\\n<Text as=\\\"label\\\">label</Text>\\n<Text as=\\\"header\\\">header</Text>\\n<Text as=\\\"input\\\" placeholder=\\\"input\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Renders the html:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<dd>dd</dd>\\n<div>div</div>\\n<dt>dt</dt>\\n<em>em</em>\\n<h1>h1</h1>\\n<h2>h2</h2>\\n<h3>h3</h3>\\n<h4>h4</h4>\\n<h5>h5</h5>\\n<h6>h6</h6>\\n<li>li</li>\\n<p>p</p>\\n<span>span</span>\\n<strong>strong</strong>\\n<ul>\\n  ul\\n</ul>\\n<label>label</label>\\n<header>header</header>\\n<input placeholder=\\\"input\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"text-direction\",\n      children: \"Text Direction\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"textDirection\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"TextDirection\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./text.types\"\n      }), \" to change the text direction of \", _jsx(_components.code, {\n        children: \"Text\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--text-direction-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text, TextDirection } from '../../component-library';\\n\\n<Text textDirection={TextDirection.LeftToRight}>\\n  This is left to right (ltr) for English and most languages\\n</Text>\\n<Text textDirection={TextDirection.RightToLeft}>\\n  This is right to left (rtl) for use with other languages such as Arabic. This English example is incorrect usage.\\n</Text>\\n<Text textDirection={TextDirection.Auto}>\\n  Let the user agent decide with the auto option\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"strong\",\n      children: \"Strong\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop with the value of \", _jsx(_components.code, {\n        children: \"strong\"\n      }), \" will render the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component as a \", _jsx(_components.code, {\n        children: \"strong\"\n      }), \" element and any \", _jsx(_components.code, {\n        children: \"strong\"\n      }), \" emlements used within a \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component will be supported with bold styles.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-text--strong\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Text } from '../../component-library';\\n\\n<Text as=\\\"strong\\\">\\n  This is an as=\\\"strong\\\" demo.\\n</Text>\\n<Text>\\n  This is a <strong>strong element</strong> demo.\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"class-name\",\n      children: \"Class Name\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Adds an additional class to the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The text content of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h1, {\n      id: \"converting-from-typography-to-text\",\n      children: [\"Converting from \", _jsx(_components.code, {\n        children: \"Typography\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"Text\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Typography\"\n      }), \" component has been deprecated in favor of the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component. You can contribute by submitting a PR against \", _jsx(_components.a, {\n        href: \"https://github.com/MetaMask/metamask-extension/issues/17670\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Replace deprecated Typography with Text component\"\n      }), \" on GitHub. Below are code examples converting from \", _jsx(_components.code, {\n        children: \"Typography\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"variant-1\",\n      children: \"Variant\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Table below is the 1:1 mapping of \", _jsx(_components.code, {\n        children: \"TypographyVariant\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"TextVariant\"\n      }), \" and the html element that needs to be rendered.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The new \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component does not have matching default elements for \", _jsx(_components.code, {\n        children: \"TypographyVariant.H5\"\n      }), \", \", _jsx(_components.code, {\n        children: \"TypographyVariant.H6\"\n      }), \", \", _jsx(_components.code, {\n        children: \"TypographyVariant.H7\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"TypographyVariant.H8\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"TypographyVariant.H9\"\n      }), \" variant.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to use these variants, please use the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop to render the correct html element.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"| TypographyVariant                                          | Typography Tag | TextVariant           | Text Default Tag |\\n| ---------------------------------------------------------- | -------------- | --------------------- | ---------------- |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth1\",\n        children: \"TypographyVariant.H1\"\n      }), \"               | h1             | TextVariant.displayMd | h1               |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth2\",\n        children: \"TypographyVariant.H2\"\n      }), \"               | h2             | TextVariant.headingLg | h2               |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth3\",\n        children: \"TypographyVariant.H3\"\n      }), \"               | h3             | TextVariant.headingMd | h3               |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth4\",\n        children: \"TypographyVariant.H4\"\n      }), \"               | h4             | TextVariant.headingSm | h4               |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth5\",\n        children: \"TypographyVariant.H5\"\n      }), \"               | h5             | TextVariant.bodyMd    | p                |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth6\",\n        children: \"TypographyVariant.H6\"\n      }), \"               | h6             | TextVariant.bodySm    | p                |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvariantparagraph\",\n        children: \"TypographyVariant.Paragraph\"\n      }), \" | p              | TextVariant.bodyMd    | p                |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth7\",\n        children: \"TypographyVariant.H7\"\n      }), \"               | h6             | TextVariant.bodySm    | p                |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth8\",\n        children: \"TypographyVariant.H8\"\n      }), \"               | h6             | TextVariant.bodyXs    | p                |\\n| \", _jsx(_components.a, {\n        href: \"#typographyvarianth9\",\n        children: \"TypographyVariant.H9\"\n      }), \"               | h6             | TextVariant.bodyXs    | p                |\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth1\",\n      children: \"TypographyVariant.H1\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typography variant={TypographyVariant.H1}>Demo</Typography>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.displayMd}>Demo</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth2\",\n      children: \"TypographyVariant.H2\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H2}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.headingLg}>Demo</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth3\",\n      children: \"TypographyVariant.H3\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H3}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.headingMd}>Demo</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth4\",\n      children: \"TypographyVariant.H4\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H4}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.headingSm}>Demo</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth5\",\n      children: \"TypographyVariant.H5\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Requires \", _jsx(_components.code, {\n        children: \"as=\\\"h6\\\"\"\n      }), \" prop for 1:1 conversion\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H5}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.bodyMd} as=\\\"h6\\\">\\n  Demo\\n</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth6\",\n      children: \"TypographyVariant.H6\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Requires \", _jsx(_components.code, {\n        children: \"as=\\\"h6\\\"\"\n      }), \" prop for 1:1 conversion\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H6}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.bodySm} as=\\\"h6\\\">\\n  Demo\\n</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvariantparagraph\",\n      children: \"TypographyVariant.Paragraph\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.Paragraph}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.bodyMd}>Demo</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth7\",\n      children: \"TypographyVariant.H7\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Requires \", _jsx(_components.code, {\n        children: \"as=\\\"h6\\\"\"\n      }), \" prop for 1:1 conversion\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H7}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.bodySm} as=\\\"h6\\\">\\n  Demo\\n</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth8\",\n      children: \"TypographyVariant.H8\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Requires \", _jsx(_components.code, {\n        children: \"as=\\\"h6\\\"\"\n      }), \" prop for 1:1 conversion\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H8}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.bodyXs} as=\\\"h6\\\">\\n  Demo\\n</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"typographyvarianth9\",\n      children: \"TypographyVariant.H9\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Requires \", _jsx(_components.code, {\n        children: \"as=\\\"h6\\\"\"\n      }), \" prop for 1:1 conversion\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\nimport { TypographyVariant } from '../../../helpers/constants/design-system';\\n\\n<Typograpghy variant={TypographyVariant.H9}>Demo</Typograpghy>;\\n\\n// After\\nimport { TextVariant } from '../../../helpers/constants/design-system';\\n\\n<Text variant={TextVariant.bodyXs} as=\\\"h6\\\">\\n  Demo\\n</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"align\",\n      children: \"Align\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The prop name \", _jsx(_components.code, {\n        children: \"align\"\n      }), \" has been deprecated in favor of \", _jsx(_components.code, {\n        children: \"textAlign\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Values using the \", _jsx(_components.code, {\n        children: \"TextAlign\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" remain the same\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\n<Typography align={TEXT_ALIGN.CENTER}>Demo</Typography>;\\n\\n// After\\n<Text textAlign={TextAlign.Center}>Demo</Text>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"box-props\",\n      children: \"Box Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Box props are now integrated with the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You no longer need to pass these props as an object through \", _jsx(_components.code, {\n        children: \"boxProps\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Before\\n<Typography\\n  boxProps={{\\n    backgroundColor: Color.infoMuted,\\n    borderColor: Color.infoDefault,\\n    padding: 4,\\n    borderRadius: 4,\\n  }}\\n  color={Color.textDefault}\\n>\\n  Demo\\n</Typography>;\\n\\n// After\\n<Text\\n  backgroundColor={Color.infoMuted}\\n  borderColor={Color.infoDefault}\\n  padding={4}\\n  borderRadius={4}\\n  color={Color.textDefault}\\n>\\n  Demo\\n</Text>;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}