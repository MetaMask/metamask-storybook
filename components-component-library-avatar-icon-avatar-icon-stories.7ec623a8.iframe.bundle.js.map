{"version":3,"file":"components-component-library-avatar-icon-avatar-icon-stories.7ec623a8.iframe.bundle.js","mappings":";AAyBA;AAOA;AAOA;AAIA;AAGA;AAEA;AAMA;AACA;AAEA;AAGA;AAQA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAQA;AAQA;AAKA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAcA;AAKA;AAKA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACoBA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/avatar-icon/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {AvatarBase} from '../';\nimport {AvatarIcon} from './avatar-icon';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"avataricon\",\n      children: \"AvatarIcon\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AvatarIcon\"\n      }), \" is an avatar component that renders only an icon inside and is built off the \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-avatarbase--default-story\",\n        children: \"AvatarBase\"\n      }), \") component\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataricon--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: AvatarIcon\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"AvatarIcon\"\n      }), \" accepts all \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-avatarbase--default-story\",\n        children: \"AvatarBase\"\n      }), \")\\ncomponent props\"]\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: AvatarBase\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"AvatarIconSize\"\n      }), \" enum to change the size of \", _jsx(_components.code, {\n        children: \"AvatarIcon\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarIconSize.Xs\"\n        }), \" 16px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarIconSize.Sm\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarIconSize.Md\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarIconSize.Lg\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarIconSize.Xl\"\n        }), \" 48px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Defaults to \", _jsx(_components.code, {\n        children: \"AvatarIconSize.Md\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataricon--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarIcon, AvatarIconSize } from '../../component-library';\\n\\n    <AvatarIcon {...args} size={AvatarIconSize.Xs} />\\n    <AvatarIcon {...args} size={AvatarIconSize.Sm} />\\n    <AvatarIcon {...args} size={AvatarIconSize.Md} />\\n    <AvatarIcon {...args} size={AvatarIconSize.Lg} />\\n    <AvatarIcon {...args} size={AvatarIconSize.Xl} />\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"icon-name\",\n      children: [\"Icon Name\", _jsx(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \"*\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the required \", _jsx(_components.code, {\n        children: \"iconName\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"IconName\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/components/component-library\"\n      }), \" to select icon\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/story/components-componentlibrary-icon--default-story\",\n        children: \"IconSearch\"\n      }), \" story to find the icon you want to use.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataricon--icon-name-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarIcon, IconName } from '../../component-library';\\n\\n<AvatarIcon iconName={IconName.SwapHorizontal} />\\n<AvatarIcon iconName={IconName.Confirmation} />\\n<AvatarIcon iconName={IconName.Info} />\\n<AvatarIcon iconName={IconName.Warning} />\\n<AvatarIcon iconName={IconName.Danger} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color-and-background-color\",\n      children: \"Color and Background Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" props with the \", _jsx(_components.code, {\n        children: \"IconColor\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"BackgroundColor\"\n      }), \" object from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the icon color and background color of \", _jsx(_components.code, {\n        children: \"AvatarIcon\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"color\"\n      }), \" default: \", _jsx(_components.code, {\n        children: \"IconColor.primaryDefault\"\n      }), \"\\n\", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" default: \", _jsx(_components.code, {\n        children: \"BackgroundColor.primaryMuted\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avataricon--color-and-background-color\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { BackgroundColor, IconColor } from '../../../helpers/constants/design-system';\\nimport { AvatarIcon } from '../../component-library';\\n\\n<AvatarIcon color={IconColor.primaryDefault} backgroundColor={BackgroundColor.primaryMuted} />\\n<AvatarIcon color={IconColor.primaryInverse} backgroundColor={BackgroundColor.primaryDefault} />\\n<AvatarIcon color={IconColor.successDefault} backgroundColor={BackgroundColor.successMuted} />\\n<AvatarIcon color={IconColor.infoDefault} backgroundColor={BackgroundColor.infoMuted} />\\n<AvatarIcon color={IconColor.warningDefault} backgroundColor={BackgroundColor.warningMuted} />\\n<AvatarIcon color={IconColor.errorDefault} backgroundColor={BackgroundColor.errorMuted} />\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}