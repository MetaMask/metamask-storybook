"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[25694],{"./ui/components/ui/info-tooltip/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_info_tooltip__WEBPACK_IMPORTED_MODULE_0__.A});var _info_tooltip__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./ui/components/ui/info-tooltip/info-tooltip.js")},"./ui/pages/swaps/fee-card/fee-card.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>fee_card_stories});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),zendesk_url=__webpack_require__("./ui/helpers/constants/zendesk-url.js"),i18n=__webpack_require__("./ui/contexts/i18n.js"),info_tooltip=__webpack_require__("./ui/components/ui/info-tooltip/index.js"),transaction_detail_component=__webpack_require__("./ui/pages/confirmations/components/transaction-detail/transaction-detail.component.js"),transaction_detail_item_component=__webpack_require__("./ui/pages/confirmations/components/transaction-detail-item/transaction-detail-item.component.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),metametrics=__webpack_require__("./ui/contexts/metametrics.js"),constants_metametrics=__webpack_require__("./shared/constants/metametrics.ts"),selectors=__webpack_require__("./ui/selectors/index.js"),component_library=__webpack_require__("./ui/components/component-library/index.ts");function FeeCard(param){var primaryFee=param.primaryFee,secondaryFee=param.secondaryFee,hideTokenApprovalRow=param.hideTokenApprovalRow,tokenApprovalSourceTokenSymbol=param.tokenApprovalSourceTokenSymbol,onTokenApprovalClick=param.onTokenApprovalClick,metaMaskFee=param.metaMaskFee,numberOfQuotes=param.numberOfQuotes,onQuotesClick=param.onQuotesClick,t=(0,react.useContext)(i18n.gJ),useCurrencyRateCheck=(0,es.d4)(selectors.B4w),trackEvent=(0,react.useContext)(metametrics.O2),tokenApprovalTextComponent=react.createElement("span",{key:"fee-card-approve-symbol",className:"fee-card__bold"},t("enableToken",[tokenApprovalSourceTokenSymbol]));return react.createElement("div",{className:"fee-card"},react.createElement("div",{className:"fee-card__main"},react.createElement(transaction_detail_component.A,{disableEditGasFeeButton:!0,rows:[react.createElement(transaction_detail_item_component.A,{key:"fee-card-gas-item",detailTitle:react.createElement(react.Fragment,null,t("transactionDetailGasHeading"),react.createElement(info_tooltip.A,{position:"top",contentText:react.createElement("p",{className:"fee-card__info-tooltip-paragraph"},t("swapGasFeesExplanation",[react.createElement(component_library.vx,{size:component_library.wL.Inherit,href:zendesk_url.A.GAS_FEES,target:"_blank",rel:"noopener noreferrer",externalLink:!0,key:"gas-fees-learn-more",onClick:function(){trackEvent({event:'Clicked "Gas Fees: Learn More" Link',category:constants_metametrics.FZ.Swaps})}},t("swapGasFeesExplanationLinkText"))])),containerClassName:"fee-card__info-tooltip-content-container",wrapperClassName:"fee-card__row-label fee-card__info-tooltip-container"})),detailText:primaryFee.fee,detailTotal:useCurrencyRateCheck&&secondaryFee.fee,subText:((null==secondaryFee?void 0:secondaryFee.maxFee)!==void 0||(null==primaryFee?void 0:primaryFee.maxFee)!==void 0)&&react.createElement(react.Fragment,null,react.createElement(component_library.EY,{as:"span",fontWeight:design_system.IT.Bold,color:design_system.r7.textAlternative,variant:design_system.J3.bodySm},t("maxFee")),useCurrencyRateCheck?": ".concat(secondaryFee.maxFee):": ".concat(primaryFee.maxFee))})]}),!hideTokenApprovalRow&&react.createElement("div",{className:"fee-card__row-header"},react.createElement("div",{className:"fee-card__row-label"},react.createElement("div",{className:"fee-card__row-header-text"},t("swapEnableTokenForSwapping",[tokenApprovalTextComponent]),react.createElement(info_tooltip.A,{position:"top",contentText:t("swapEnableDescription",[tokenApprovalSourceTokenSymbol]),containerClassName:"fee-card__info-tooltip-container"}))),react.createElement("div",{className:"fee-card__link",onClick:function(){return onTokenApprovalClick()}},t("swapEditLimit"))),react.createElement("div",{className:"fee-card__row-header"},react.createElement("div",{className:"fee-card__row-label"},react.createElement("div",{className:"fee-card__row-header-text"},numberOfQuotes>1&&react.createElement("span",{onClick:onQuotesClick,className:"fee-card__quote-link-text"},t("swapNQuotesWithDot",[numberOfQuotes])),t("swapIncludesMMFee",[metaMaskFee]),react.createElement(info_tooltip.A,{position:"top",contentText:t("swapMetaMaskFeeDescription",[metaMaskFee]),wrapperClassName:"fee-card__info-tooltip-container"}))))))}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}FeeCard.propTypes={primaryFee:prop_types_default().shape({fee:prop_types_default().string.isRequired,maxFee:prop_types_default().string.isRequired}).isRequired,secondaryFee:prop_types_default().shape({fee:prop_types_default().string.isRequired,maxFee:prop_types_default().string.isRequired}),hideTokenApprovalRow:prop_types_default().bool.isRequired,tokenApprovalSourceTokenSymbol:prop_types_default().string,onTokenApprovalClick:prop_types_default().func,metaMaskFee:prop_types_default().string.isRequired,onQuotesClick:prop_types_default().func.isRequired,numberOfQuotes:prop_types_default().number.isRequired},FeeCard.__docgenInfo={description:"",methods:[],displayName:"FeeCard",props:{primaryFee:{description:"",type:{name:"shape",value:{fee:{name:"string",required:!0},maxFee:{name:"string",required:!0}}},required:!0},secondaryFee:{description:"",type:{name:"shape",value:{fee:{name:"string",required:!0},maxFee:{name:"string",required:!0}}},required:!1},hideTokenApprovalRow:{description:"",type:{name:"bool"},required:!0},tokenApprovalSourceTokenSymbol:{description:"",type:{name:"string"},required:!1},onTokenApprovalClick:{description:"",type:{name:"func"},required:!1},metaMaskFee:{description:"",type:{name:"string"},required:!0},onQuotesClick:{description:"",type:{name:"func"},required:!0},numberOfQuotes:{description:"",type:{name:"number"},required:!0}}};var containerStyle={width:"300px"};let fee_card_stories={title:"Pages/Swaps/FeeCard",component:FeeCard,argTypes:{primaryFee:{control:{type:"text"}},primaryMaxFee:{control:{type:"text"}},secondaryFee:{control:{type:"text"}},secondaryMaxFee:{control:{type:"text"}},onFeeCardMaxRowClick:{action:"Clicked max fee row edit link"},hideTokenApprovalRow:{control:{type:"boolean"}},tokenApprovalSourceTokenSymbol:{control:{type:"text"}},onTokenApprovalClick:{action:"Clicked on token approval"},metaMaskFee:{control:{type:"text"}},onQuotesClick:{action:"Clicked on quotes link"},numberOfQuotes:{control:{type:"number"}},chainId:{control:{type:"text"}},smartTransactionsOptInStatus:{control:{type:"boolean"}},smartTransactionsEnabled:{control:{type:"boolean"}},isBestQuote:{control:{type:"boolean"}}},args:{primaryFee:"1 ETH",primaryMaxFee:"2 ETH",secondaryFee:"100 USD",secondaryMaxFee:"200 USD",hideTokenApprovalRow:!1,tokenApprovalSourceTokenSymbol:"ABC",metaMaskFee:"0.875",numberOfQuotes:6}};var DefaultStory=function(args){var primaryFee=args.primaryFee,primaryMaxFee=args.primaryMaxFee,secondaryFee=args.secondaryFee,secondaryMaxFee=args.secondaryMaxFee,rest=_object_without_properties(args,["primaryFee","primaryMaxFee","secondaryFee","secondaryMaxFee"]);return react.createElement("div",{style:containerStyle},react.createElement(FeeCard,_object_spread({primaryFee:{fee:primaryFee,maxFee:primaryMaxFee},secondaryFee:{fee:secondaryFee,maxFee:secondaryMaxFee}},rest)))};DefaultStory.storyName="Default",DefaultStory.parameters={...DefaultStory.parameters,docs:{...DefaultStory.parameters?.docs,source:{originalSource:`args => {
  // Please note, currently nested arg types are not possible, but discussions are open:
  // https://github.com/storybookjs/storybook/issues/11486
  const {
    primaryFee,
    primaryMaxFee,
    secondaryFee,
    secondaryMaxFee,
    ...rest
  } = args;
  return <div style={containerStyle}>
      <FeeCard primaryFee={{
      fee: primaryFee,
      maxFee: primaryMaxFee
    }} secondaryFee={{
      fee: secondaryFee,
      maxFee: secondaryMaxFee
    }} {...rest} />
    </div>;
}`,...DefaultStory.parameters?.docs?.source}}};let __namedExportsOrder=["DefaultStory"]}}]);
//# sourceMappingURL=pages-swaps-fee-card-fee-card-stories.fbfcf6ca.iframe.bundle.js.map