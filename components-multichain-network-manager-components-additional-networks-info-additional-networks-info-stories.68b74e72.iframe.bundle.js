"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[53460],{"./ui/components/multichain/network-manager/components/additional-networks-info/additional-networks-info.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_redux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-redux/es/index.js"),_store_store__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/store/store.ts"),___WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/components/multichain/network-manager/components/additional-networks-info/index.ts"),customNetworkStore=(0,_store_store__WEBPACK_IMPORTED_MODULE_2__.A)({});let __WEBPACK_DEFAULT_EXPORT__={title:"Components/Multichain/NetworkManager/AdditionalNetworks",component:___WEBPACK_IMPORTED_MODULE_3__.r,argTypes:{}};var DefaultStory=function(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_3__.r,null)};DefaultStory.decorators=[function(Story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_redux__WEBPACK_IMPORTED_MODULE_1__.Kq,{store:customNetworkStore},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))}],DefaultStory.parameters={...DefaultStory.parameters,docs:{...DefaultStory.parameters?.docs,source:{originalSource:"() => <AdditionalNetworksInfo />",...DefaultStory.parameters?.docs?.source}}};let __namedExportsOrder=["DefaultStory"]},"./ui/components/multichain/network-manager/components/additional-networks-info/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>AdditionalNetworksInfo});var react=__webpack_require__("./node_modules/react/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),zendesk_url=__webpack_require__("./ui/helpers/constants/zendesk-url.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),box=__webpack_require__("./ui/components/component-library/box/index.ts"),icon=__webpack_require__("./ui/components/component-library/icon/index.ts"),component_library_text=__webpack_require__("./ui/components/component-library/text/index.ts");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var AdditionalNetworksInfo=(0,react.memo)(function(){var t=(0,useI18nContext.P)(),_useState=_sliced_to_array((0,react.useState)(!1),2),isOpen=_useState[0],setIsOpen=_useState[1],_useState1=_sliced_to_array((0,react.useState)(null),2),referenceElement=_useState1[0],setReferenceElement=_useState1[1],handleMouseEnter=(0,react.useCallback)(function(){setIsOpen(!0)},[]),handleMouseLeave=(0,react.useCallback)(function(){setIsOpen(!1)},[]),setBoxRef=(0,react.useCallback)(function(ref){setReferenceElement(ref)},[]),handleLearnMoreClick=(0,react.useCallback)(function(){__webpack_require__.g.platform.openTab({url:zendesk_url.A.UNKNOWN_NETWORK})},[]);return react.createElement(box.a,{paddingTop:2,paddingRight:4,paddingLeft:4,onMouseLeave:handleMouseLeave},react.createElement(box.a,{display:design_system.nl.Flex,justifyContent:design_system.A9.spaceBetween},react.createElement(box.a,{display:design_system.nl.InlineFlex,ref:setBoxRef},react.createElement(component_library_text.EY,{color:design_system.r7.textAlternative,variant:design_system.J3.bodyMdMedium},t("additionalNetworks")),react.createElement(box.a,{marginTop:1},react.createElement(icon.In,{onMouseEnter:handleMouseEnter,className:"add-network__warning-icon",name:component_library.$M.Info,color:design_system.Li.iconMuted,size:component_library.lK.Sm,marginLeft:2}),react.createElement(component_library.AM,{referenceElement:referenceElement,position:component_library.$x.TopStart,paddingTop:3,paddingBottom:3,offset:[16,12],isOpen:isOpen,flip:!0,backgroundColor:design_system.i0.backgroundSection,onMouseLeave:handleMouseLeave,style:{zIndex:1e3,width:"326px"}},react.createElement(component_library_text.EY,{variant:design_system.J3.bodyMd},t("popularNetworkAddToolTip")),react.createElement(box.a,{key:"learn-more-link"},react.createElement(component_library.vx,{size:component_library.wL.Auto,externalLink:!0,onClick:handleLearnMoreClick},t("learnMoreUpperCase"))))))))});try{AdditionalNetworksInfo.displayName="AdditionalNetworksInfo",AdditionalNetworksInfo.__docgenInfo={description:`AdditionalNetworksInfo Component

Displays information about additional networks in the network manager with
an info tooltip that appears on hover to provide more context to the user.`,displayName:"AdditionalNetworksInfo",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/components/multichain/network-manager/components/additional-networks-info/additional-networks-info.tsx#AdditionalNetworksInfo"]={docgenInfo:AdditionalNetworksInfo.__docgenInfo,name:"AdditionalNetworksInfo",path:"ui/components/multichain/network-manager/components/additional-networks-info/additional-networks-info.tsx#AdditionalNetworksInfo"})}catch(__react_docgen_typescript_loader_error){}}}]);