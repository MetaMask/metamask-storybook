{"version":3,"file":"components-ui-button-group-button-group-stories.66e40dfc.iframe.bundle.js","mappings":";AAqBA;AAEA;AAIA;AAGA;AAEA;AAGA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAGA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAGA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA","sources":["webpack://metamask-crx/./ui/components/ui/button-group/README.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport ButtonGroup from '.';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"button-group\",\n      children: \"Button Group\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Button Group is a wrapper for buttons to align them horizontally\"\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-buttongroup--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: ButtonGroup\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"with-disabled-button\",\n      children: \"With Disabled Button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By changing the \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" value to true, the buttons inside the button group component will be disabled\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonGroup disabled>\\n  <button>cheap</button>\\n  <button>average</button>\\n  <button>fast</button>\\n</ButtonGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-buttongroup--with-disabled-button\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"with-radio-button\",\n      children: \"With Radio Button\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rendering radio type button instead\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonGroup variant=\\\"radiogroup\\\">\\n  <button>cheap</button>\\n  <button>average</button>\\n  <button>fast</button>\\n</ButtonGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-buttongroup--with-radio-button\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"no-active-button\",\n      children: \"No Active Button\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rendering button group without active button\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ButtonGroup noButtonActiveByDefault>\\n  <button>cheap</button>\\n  <button>average</button>\\n  <button>fast</button>\\n</ButtonGroup>\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-ui-buttongroup--no-active-button\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}