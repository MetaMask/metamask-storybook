{"version":3,"file":"components-component-library-button-icon-button-icon-stories.8e644e3c.iframe.bundle.js","mappings":";AAwBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAQA;AAQA;AAKA;AAIA;AAGA;AAAA;AAAA;AAEA;AAGA;AAYA;AAEA;AACA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAIA;AACA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAUA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;ACnDA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAUA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/button-icon/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {ButtonIcon} from './button-icon';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"buttonicon\",\n      children: \"ButtonIcon\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \" is used for icons associated with a user action.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: ButtonIcon\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"icon-name\",\n      children: [\"Icon Name\", _jsx(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \"*\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the required \", _jsx(_components.code, {\n        children: \"iconName\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"IconName\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/components/component-library\"\n      }), \" to select icon.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/story/components-componentlibrary-icon--default-story\",\n        children: \"IconSearch\"\n      }), \" story to find the icon you want to use.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--icon-name-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ButtonIcon, IconName } from '../../component-library';\\n\\n<ButtonIcon iconName={IconName.Close} ariaLabel=\\\"Close\\\" />;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"ButtonIconSize\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/components/component-library/icon\"\n      }), \" to change the size of \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"ButtonIconSize.Sm\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonIconSize.Sm\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonIconSize.Lg\"\n        }), \" 32px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"\\nimport { ButtonIcon, ButtonIconSize, IconName } from '../../component-library';\\n\\n<ButtonIcon size={ButtonIconSize.Sm} iconName={IconName.Close} ariaLabel=\\\"Close\\\"/>\\n<ButtonIcon size={ButtonIconSize.Lg} iconName={IconName.Close} ariaLabel=\\\"Close\\\"/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"aria-label\",\n      children: \"Aria Label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"ariaLabel\"\n      }), \" prop to set the name of the ButtonIcon for proper accessibility\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--aria-label\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { IconColor } from '../../../helpers/constants/design-system';\\nimport { ButtonIcon, IconName } from '../../component-library';\\n\\n\\n<ButtonIcon as=\\\"button\\\" iconName={IconName.Close} ariaLabel=\\\"Close\\\"/>\\n<ButtonIcon as=\\\"a\\\" href=\\\"https://metamask.io/\\\" target=\\\"_blank\\\" iconName={IconName.Export} color={IconColor.primaryDefault} ariaLabel=\\\"Visit MetaMask.io\\\"/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"as\",\n      children: \"As\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" box prop to change the element of \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"button\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Button \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" options:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"button\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"a\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--as\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { IconColor } from '../../../helpers/constants/design-system';\\nimport { ButtonIcon, IconName } from '../../component-library';\\n\\n\\n<ButtonIcon as=\\\"button\\\" iconName={IconName.Close} ariaLabel=\\\"Close\\\"/>\\n<ButtonIcon as=\\\"a\\\" href=\\\"https://metamask.io/\\\" target=\\\"_blank\\\" iconName={IconName.Export} color={IconColor.primaryDefault} ariaLabel=\\\"Visit MetaMask.io\\\"/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"href\",\n      children: \"Href\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When an \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" prop is passed it will change the element to an anchor(\", _jsx(_components.code, {\n        children: \"a\"\n      }), \") tag.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--href\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { IconColor } from '../../../helpers/constants/design-system';\\nimport { ButtonIcon, IconName } from '../../component-library';\\n\\n<ButtonIcon\\n  href=\\\"https://metamask.io/\\\"\\n  target=\\\"_blank\\\"\\n  iconName={IconName.Export}\\n  color={IconColor.primaryDefault}\\n  ariaLabel=\\\"Visit MetaMask.io\\\"\\n/>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color\",\n      children: \"Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"Color\"\n      }), \" object to change the color of the \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"Color.iconDefault\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--color-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { IconColor } from '../../../helpers/constants/design-system';\\nimport { ButtonIcon, IconName } from '../../component-library';\\n\\n<ButtonIcon\\n  iconName={IconName.Export}\\n  color={IconColor.primaryDefault}\\n  ariaLabel=\\\"Visit MetaMask.io\\\"\\n/>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"disabled\",\n      children: \"Disabled\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the boolean \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" prop to disable button\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonicon--disabled\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ButtonIcon, IconName } from '../../component-library';\\n\\n<ButtonIcon iconName={IconName.Close} disabled ariaLabel=\\\"Close\\\" />;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}