{"version":3,"file":"components-component-library-modal-header-modal-header-stories.0bff5669.iframe.bundle.js","mappings":";AAsBA;AAOA;AAOA;AAIA;AAGA;AAOA;AAEA;AAGA;AAQA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;ACpBA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAUA;AAAA;AAUA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/modal-header/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {ModalHeader} from './modal-header';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"modalheader\",\n      children: \"ModalHeader\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"ModalHeader\"\n      }), \" handles the title, close button and back button for all Modal components. It is built on top of the \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-headerbase--default-story\",\n        children: \"HeaderBase\"\n      }), \" component\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalheader--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"ModalHeader\"\n      }), \" accepts all props below as well as all \", _jsx(_components.a, {\n        href: \"/docs/ui-components-ui-box-box-stories-js--default-story#props\",\n        children: \"Box\"\n      }), \" component props\"]\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: ModalHeader\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The title of the \", _jsx(_components.code, {\n        children: \"ModalHeader\"\n      }), \" component. Passing a \", _jsx(_components.code, {\n        children: \"string\"\n      }), \" will render the content inside of a \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component. Passing any other type will render the content as is.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalheader--children\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  TextVariant,\\n  TextAlign,\\n  DISPLAY,\\n  FLEX_DIRECTION,\\n  AlignItems,\\n  JustifyContent,\\n} from '../../../helpers/constants/design-system';\\n\\nimport { ModalHeader,  AvatarAccount, Text } from '../../component-library';\\n\\n<ModalHeader {...args} marginBottom={4}>\\n  Children as string\\n</ModalHeader>\\n<ModalHeader\\n  {...args}\\n  childrenWrapperProps={{\\n    display: DISPLAY.FLEX,\\n    flexDirection: FLEX_DIRECTION.COLUMN,\\n    alignItems: AlignItems.center,\\n    justifyContent: JustifyContent.center,\\n  }}\\n>\\n  <AvatarAccount address=\\\"0x1234\\\" />\\n  <Text variant={TextVariant.headingSm} textAlign={TextAlign.Center}>\\n    Custom header using multiple components\\n  </Text>\\n</ModalHeader>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"onback\",\n      children: \"onBack\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the onClick handler \", _jsx(_components.code, {\n        children: \"onBack\"\n      }), \" prop to render the \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \" back button in the startAccessory position.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"backButtonProps\"\n      }), \" prop to pass additional props to the \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \" back button.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalheader--on-back\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ModalHeader } from '../../component-library';\\n\\n<ModalHeader onBack={() => console.log('Back button click')}>\\n  OnBack Demo\\n</ModalHeader>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"onclose\",\n      children: \"onClose\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the onClick handler \", _jsx(_components.code, {\n        children: \"onClose\"\n      }), \" prop to render the \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \" back button in the endAccessory position.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"backButtonProps\"\n      }), \" prop to pass additional props to the \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \" back button.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalheader--on-close\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ModalHeader } from '../../component-library';\\n\\n<ModalHeader onClose={() => console.log('Back button click')}>\\n  OnClose Demo\\n</ModalHeader>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"startaccessory\",\n      children: \"startAccessory\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"startAccessory\"\n      }), \" prop to render a component in the startAccessory position. This will override the default back \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalheader--start-accessory\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ModalHeader, Button, ButtonSize } from '../../component-library';\\n\\n<ModalHeader startAccessory={<Button size={ButtonSize.Sm}>Demo</Button>}>\\n  StartAccessory\\n</ModalHeader>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"endaccessory\",\n      children: \"endAccessory\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"endAccessory\"\n      }), \" prop to render a component in the endAccessory position. This will override the default close \", _jsx(_components.code, {\n        children: \"ButtonIcon\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalheader--end-accessory\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ModalHeader, Button, ButtonSize } from '../../component-library';\\n\\n<ModalHeader endAccessory={<Button size={ButtonSize.Sm}>Demo</Button>}>\\n  EndAccessory\\n</ModalHeader>;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}