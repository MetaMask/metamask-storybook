{"version":3,"file":"components-component-library-sensitive-text-sensitive-text-stories.cfe2451c.iframe.bundle.js","mappings":";AAuBA;AAEA;AAEA;AAGA;AAQA;AAEA;AAGA;AAEA;AAEA;AAGA;AAAA;AAAA;AAEA;AAGA;AAQA;AAEA;AAGA;AAAA;AAAA;AAEA;AAGA;AAMA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACZA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/sensitive-text/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Controls, Canvas} from '@storybook/blocks';\nimport * as SensitiveTextStories from './sensitive-text.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"sensitivetext\",\n      children: \"SensitiveText\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"SensitiveText is a component that extends the Text component to handle sensitive information. It provides the ability to hide or show the text content, replacing it with dots when hidden.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: SensitiveTextStories.DefaultStory\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"SensitiveText\"\n      }), \" component extends the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component. See the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component for an extended list of props.\"]\n    }), \"\\n\", _jsx(Controls, {\n      of: SensitiveTextStories.DefaultStory\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The text content to be displayed or hidden.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: SensitiveTextStories.Children\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { SensitiveText } from '../../component-library';\\n\\n<SensitiveText>Sensitive Information</SensitiveText>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"ishidden\",\n      children: \"IsHidden\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"isHidden\"\n      }), \" prop to determine whether the text should be hidden or visible. When \", _jsx(_components.code, {\n        children: \"isHidden\"\n      }), \" is \", _jsx(_components.code, {\n        children: \"true\"\n      }), \", the component will display dots instead of the actual text.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      of: SensitiveTextStories.IsHidden\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { SensitiveText } from '../../component-library';\\n\\n<SensitiveText isHidden>Sensitive Information</SensitiveText>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"length\",\n      children: \"Length\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"length\"\n      }), \" prop to determine the length of the hidden text (number of dots). Can be a predefined \", _jsx(_components.code, {\n        children: \"SensitiveTextLength\"\n      }), \" or a custom string number.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following predefined length options are available:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"SensitiveTextLength.Short\"\n          }), \": \", _jsx(_components.code, {\n            children: \"6\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"SensitiveTextLength.Medium\"\n          }), \": \", _jsx(_components.code, {\n            children: \"9\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"SensitiveTextLength.Long\"\n          }), \": \", _jsx(_components.code, {\n            children: \"12\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"SensitiveTextLength.ExtraLong\"\n          }), \": \", _jsx(_components.code, {\n            children: \"20\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"The number of dots displayed is determined by the \", _jsx(_components.code, {\n            children: \"length\"\n          }), \" prop.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"If an invalid \", _jsx(_components.code, {\n            children: \"length\"\n          }), \" is provided, the component will fall back to \", _jsx(_components.code, {\n            children: \"SensitiveTextLength.Short\"\n          }), \" and log a warning.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Custom length values can be provided as strings, e.g. \", _jsx(_components.code, {\n            children: \"15\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      of: SensitiveTextStories.Length\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { SensitiveText, SensitiveTextLength } from '../../component-library';\\n\\n<SensitiveText length={SensitiveTextLength.Short}>\\n  Length \\\"short\\\" (6 characters)\\n</SensitiveText>\\n<SensitiveText length={SensitiveTextLength.Medium}>\\n  Length \\\"medium\\\" (9 characters)\\n</SensitiveText>\\n<SensitiveText length={SensitiveTextLength.Long}>\\n  Length \\\"long\\\" (12 characters)\\n</SensitiveText>\\n<SensitiveText length={SensitiveTextLength.ExtraLong}>\\n  Length \\\"extra long\\\" (20 characters)\\n</SensitiveText>\\n<SensitiveText length=\\\"15\\\">\\n  Length \\\"15\\\" (15 characters)\\n</SensitiveText>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}