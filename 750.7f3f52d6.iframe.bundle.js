"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[750],{"./ui/pages/confirmations/components/confirm/info/shared/edit-gas-fees-row/edit-gas-fees-row.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>EditGasFeesRow});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),network=__webpack_require__("./shared/constants/network.ts"),alert_row=__webpack_require__("./ui/components/app/confirm/info/row/alert-row/alert-row.tsx"),constants=__webpack_require__("./ui/components/app/confirm/info/row/constants.ts"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),tooltip=__webpack_require__("./ui/components/ui/tooltip/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),selectors=__webpack_require__("./ui/selectors/index.js"),context_confirm=__webpack_require__("./ui/pages/confirmations/context/confirm/index.tsx"),edit_gas_icon_button=__webpack_require__("./ui/pages/confirmations/components/confirm/info/shared/edit-gas-icon/edit-gas-icon-button.tsx"),selected_gas_fee_token=__webpack_require__("./ui/pages/confirmations/components/confirm/info/shared/selected-gas-fee-token/selected-gas-fee-token.tsx"),useGasFeeToken=__webpack_require__("./ui/pages/confirmations/components/confirm/info/hooks/useGasFeeToken.ts"),preferences=__webpack_require__("./ui/pages/confirmations/selectors/preferences.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}var EditGasFeesRow=function(param){var fiatFee=param.fiatFee,fiatFeeWith18SignificantDigits=param.fiatFeeWith18SignificantDigits,nativeFee=param.nativeFee,supportsEIP1559=param.supportsEIP1559,setShowCustomizeGasPopover=param.setShowCustomizeGasPopover,t=(0,useI18nContext.P)(),transactionMeta=(0,context_confirm.TW)().currentConfirmation,showAdvancedDetails=(0,es.d4)(preferences.O6),chainId=transactionMeta.chainId,gasFeeToken=(0,useGasFeeToken.Lq)(),showFiat=useShowFiat(chainId),fiatValue=gasFeeToken?gasFeeToken.amountFiat:fiatFee,tokenValue=gasFeeToken?gasFeeToken.amountFormatted:nativeFee,metamaskFeeFiat=null==gasFeeToken?void 0:gasFeeToken.metamaskFeeFiat,tooltip=gasFeeToken?t("confirmGasFeeTokenTooltip",[metamaskFeeFiat]):t("estimatedFeeTooltip");return react.createElement(component_library.az,{display:design_system.nl.Flex,flexDirection:design_system.bo.Column},react.createElement(alert_row.n,{alertKey:constants.oE.EstimatedFee,ownerId:transactionMeta.id,"data-testid":"edit-gas-fees-row",label:t("networkFee"),tooltip:tooltip,style:{alignItems:design_system.k2.center,marginBottom:"2px"}},react.createElement(component_library.az,{display:design_system.nl.Flex,flexDirection:design_system.bo.Row,justifyContent:design_system.A9.spaceBetween,alignItems:design_system.k2.center,textAlign:design_system.nO.Center,gap:1},!gasFeeToken&&react.createElement(edit_gas_icon_button.N,{supportsEIP1559:supportsEIP1559,setShowCustomizeGasPopover:setShowCustomizeGasPopover}),showFiat&&!showAdvancedDetails?react.createElement(FiatValue,{fullValue:fiatFeeWith18SignificantDigits,roundedValue:fiatValue}):react.createElement(TokenValue,{roundedValue:tokenValue}),react.createElement(selected_gas_fee_token.A,null))),react.createElement(component_library.az,{display:design_system.nl.Flex,justifyContent:design_system.A9.spaceBetween,paddingInline:2},react.createElement(component_library.EY,{"data-testid":"gas-fee-token-fee",variant:design_system.J3.bodySm,color:design_system.r7.textAlternative},gasFeeToken?t("confirmGasFeeTokenMetaMaskFee",[metamaskFeeFiat]):" "),showAdvancedDetails&&react.createElement(FiatValue,{fullValue:fiatFeeWith18SignificantDigits,roundedValue:fiatValue,variant:design_system.J3.bodySm,color:design_system.r7.textAlternative})))};function TokenValue(param){var roundedValue=param.roundedValue;return react.createElement(component_library.EY,{color:design_system.r7.textDefault,"data-testid":"first-gas-field"},roundedValue)}function FiatValue(param){var color=param.color,fullValue=param.fullValue,roundedValue=param.roundedValue,variant=param.variant,value=react.createElement(component_library.EY,_object_spread_props(_object_spread({},{color:color,variant:variant}),{"data-testid":"native-currency"}),roundedValue);return fullValue?react.createElement(tooltip.A,{title:fullValue},value):react.createElement(react.Fragment,null,value)}function useShowFiat(chainId){var isTestnet=network.YPx.includes(chainId),showFiatInTestnets=(0,es.d4)(selectors.lX9).showFiatInTestnets;return!isTestnet||showFiatInTestnets}try{EditGasFeesRow.displayName="EditGasFeesRow",EditGasFeesRow.__docgenInfo={description:"",displayName:"EditGasFeesRow",props:{fiatFee:{defaultValue:null,description:"",name:"fiatFee",required:!0,type:{name:"string"}},fiatFeeWith18SignificantDigits:{defaultValue:null,description:"",name:"fiatFeeWith18SignificantDigits",required:!0,type:{name:"string | null"}},nativeFee:{defaultValue:null,description:"",name:"nativeFee",required:!0,type:{name:"string"}},supportsEIP1559:{defaultValue:null,description:"",name:"supportsEIP1559",required:!0,type:{name:"boolean"}},setShowCustomizeGasPopover:{defaultValue:null,description:"",name:"setShowCustomizeGasPopover",required:!0,type:{name:"Dispatch<SetStateAction<boolean>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/pages/confirmations/components/confirm/info/shared/edit-gas-fees-row/edit-gas-fees-row.tsx#EditGasFeesRow"]={docgenInfo:EditGasFeesRow.__docgenInfo,name:"EditGasFeesRow",path:"ui/pages/confirmations/components/confirm/info/shared/edit-gas-fees-row/edit-gas-fees-row.tsx#EditGasFeesRow"})}catch(__react_docgen_typescript_loader_error){}},"./ui/pages/confirmations/components/confirm/info/shared/edit-gas-icon/edit-gas-icon-button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>EditGasIconButton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components_component_library__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/components/component-library/index.ts"),_contexts_transaction_modal__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/contexts/transaction-modal.js"),_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/helpers/constants/design-system.ts"),_hooks_useTransactionEventFragment__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/pages/confirmations/hooks/useTransactionEventFragment.js"),EditGasIconButton=function(param){var supportsEIP1559=param.supportsEIP1559,setShowCustomizeGasPopover=param.setShowCustomizeGasPopover,openModal=(0,_contexts_transaction_modal__WEBPACK_IMPORTED_MODULE_2__.gb)().openModal,updateTransactionEventFragment=(0,_hooks_useTransactionEventFragment__WEBPACK_IMPORTED_MODULE_4__.W)().updateTransactionEventFragment,openEditEIP1559TxGasFeeModal=function(){updateTransactionEventFragment({gas_edit_attempted:"basic"}),openModal("editGasFee")},openEditGasFeeLegacyTxModal=function(){setShowCustomizeGasPopover(!0)};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_component_library__WEBPACK_IMPORTED_MODULE_1__.$n,{style:{textDecoration:"none"},size:_components_component_library__WEBPACK_IMPORTED_MODULE_1__.Mp.Auto,variant:_components_component_library__WEBPACK_IMPORTED_MODULE_1__.Ak.Link,startIconName:_components_component_library__WEBPACK_IMPORTED_MODULE_1__.$M.Edit,color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.Li.primaryDefault,"data-testid":"edit-gas-fee-icon",onClick:function(){return supportsEIP1559?openEditEIP1559TxGasFeeModal():openEditGasFeeLegacyTxModal()}})};try{EditGasIconButton.displayName="EditGasIconButton",EditGasIconButton.__docgenInfo={description:"",displayName:"EditGasIconButton",props:{supportsEIP1559:{defaultValue:null,description:"",name:"supportsEIP1559",required:!0,type:{name:"boolean"}},setShowCustomizeGasPopover:{defaultValue:null,description:"",name:"setShowCustomizeGasPopover",required:!0,type:{name:"Dispatch<SetStateAction<boolean>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/pages/confirmations/components/confirm/info/shared/edit-gas-icon/edit-gas-icon-button.tsx#EditGasIconButton"]={docgenInfo:EditGasIconButton.__docgenInfo,name:"EditGasIconButton",path:"ui/pages/confirmations/components/confirm/info/shared/edit-gas-icon/edit-gas-icon-button.tsx#EditGasIconButton"})}catch(__react_docgen_typescript_loader_error){}},"./ui/pages/confirmations/components/confirm/info/shared/gas-fees-details/gas-fees-details.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>GasFeesDetails});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),preferences=__webpack_require__("./ui/pages/confirmations/selectors/preferences.ts"),context_confirm=__webpack_require__("./ui/pages/confirmations/context/confirm/index.tsx"),gas_timing_component=__webpack_require__("./ui/pages/confirmations/components/gas-timing/gas-timing.component.js"),useEIP1559TxFees=__webpack_require__("./ui/pages/confirmations/components/confirm/info/hooks/useEIP1559TxFees.ts"),useFeeCalculations=__webpack_require__("./ui/pages/confirmations/components/confirm/info/hooks/useFeeCalculations.ts"),useSupportsEIP1559=__webpack_require__("./ui/pages/confirmations/components/confirm/info/hooks/useSupportsEIP1559.ts"),edit_gas_fees_row=__webpack_require__("./ui/pages/confirmations/components/confirm/info/shared/edit-gas-fees-row/edit-gas-fees-row.tsx"),gas_fees_row=__webpack_require__("./ui/pages/confirmations/components/confirm/info/shared/gas-fees-row/gas-fees-row.tsx"),alert_row=__webpack_require__("./ui/components/app/confirm/info/row/alert-row/alert-row.tsx"),constants=__webpack_require__("./ui/components/app/confirm/info/row/constants.ts"),transaction=__webpack_require__("./shared/constants/transaction.ts"),useAsync=__webpack_require__("./ui/hooks/useAsync.ts"),actions=__webpack_require__("./ui/__mocks__/actions.js"),transaction_controller=__webpack_require__("./ui/store/controller-actions/transaction-controller.ts"),useInsufficientBalanceAlerts=__webpack_require__("./ui/pages/confirmations/hooks/alerts/transactions/useInsufficientBalanceAlerts.ts"),useIsGaslessSupported=__webpack_require__("./ui/pages/confirmations/hooks/gas/useIsGaslessSupported.ts");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){reject(error);return}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _async_to_generator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)})}}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}function _ts_generator(thisArg,body){var f,y,t,_={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]},g=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return g.next=verb(0),g.throw=verb(1),g.return=verb(2),"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw TypeError("Generator is already executing.");for(;g&&(g=0,op[0]&&(_=0)),_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=(t=_.trys).length>0&&t[t.length-1])&&(6===op[0]||2===op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}}function useAutomaticGasFeeTokenSelect(){var _useInsufficientBalanceAlerts,_gasFeeTokens_,_gasFeeTokens_1,dispatch=(0,es.wA)(),_useIsGaslessSupported=(0,useIsGaslessSupported.m)(),isGaslessSupported=_useIsGaslessSupported.isSupported,isSmartTransaction=_useIsGaslessSupported.isSmartTransaction,_useState=_sliced_to_array((0,react.useState)(!0),2),firstCheck=_useState[0],setFirstCheck=_useState[1],transactionMeta=(0,context_confirm.TW)().currentConfirmation,hasInsufficientBalance=!!(null==(_useInsufficientBalanceAlerts=(0,useInsufficientBalanceAlerts.G)())?void 0:_useInsufficientBalanceAlerts.length),gasFeeTokens=transactionMeta.gasFeeTokens,transactionId=transactionMeta.id,selectedGasFeeToken=transactionMeta.selectedGasFeeToken,firstGasFeeTokenAddress=null==gasFeeTokens||null==(_gasFeeTokens_=gasFeeTokens[0])?void 0:_gasFeeTokens_.tokenAddress;isSmartTransaction||firstGasFeeTokenAddress!==transaction.DG||(firstGasFeeTokenAddress=null==gasFeeTokens||null==(_gasFeeTokens_1=gasFeeTokens[1])?void 0:_gasFeeTokens_1.tokenAddress);var selectFirstToken=(0,react.useCallback)(function(){return _async_to_generator(function(){return _ts_generator(this,function(_state){switch(_state.label){case 0:return[4,(0,transaction_controller.bM)(transactionId,firstGasFeeTokenAddress)];case 1:return _state.sent(),[4,(0,actions.forceUpdateMetamaskState)(dispatch)];case 2:return _state.sent(),[2]}})})()},[dispatch,transactionId,firstGasFeeTokenAddress]),shouldSelect=isGaslessSupported&&hasInsufficientBalance&&!selectedGasFeeToken&&!!firstGasFeeTokenAddress;(0,useAsync.$T)(function(){return _async_to_generator(function(){return _ts_generator(this,function(_state){switch(_state.label){case 0:if(!gasFeeTokens||!transactionId||!firstCheck)return[2];if(setFirstCheck(!1),!shouldSelect)return[3,2];return[4,selectFirstToken()];case 1:_state.sent(),_state.label=2;case 2:return[2]}})})()},[shouldSelect,selectFirstToken,firstCheck,gasFeeTokens,transactionId])}var GasFeesDetails=function(param){var setShowCustomizeGasPopover=param.setShowCustomizeGasPopover,t=(0,useI18nContext.P)();useAutomaticGasFeeTokenSelect();var transactionMeta=(0,context_confirm.TW)().currentConfirmation,_useEIP1559TxFees=(0,useEIP1559TxFees.p)(transactionMeta),maxFeePerGas=_useEIP1559TxFees.maxFeePerGas,maxPriorityFeePerGas=_useEIP1559TxFees.maxPriorityFeePerGas,supportsEIP1559=(0,useSupportsEIP1559.M)(transactionMeta).supportsEIP1559,hasLayer1GasFee=!!(null==transactionMeta?void 0:transactionMeta.layer1GasFee),_useFeeCalculations=(0,useFeeCalculations._)(transactionMeta),estimatedFeeFiat=_useFeeCalculations.estimatedFeeFiat,estimatedFeeFiatWith18SignificantDigits=_useFeeCalculations.estimatedFeeFiatWith18SignificantDigits,estimatedFeeNative=_useFeeCalculations.estimatedFeeNative,l1FeeFiat=_useFeeCalculations.l1FeeFiat,l1FeeFiatWith18SignificantDigits=_useFeeCalculations.l1FeeFiatWith18SignificantDigits,l1FeeNative=_useFeeCalculations.l1FeeNative,l2FeeFiat=_useFeeCalculations.l2FeeFiat,l2FeeFiatWith18SignificantDigits=_useFeeCalculations.l2FeeFiatWith18SignificantDigits,l2FeeNative=_useFeeCalculations.l2FeeNative,maxFeeFiat=_useFeeCalculations.maxFeeFiat,maxFeeFiatWith18SignificantDigits=_useFeeCalculations.maxFeeFiatWith18SignificantDigits,maxFeeNative=_useFeeCalculations.maxFeeNative,showAdvancedDetails=(0,es.d4)(preferences.O6);return(null==transactionMeta?void 0:transactionMeta.txParams)?react.createElement(react.Fragment,null,react.createElement(edit_gas_fees_row.H,{fiatFee:estimatedFeeFiat,fiatFeeWith18SignificantDigits:estimatedFeeFiatWith18SignificantDigits,nativeFee:estimatedFeeNative,supportsEIP1559:supportsEIP1559,setShowCustomizeGasPopover:setShowCustomizeGasPopover}),showAdvancedDetails&&hasLayer1GasFee&&react.createElement(react.Fragment,null,react.createElement(gas_fees_row.n,{"data-testid":"gas-fee-details-l1",label:t("l1Fee"),tooltipText:t("l1FeeTooltip"),fiatFee:l1FeeFiat,fiatFeeWith18SignificantDigits:l1FeeFiatWith18SignificantDigits,nativeFee:l1FeeNative}),react.createElement(gas_fees_row.n,{"data-testid":"gas-fee-details-l2",label:t("l2Fee"),tooltipText:t("l2FeeTooltip"),fiatFee:l2FeeFiat,fiatFeeWith18SignificantDigits:l2FeeFiatWith18SignificantDigits,nativeFee:l2FeeNative})),supportsEIP1559&&!transactionMeta.selectedGasFeeToken&&react.createElement(alert_row.n,{alertKey:constants.oE.Speed,"data-testid":"gas-fee-details-speed",label:t("speed"),ownerId:transactionMeta.id},react.createElement(component_library.az,{display:design_system.nl.Flex,alignItems:design_system.k2.center},react.createElement(gas_timing_component.A,{maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas}))),showAdvancedDetails&&!transactionMeta.selectedGasFeeToken&&react.createElement(gas_fees_row.n,{"data-testid":"gas-fee-details-max-fee",label:t("maxFee"),tooltipText:t("maxFeeTooltip"),fiatFee:maxFeeFiat,fiatFeeWith18SignificantDigits:maxFeeFiatWith18SignificantDigits,nativeFee:maxFeeNative})):null};try{GasFeesDetails.displayName="GasFeesDetails",GasFeesDetails.__docgenInfo={description:"",displayName:"GasFeesDetails",props:{setShowCustomizeGasPopover:{defaultValue:null,description:"",name:"setShowCustomizeGasPopover",required:!0,type:{name:"Dispatch<SetStateAction<boolean>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/pages/confirmations/components/confirm/info/shared/gas-fees-details/gas-fees-details.tsx#GasFeesDetails"]={docgenInfo:GasFeesDetails.__docgenInfo,name:"GasFeesDetails",path:"ui/pages/confirmations/components/confirm/info/shared/gas-fees-details/gas-fees-details.tsx#GasFeesDetails"})}catch(__react_docgen_typescript_loader_error){}},"./ui/pages/confirmations/components/confirm/info/shared/gas-fees-row/gas-fees-row.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{n:()=>GasFeesRow});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_redux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-redux/es/index.js"),_shared_constants_network__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./shared/constants/network.ts"),_components_app_confirm_info_row__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/components/app/confirm/info/row/index.ts"),_components_component_library__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/components/component-library/index.ts"),_components_ui_tooltip__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/components/ui/tooltip/index.js"),_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./ui/helpers/constants/design-system.ts"),_selectors__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./ui/selectors/index.js"),_context_confirm__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./ui/pages/confirmations/context/confirm/index.tsx"),GasFeesRow=function(param){var label=param.label,tooltipText=param.tooltipText,fiatFee=param.fiatFee,fiatFeeWith18SignificantDigits=param.fiatFeeWith18SignificantDigits,nativeFee=param.nativeFee,dataTestId=param["data-testid"],transactionMeta=(0,_context_confirm__WEBPACK_IMPORTED_MODULE_8__.TW)().currentConfirmation,isTestnet=_shared_constants_network__WEBPACK_IMPORTED_MODULE_2__.YPx.includes(null==transactionMeta?void 0:transactionMeta.chainId),showFiatInTestnets=(0,react_redux__WEBPACK_IMPORTED_MODULE_1__.d4)(_selectors__WEBPACK_IMPORTED_MODULE_7__.lX9).showFiatInTestnets;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_app_confirm_info_row__WEBPACK_IMPORTED_MODULE_3__.z$,{"data-testid":dataTestId,label:label,tooltip:tooltipText,variant:_components_app_confirm_info_row__WEBPACK_IMPORTED_MODULE_3__.aj.Default},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_component_library__WEBPACK_IMPORTED_MODULE_4__.az,{display:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.nl.Flex,flexDirection:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.bo.Row,justifyContent:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.A9.spaceBetween,alignItems:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.k2.center,textAlign:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.nO.Center,marginLeft:8},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_component_library__WEBPACK_IMPORTED_MODULE_4__.EY,{marginRight:1,color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.r7.textDefault},nativeFee),(!isTestnet||showFiatInTestnets)&&(fiatFeeWith18SignificantDigits?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_ui_tooltip__WEBPACK_IMPORTED_MODULE_5__.A,{title:fiatFeeWith18SignificantDigits},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_component_library__WEBPACK_IMPORTED_MODULE_4__.EY,{color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.r7.textAlternative},fiatFee)):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_component_library__WEBPACK_IMPORTED_MODULE_4__.EY,{color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_6__.r7.textAlternative},fiatFee))))};try{GasFeesRow.displayName="GasFeesRow",GasFeesRow.__docgenInfo={description:"",displayName:"GasFeesRow",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},tooltipText:{defaultValue:null,description:"",name:"tooltipText",required:!0,type:{name:"string"}},fiatFee:{defaultValue:null,description:"",name:"fiatFee",required:!0,type:{name:"string"}},fiatFeeWith18SignificantDigits:{defaultValue:null,description:"",name:"fiatFeeWith18SignificantDigits",required:!0,type:{name:"string | null"}},nativeFee:{defaultValue:null,description:"",name:"nativeFee",required:!0,type:{name:"string"}},"data-testid":{defaultValue:null,description:"",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/pages/confirmations/components/confirm/info/shared/gas-fees-row/gas-fees-row.tsx#GasFeesRow"]={docgenInfo:GasFeesRow.__docgenInfo,name:"GasFeesRow",path:"ui/pages/confirmations/components/confirm/info/shared/gas-fees-row/gas-fees-row.tsx#GasFeesRow"})}catch(__react_docgen_typescript_loader_error){}},"./ui/pages/confirmations/components/confirm/info/shared/selected-gas-fee-token/selected-gas-fee-token.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>SelectedGasFeeToken});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),transaction=__webpack_require__("./shared/constants/transaction.ts"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),context_confirm=__webpack_require__("./ui/pages/confirmations/context/confirm/index.tsx"),networks=__webpack_require__("./shared/modules/selectors/networks.ts"),gas_fee_token_modal=__webpack_require__("./ui/pages/confirmations/components/confirm/info/shared/gas-fee-token-modal/gas-fee-token-modal.tsx"),useGasFeeToken=__webpack_require__("./ui/pages/confirmations/components/confirm/info/hooks/useGasFeeToken.ts"),gas_fee_token_icon=__webpack_require__("./ui/pages/confirmations/components/confirm/info/shared/gas-fee-token-icon/index.ts"),useIsGaslessSupported=__webpack_require__("./ui/pages/confirmations/hooks/gas/useIsGaslessSupported.ts"),useIsInsufficientBalance=__webpack_require__("./ui/pages/confirmations/hooks/useIsInsufficientBalance.ts");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}function SelectedGasFeeToken(){var _useSelector,_gasFeeToken_symbol,_gasFeeToken_tokenAddress,_useState=_sliced_to_array((0,react.useState)(!1),2),isModalOpen=_useState[0],setIsModalOpen=_useState[1],currentConfirmation=(0,context_confirm.TW)().currentConfirmation,chainId=currentConfirmation.chainId,gasFeeTokens=currentConfirmation.gasFeeTokens,_useIsGaslessSupported=(0,useIsGaslessSupported.m)(),isGaslessSupported=_useIsGaslessSupported.isSupported,isSmartTransaction=_useIsGaslessSupported.isSmartTransaction,hasInsufficientNative=(0,useIsInsufficientBalance.N)(),hasOnlyFutureNativeToken=(null==gasFeeTokens?void 0:gasFeeTokens.length)===1&&gasFeeTokens[0].tokenAddress===transaction.DG,hasGasFeeTokens=isGaslessSupported&&!!(null==gasFeeTokens?void 0:gasFeeTokens.length)&&(!hasOnlyFutureNativeToken||hasInsufficientNative&&isSmartTransaction),networkConfiguration=null==(_useSelector=(0,es.d4)(networks.hX))?void 0:_useSelector[chainId],handleClick=(0,react.useCallback)(function(){hasGasFeeTokens&&setIsModalOpen(!0)},[hasGasFeeTokens]),nativeTicker=null==networkConfiguration?void 0:networkConfiguration.nativeCurrency,gasFeeToken=(0,useGasFeeToken.Lq)(),symbol=null!=(_gasFeeToken_symbol=null==gasFeeToken?void 0:gasFeeToken.symbol)?_gasFeeToken_symbol:nativeTicker;return react.createElement(react.Fragment,null,isModalOpen&&react.createElement(gas_fee_token_modal.W,{onClose:function(){return setIsModalOpen(!1)}}),react.createElement(component_library.az,{"data-testid":"selected-gas-fee-token",onClick:handleClick,backgroundColor:design_system.i0.backgroundAlternative,borderRadius:design_system.Z6.pill,display:design_system.nl.InlineFlex,alignItems:design_system.k2.center,paddingInlineStart:1,gap:1,style:{cursor:hasGasFeeTokens?"pointer":"default",paddingInlineEnd:"6px"}},react.createElement(gas_fee_token_icon.Y,{tokenAddress:null!=(_gasFeeToken_tokenAddress=null==gasFeeToken?void 0:gasFeeToken.tokenAddress)?_gasFeeToken_tokenAddress:transaction.DG,size:gas_fee_token_icon.f.Sm}),react.createElement(component_library.EY,null,symbol),hasGasFeeTokens&&react.createElement(component_library.In,{"data-testid":"selected-gas-fee-token-arrow",name:component_library.$M.ArrowDown,size:component_library.lK.Sm})))}}}]);