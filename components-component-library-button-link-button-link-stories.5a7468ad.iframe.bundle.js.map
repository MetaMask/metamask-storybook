{"version":3,"file":"components-component-library-button-link-button-link-stories.5a7468ad.iframe.bundle.js","mappings":";AAyBA;AAMA;AAOA;AAIA;AAGA;AAEA;AAGA;AAYA;AAEA;AACA;AAMA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAEA;AAGA;AAQA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAksources":["webpack://metamask-crx/./ui/components/component-library/button-link/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {ButtonLink} from './button-link';\nimport {ButtonBase} from '../button-base';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"buttonlink\",\n      children: \"ButtonLink\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \" is an extension of \", _jsx(_components.code, {\n        children: \"ButtonBase\"\n      }), \" to support link styles\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonlink--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: ButtonLink\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"ButtonLinkSize\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/components/component-library\"\n      }), \" to change the size of \", _jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"ButtonLinkSize.Auto\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonLinkSize.Auto\"\n        }), \" sets the height to auto but retains \", _jsx(_components.code, {\n          children: \"ButtonLink\"\n        }), \" font-size\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonLinkSize.Sm\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonLinkSize.Md\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonLinkSize.Lg\"\n        }), \" 48px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ButtonLinkSize.Inherit\"\n        }), \" inherits the font-size of the parent element. Used for inline links in paragraphs.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonlink--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ButtonLink, ButtonLinkSize, Text, TextVariant } from '../../component-library';\\n\\n<ButtonLink size={ButtonLinkSize.Auto}>\\n  Auto (default)\\n</ButtonLink>\\n<ButtonLink size={ButtonLinkSize.Sm}>\\n  Small\\n</ButtonLink>\\n<ButtonLink size={ButtonLinkSize.Md}>\\n  Medium\\n</ButtonLink>\\n<ButtonLink size={ButtonLinkSize.Lg}>\\n  Large\\n</ButtonLink>\\n\\n<Text variant={TextVariant.bodyLgMedium}>\\n  Inherits the font-size of the parent element. <ButtonLink size={ButtonLinkSize.Inherit}>Learn more</ButtonLink>\\n</Text>\\n<Text variant={TextVariant.bodyMd}>\\n  Inherits the font-size of the parent element. <ButtonLink size={ButtonLinkSize.Inherit}>Learn more</ButtonLink>\\n</Text>\\n<Text variant={TextVariant.bodySm}>\\n  Inherits the font-size of the parent element. <ButtonLink size={ButtonLinkSize.Inherit}>Learn more</ButtonLink>\\n</Text>\\n\\n<Text variant={TextVariant.bodyXs}>\\n  Inherits the font-size of the parent element and example with override for a success color.\\n   <ButtonLink size={ButtonLinkSize.Inherit}>Learn more</ButtonLink>\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"danger\",\n      children: \"Danger\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"danger\"\n      }), \" boolean prop to change the \", _jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \" to danger color.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonlink--danger\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ButtonLink } from '../../component-library';\\n\\n<ButtonLink>Normal</ButtonLink>\\n<ButtonLink danger>Danger</ButtonLink>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"href\",\n      children: \"Href\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When an \", _jsx(_components.code, {\n        children: \"href\"\n      }), \" prop is passed it will change the element to an anchor(\", _jsx(_components.code, {\n        children: \"a\"\n      }), \") tag.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonlink--href\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ButtonLink } from '../../component-library';\\n\\n<ButtonLink href=\\\"/\\\">Href example</ButtonLink>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"external-link\",\n      children: \"External Link\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When an \", _jsx(_components.code, {\n        children: \"externalLink\"\n      }), \" prop is passed it adds the \", _jsx(_components.code, {\n        children: \"target=\\\"_blank\\\"\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"rel=\\\"noopener noreferrer\\\"\"\n      }), \" attributes.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"rel=\\\"noreferrer noopener\\\"\"\n      }), \" is used in links to prevent security vulnerabilities that can be exploited by malicious websites. It disables the window.opener property and prevents the new page from sending the referrer information, providing an additional layer of security.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonlink--external-link\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ButtonLink } from '../../component-library';\\n\\n<ButtonLink href=\\\"https://metamask.io\\\" externalLink>\\n  Anchor element with external link\\n</ButtonLink>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"hit-area\",\n      children: \"Hit area\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The default hit area for \", _jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \" is the width of the text and height based on the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop which is set to \", _jsx(_components.code, {\n        children: \"ButtonLinkSize.Auto\"\n      }), \" by default. There may be times when you want to increase the hit area of the \", _jsx(_components.code, {\n        children: \"ButtonLink\"\n      }), \". To do this you can use the \", _jsx(_components.code, {\n        children: \"Box\"\n      }), \" props \", _jsx(_components.code, {\n        children: \"paddingLeft\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"paddingRight\"\n      }), \". Or alternatively you can use the \", _jsx(_components.code, {\n        children: \"block\"\n      }), \" prop which sets the width to 100%.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-buttonlink--hit-area\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ButtonLink, ButtonLinkSize } from '../../component-library';\\n\\n<ButtonLink paddingLeft={4} paddingRight={4}>\\n  Auto (default)\\n</ButtonLink>\\n<ButtonLink size={ButtonLinkSize.Sm} paddingLeft={4} paddingRight={4}>\\n  Small\\n</ButtonLink>\\n<ButtonLink size={ButtonLinkSize.Md} paddingLeft={4} paddingRight={4}>\\n  Medium\\n</ButtonLink>\\n<ButtonLink size={ButtonLinkSize.Lg} paddingLeft={4} paddingRight={4}>\\n  Large\\n</ButtonLink>\\n<ButtonLink size={ButtonLinkSize.Lg} block>\\n  Large block\\n</ButtonLink>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}