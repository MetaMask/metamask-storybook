{"version":3,"file":"components-component-library-avatar-network-avatar-network-stories.1b59d4f7.iframe.bundle.js","mappings":";AAwBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAMA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAQA;AAUA;AAIA;AAGA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAEA;AAGA;AAUA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACeA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/avatar-network/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {AvatarNetwork} from './avatar-network';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"avatarnetwork\",\n      children: \"AvatarNetwork\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AvatarNetwork\"\n      }), \" is a component responsible for display of the image of a given network\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarnetwork--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: AvatarNetwork\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop to set the size of the \", _jsx(_components.code, {\n        children: \"AvatarNetwork\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"xs\"\n        }), \" 16px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"sm\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"md\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"lg\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"xl\"\n        }), \" 48px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Defaults to \", _jsx(_components.code, {\n        children: \"md\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The fallback display of the \", _jsx(_components.code, {\n        children: \"AvatarNetwork\"\n      }), \" is a circle with the initial letter of the network name. The size of the initial letter is calculated based on the size of the \", _jsx(_components.code, {\n        children: \"AvatarNetwork\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarnetwork--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarNetwork, AvatarNetworkSize } from '../../component-library';\\n\\n<AvatarNetwork size={AvatarNetworkSize.Xs} />\\n<AvatarNetwork size={AvatarNetworkSize.Sm} />\\n<AvatarNetwork size={AvatarNetworkSize.Md} />\\n<AvatarNetwork size={AvatarNetworkSize.Lg} />\\n<AvatarNetwork size={AvatarNetworkSize.Xl} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"name\",\n      children: \"Name\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" prop to set the initial letter of the \", _jsx(_components.code, {\n        children: \"AvatarNetwork\"\n      }), \". This will be used as the fallback display if no image url is passed to the \", _jsx(_components.code, {\n        children: \"src\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component props to change the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \", \", _jsx(_components.code, {\n        children: \"font-weight\"\n      }), \", \", _jsx(_components.code, {\n        children: \"font-family\"\n      }), \", etc.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarnetwork--name\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarNetwork } from '../../component-library';\\n<AvatarNetwork name=\\\"Arbitrum One\\\" />;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"src\",\n      children: \"Src\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"src\"\n      }), \" prop to set the image to be rendered of the \", _jsx(_components.code, {\n        children: \"AvatarNetwork\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarnetwork--src\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarNetwork } from '../../component-library';\\n<AvatarNetwork src=\\\"./images/pol-token.svg\\\" />\\n<AvatarNetwork src=\\\"./images/arbitrum.svg\\\" />\\n<AvatarNetwork src=\\\"./images/optimism.svg\\\" />\\n<AvatarNetwork src=\\\"./images/avax-token.svg\\\" />\\n<AvatarNetwork src=\\\"./images/palm.svg\\\" />\\n<AvatarNetwork src=\\\"./images/bsc-filled.svg\\\" />\\n<AvatarNetwork src=\\\"./images/fantom-opera.svg\\\" />\\n<AvatarNetwork src=\\\"./images/harmony-one.svg\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"show-halo\",\n      children: \"Show Halo\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"showHalo\"\n      }), \" prop to display the component with halo effect. Only works if an image url is supplied to \", _jsx(_components.code, {\n        children: \"src\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarnetwork--show-halo\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarNetwork } from '../../component-library';\\n<AvatarNetwork src=\\\"./images/arbitrum.svg\\\" showHalo />;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color-background-color-and-border-color\",\n      children: \"Color, Background Color And Border Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \", \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"borderColor\"\n      }), \" props to set the text color, background-color and border-color of the \", _jsx(_components.code, {\n        children: \"AvatarNetwork\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarnetwork--color-background-color-and-border-color\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TextColor,\\n           BackgroundColor,\\n           BorderColor } from '../../../helpers/constants/design-system';\\nimport { AvatarNetwork } from '../../component-library';\\n<AvatarNetwork\\n      backgroundColor={BackgroundColor.goerli}\\n      borderColor={BorderColor.goerli}\\n      name=\\\"G\\\"\\n      color={Color.goerliInverse}\\n>\\n  G\\n</AvatarNetwork>\\n<AvatarNetwork\\n   backgroundColor={BackgroundColor.sepolia}\\n      borderColor={BorderColor.sepolia}\\n      name=\\\"S\\\"\\n      color={Color.goerliInverse}\\n>\\n  S\\n</AvatarNetwork>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}