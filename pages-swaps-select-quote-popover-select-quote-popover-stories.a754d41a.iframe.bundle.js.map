{"version":3,"file":"pages-swaps-select-quote-popover-select-quote-popover-stories.a754d41a.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AAIA;AAIA;AAGA;AAEA;AAGA;AAEA;AAGA;AAEA;AAGA;AAEA;AAGA;AAEA;AAGA;AAEA;AACA;AAAA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAKA;AAGA;AAIA;AAGA;AAEA;AAGA;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/pages/swaps/select-quote-popover/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport Button from '.';\nimport SelectQuotePopover from '.';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"selectquotepopover\",\n      children: \"SelectQuotePopover\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"SelectQuotePopover\"\n      }), \" is a modal that displays information gathered from multiple liquidity sources.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"pages-swaps-selectquotepopover--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"component-api\",\n      children: \"Component API\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: SelectQuotePopover\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following describes the props and example usage for this component.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"onclose\",\n      children: \"onClose\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Action called when close button is clicked. It's also called on submit action.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"onsubmit\",\n      children: \"onSubmit\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Action called when Select button is clicked\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"swaptosymbol\",\n      children: \"swapToSymbol\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Name of the receiving symbol\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"quotedatarows\",\n      children: \"quoteDataRows\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"data provided with the following properties:\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"| type                       | Types     |\\n| -------------------------- | --------- |\\n| \", _jsx(_components.code, {\n        children: \"aggId\"\n      }), \"                    | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"amountReceiving\"\n      }), \"          | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"destinationTokenDecimals\"\n      }), \" | \", _jsx(_components.code, {\n        children: \"number\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"destinationTokenSymbol\"\n      }), \"   | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"destinationTokenValue\"\n      }), \"    | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"isBestQuote--primary\"\n      }), \"     | \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" |\\n| \", _jsx(_components.code, {\n        children: \"networkFees\"\n      }), \"              | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"quoteSource\"\n      }), \"              | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"rawNetworkFees\"\n      }), \"           | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"slippage\"\n      }), \"                 | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"sourceTokenDecimals\"\n      }), \"      | \", _jsx(_components.code, {\n        children: \"number\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"sourceTokenSymbol\"\n      }), \"        | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\\n| \", _jsx(_components.code, {\n        children: \"sourceTokenValue\"\n      }), \"         | \", _jsx(_components.code, {\n        children: \"string\"\n      }), \"  |\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"initialaggid\",\n      children: \"initialAggId\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When \", _jsx(_components.code, {\n        children: \"initialAggId\"\n      }), \" is defined, the corresponding quote is pre-selected in sort-list\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"onquotedetailsisopened\",\n      children: \"onQuoteDetailsIsOpened\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Detail opened when click on caret of a specific quote.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"hideestimatedgasfee\",\n      children: \"hideEstimatedGasFee\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When the \", _jsx(_components.code, {\n        children: \"hideEstimatedGasFee\"\n      }), \" is set to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \" it hides the Estimated network fees column\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}