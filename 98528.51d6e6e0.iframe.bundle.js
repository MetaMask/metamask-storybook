"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[98528],{"./test/data/confirmations/contract-interaction.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AC:()=>CHAIN_ID,cU:()=>PAYMASTER_AND_DATA,ey:()=>DEPOSIT_METHOD_DATA,mg:()=>genUnapprovedContractInteractionConfirmation,n_:()=>CONTRACT_INTERACTION_SENDER_ADDRESS});var _metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@metamask/transaction-controller/dist/constants.mjs"),_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@metamask/transaction-controller/dist/types.mjs"),PAYMASTER_AND_DATA="0x9d6ac51b972544251fcc0f2902e633e3f9bd3f2900000000000000000000000000000000000000000000000000000000666bfd410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003498a76eb88b702e5e52b00fbc16a36baf89ebe3e0dd23170949cffc0a623011383cced660ff67930308c22e5aa746a2d586629ddbd87046a146225bf80e9d6f1b",CONTRACT_INTERACTION_SENDER_ADDRESS="0x2e0d7e8c45221fca00d74a3609a0f7097035d09b",DEPOSIT_METHOD_DATA="0xd0e30db0",CHAIN_ID=_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_0__.tx.GOERLI,genUnapprovedContractInteractionConfirmation=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_ref_address=_ref.address,address=void 0===_ref_address?CONTRACT_INTERACTION_SENDER_ADDRESS:_ref_address,_ref_authorizationList=_ref.authorizationList,authorizationList=void 0===_ref_authorizationList?void 0:_ref_authorizationList,_ref_containerTypes=_ref.containerTypes,_ref_delegationAddress=_ref.delegationAddress,origin=_ref.origin,_ref_txData=_ref.txData,txData=void 0===_ref_txData?DEPOSIT_METHOD_DATA:_ref_txData,_ref_chainId=_ref.chainId,chainId=void 0===_ref_chainId?CHAIN_ID:_ref_chainId,nestedTransactions=_ref.nestedTransactions,simulationData=_ref.simulationData,gasFeeTokens=_ref.gasFeeTokens,selectedGasFeeToken=_ref.selectedGasFeeToken,txParamsOriginal=_ref.txParamsOriginal,confirmation={actionId:String(0x17e49282),chainId:chainId,containerTypes:void 0===_ref_containerTypes?void 0:_ref_containerTypes,dappSuggestedGasFees:{gas:"0xab77"},defaultGasEstimates:{estimateType:"medium",gas:"0xab77",maxFeePerGas:"0xaa350353",maxPriorityFeePerGas:"0x59682f00"},delegationAddress:void 0===_ref_delegationAddress?void 0:_ref_delegationAddress,gasFeeEstimatesLoaded:!0,gasFeeTokens:gasFeeTokens,history:[{actionId:String(0x17e49282),chainId:chainId,dappSuggestedGasFees:{gas:"0xab77"},defaultGasEstimates:{estimateType:"medium",gas:"0xab77",maxFeePerGas:"0xaa350353",maxPriorityFeePerGas:"0x59682f00"},id:"1d7c08c0-fe54-11ee-9243-91b1e533746a",origin:"https://metamask.github.io",securityAlertResponse:{reason:"loading",result_type:"validation_in_progress"},sendFlowHistory:[],status:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.x8.unapproved,time:0x18ef6a1a34c,txParams:{authorizationList:authorizationList,data:txData,from:address,gas:"0xab77",maxFeePerGas:"0xaa350353",maxPriorityFeePerGas:"0x59682f00",to:"0x88aa6343307ec9a652ccddda3646e62b2f1a5125",value:"0x3782dace9d900000"},type:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.D_.contractInteraction,userEditedGasLimit:!1,userFeeLevel:"medium",verifiedOnBlockchain:!1},[{note:"TransactionController#updateSimulationData - Update simulation data",op:"add",path:"/simulationData",timestamp:0x18ef6a1a4c1,value:{nativeBalanceChange:{difference:"0x3782dace9d900000",isDecrease:!0,newBalance:"0xcc0ea4fb7ffa87d",previousBalance:"0x4443c51e558fa87d"},tokenBalanceChanges:[]}},{op:"add",path:"/gasFeeEstimatesLoaded",value:!0}],[{note:"TransactionController:updatesecurityAlertResponse - securityAlertResponse updated",op:"replace",path:"/securityAlertResponse/result_type",timestamp:0x18ef6a1a7dd,value:"Benign"},{op:"replace",path:"/securityAlertResponse/reason",value:""},{op:"add",path:"/securityAlertResponse/description",value:""},{op:"add",path:"/securityAlertResponse/features",value:[]},{op:"add",path:"/securityAlertResponse/block",value:5732063}]],id:"1d7c08c0-fe54-11ee-9243-91b1e533746a",nestedTransactions:nestedTransactions,origin:null!=origin?origin:"https://metamask.github.io",securityAlertResponse:{features:[],reason:"",result_type:"Benign"},selectedGasFeeToken:selectedGasFeeToken,sendFlowHistory:[],simulationData:{nativeBalanceChange:{difference:"0x3782dace9d900000",isDecrease:!0,newBalance:"0xcc0ea4fb7ffa87d",previousBalance:"0x4443c51e558fa87d"},tokenBalanceChanges:[]},status:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.x8.unapproved,time:0x18ef6a1a34c,txParams:{authorizationList:authorizationList,data:txData,from:address,gas:"0xab77",maxFeePerGas:"0xaa350353",maxPriorityFeePerGas:"0x59682f00",to:"0x88aa6343307ec9a652ccddda3646e62b2f1a5125",value:"0x3782dace9d900000"},gasLimitNoBuffer:"0xab77",txParamsOriginal:txParamsOriginal,type:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.D_.contractInteraction,userEditedGasLimit:!1,userFeeLevel:"medium",verifiedOnBlockchain:!1};return simulationData&&(confirmation.simulationData=simulationData),confirmation}},"./test/data/confirmations/helper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f6:()=>getMockApproveConfirmState,gH:()=>getMockConfirmState,bb:()=>getMockConfirmStateForTransaction,cX:()=>getMockContractInteractionConfirmState,nN:()=>getMockPersonalSignConfirmState,bh:()=>getMockPersonalSignConfirmStateForRequest,oF:()=>getMockTokenTransferConfirmState,dV:()=>getMockTypedSignConfirmState,jk:()=>getMockTypedSignConfirmStateForRequest});var constants=__webpack_require__("./node_modules/@metamask/controller-utils/dist/constants.mjs"),lodash=__webpack_require__("./node_modules/lodash/lodash.js"),network=__webpack_require__("./shared/constants/network.ts"),mock_state=__webpack_require__("./test/data/mock-state.json"),contract_interaction=__webpack_require__("./test/data/confirmations/contract-interaction.ts"),personal_sign=__webpack_require__("./test/data/confirmations/personal_sign.ts");__webpack_require__("./test/data/confirmations/set-approval-for-all.ts");var token_approve=__webpack_require__("./test/data/confirmations/token-approve.ts"),types=__webpack_require__("./node_modules/@metamask/transaction-controller/dist/types.mjs");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}var genUnapprovedTokenTransferConfirmation=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_ref_address=_ref.address,address=void 0===_ref_address?contract_interaction.n_:_ref_address,_ref_chainId=_ref.chainId,chainId=void 0===_ref_chainId?contract_interaction.AC:_ref_chainId,_ref_isWalletInitiatedConfirmation=_ref.isWalletInitiatedConfirmation,_ref_amountHex=_ref.amountHex;return _object_spread_props(_object_spread({},(0,contract_interaction.mg)({chainId:chainId})),{txParams:{from:address,data:"0xa9059cbb0000000000000000000000002e0d7e8c45221fca00d74a3609a0f7097035d09b".concat(void 0===_ref_amountHex?"0000000000000000000000000000000000000000000000000000000000000001":_ref_amountHex),gas:"0x16a92",to:"0x076146c765189d51be3160a2140cf80bfc73ad68",value:"0x0",maxFeePerGas:"0x5b06b0c0d",maxPriorityFeePerGas:"0x59682f00"},gasLimitNoBuffer:"0x16a92",type:types.D_.tokenMethodTransfer,origin:void 0!==_ref_isWalletInitiatedConfirmation&&_ref_isWalletInitiatedConfirmation?"metamask":"https://metamask.github.io"})},typed_sign=__webpack_require__("./test/data/confirmations/typed_sign.ts");function helper_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function helper_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){helper_define_property(target,key,source[key])})}return target}function helper_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function helper_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):helper_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}var getMockTypedSignConfirmState=function(){var args=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{metamask:{}};return helper_object_spread_props(helper_object_spread({},mock_state,args),{metamask:helper_object_spread_props(helper_object_spread({},mock_state.metamask,args.metamask),{preferences:helper_object_spread({},mock_state.metamask.preferences),pendingApprovals:helper_define_property({},typed_sign.BC.id,{id:typed_sign.BC.id,type:constants.s.EthSignTypedData}),unapprovedTypedMessages:helper_define_property({},typed_sign.BC.id,typed_sign.BC)})})},getMockTypedSignConfirmStateForRequest=function(signature){var args=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{metamask:{}};return helper_object_spread_props(helper_object_spread({},mock_state,args),{metamask:helper_object_spread_props(helper_object_spread({},mock_state.metamask,args.metamask),{preferences:helper_object_spread({},mock_state.metamask.preferences),pendingApprovals:helper_define_property({},signature.id,{id:signature.id,type:constants.s.EthSignTypedData}),unapprovedTypedMessages:helper_define_property({},signature.id,signature)})})},getMockPersonalSignConfirmState=function(){var args=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{metamask:{}};return helper_object_spread_props(helper_object_spread({},mock_state,args),{metamask:helper_object_spread_props(helper_object_spread({},mock_state.metamask,args.metamask),{preferences:helper_object_spread({},mock_state.metamask.preferences),pendingApprovals:helper_define_property({},personal_sign.ds.id,{id:personal_sign.ds.id,type:constants.s.PersonalSign,origin:"https://metamask.github.io"}),unapprovedPersonalMsgs:helper_define_property({},personal_sign.ds.id,personal_sign.ds)})})},getMockPersonalSignConfirmStateForRequest=function(signature){var args=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{metamask:{}};return helper_object_spread_props(helper_object_spread({},mock_state,args),{metamask:helper_object_spread_props(helper_object_spread({},mock_state.metamask,args.metamask),{preferences:helper_object_spread({},mock_state.metamask.preferences),pendingApprovals:helper_define_property({},signature.id,{id:signature.id,type:constants.s.PersonalSign}),unapprovedPersonalMsgs:helper_define_property({},signature.id,signature)})})},getMockConfirmState=function(){var _args_metamask,args=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{metamask:{}};return helper_object_spread_props(helper_object_spread({},mock_state,args),{metamask:helper_object_spread_props(helper_object_spread({},mock_state.metamask,args.metamask),{preferences:helper_object_spread({},mock_state.metamask.preferences,null==(_args_metamask=args.metamask)?void 0:_args_metamask.preferences)})})},getMockConfirmStateForTransaction=function(transaction){var args=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{appState:{},metamask:{}};return getMockConfirmState((0,lodash.merge)({appState:args.appState,metamask:helper_object_spread_props(helper_object_spread({},args.metamask),{pendingApprovals:helper_define_property({},transaction.id,{id:transaction.id,type:constants.s.Transaction}),transactions:[transaction]})},args))},getMockContractInteractionConfirmState=function(){var args=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{metamask:{}};return getMockConfirmStateForTransaction((0,contract_interaction.mg)({chainId:network.tx6.GOERLI}),args)},getMockApproveConfirmState=function(){return getMockConfirmStateForTransaction((0,token_approve.v2)({chainId:"0x5"}))},getMockTokenTransferConfirmState=function(param){var _param_isWalletInitiatedConfirmation=param.isWalletInitiatedConfirmation;return getMockConfirmStateForTransaction(genUnapprovedTokenTransferConfirmation({chainId:"0x5",isWalletInitiatedConfirmation:void 0!==_param_isWalletInitiatedConfirmation&&_param_isWalletInitiatedConfirmation}))}},"./test/data/confirmations/personal_sign.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bt:()=>SignatureRequestSIWEWithResources,Yw:()=>signatureRequestSIWE,ds:()=>unapprovedPersonalSignMsg});var _metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@metamask/transaction-controller/dist/constants.mjs"),unapprovedPersonalSignMsg={id:"0050d5b0-c023-11ee-a0cb-3390a510a0ab",chainId:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_0__.tx.GOERLI,status:"unapproved",time:new Date().getTime(),type:"personal_sign",securityProviderResponse:null,chainid:"0x5",msgParams:{from:"0x0dcd5d886577d5081b0c52e242ef29e70be3e7bc",data:"0x4578616d706c652060706572736f6e616c5f7369676e60206d657373616765",origin:"https://metamask.github.io",siwe:{isSIWEMessage:!1,parsedMessage:null}}},signatureRequestSIWE={id:"210ca3b0-1ccb-11ef-b096-89c4d726ebb5",chainId:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_0__.tx.GOERLI,securityAlertResponse:{reason:"loading",result_type:"validation_in_progress",securityAlertId:"b826df20-2eda-41bf-becf-6a100141a8be"},status:"unapproved",time:0x18fbe49416b,type:"personal_sign",msgParams:{from:"0x935e73edb9ff52e23bac7f7e049a1ecd06d05477",data:"0x6d6574616d61736b2e6769746875622e696f2077616e747320796f7520746f207369676e20696e207769746820796f757220457468657265756d206163636f756e743a0a3078393335653733656462396666353265323362616337663765303433613165636430366430353437370a0a492061636365707420746865204d6574614d61736b205465726d73206f6620536572766963653a2068747470733a2f2f636f6d6d756e6974792e6d6574616d61736b2e696f2f746f730a0a5552493a2068747470733a2f2f6d6574616d61736b2e6769746875622e696f0a56657273696f6e3a20310a436861696e2049443a20310a4e6f6e63653a2033323839313735370a4973737565642041743a20323032312d30392d33305431363a32353a32342e3030305a",signatureMethod:"personal_sign",origin:"https://metamask.github.io",siwe:{isSIWEMessage:!0,parsedMessage:{address:"0x935e73edb9ff52e23bac7f7e049a1ecd06d05477",chainId:1,domain:"metamask.github.io",expirationTime:null,issuedAt:"2021-09-30T16:25:24.000Z",nonce:"32891757",notBefore:"2022-03-17T12:45:13.610Z",requestId:"some_id",scheme:null,statement:"I accept the MetaMask Terms of Service: https://community.metamask.io/tos",uri:"https://metamask.github.io",version:"1",resources:null}}}},SignatureRequestSIWEWithResources={id:"210ca3b0-1ccb-11ef-b096-89c4d726ebb5",chainId:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_0__.tx.GOERLI,securityAlertResponse:{reason:"loading",result_type:"validation_in_progress",securityAlertId:"b826df20-2eda-41bf-becf-6a100141a8be"},status:"unapproved",time:0x18fbe49416b,type:"personal_sign",msgParams:{from:"0x935e73edb9ff52e23bac7f7e049a1ecd06d05477",data:"0x6d6574616d61736b2e6769746875622e696f2077616e747320796f7520746f207369676e20696e207769746820796f757220457468657265756d206163636f756e743a0a3078393335653733656462396666353265323362616337663765303433613165636430366430353437370a0a492061636365707420746865204d6574614d61736b205465726d73206f6620536572766963653a2068747470733a2f2f636f6d6d756e6974792e6d6574616d61736b2e696f2f746f730a0a5552493a2068747470733a2f2f6d6574616d61736b2e6769746875622e696f0a56657273696f6e3a20310a436861696e2049443a20310a4e6f6e63653a2033323839313735370a4973737565642041743a20323032312d30392d33305431363a32353a32342e3030305a",signatureMethod:"personal_sign",origin:"https://metamask.github.io",siwe:{isSIWEMessage:!0,parsedMessage:{address:"0x935e73edb9ff52e23bac7f7e043a1ecd06d05477",chainId:1,domain:"metamask.github.io",expirationTime:null,issuedAt:"2021-09-30T16:25:24.000Z",nonce:"32891757",notBefore:"2022-03-17T12:45:13.610Z",requestId:"some_id",scheme:null,statement:"I accept the MetaMask Terms of Service: https://community.metamask.io/tos",uri:"https://metamask.github.io",version:"1",resources:["ipfs://Qme7ss3ARVgxv6rXqVPiikMJ8u2NLgmgszg13pYrDKEoiu","https://example.com/my-web2-claim.json"]}}}}},"./test/data/confirmations/set-approval-for-all.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{eq:()=>buildSetApproveForAllTransactionData});var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ethersproject/abi/lib.esm/interface.js");function buildSetApproveForAllTransactionData(address,approved){return new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.KA(["function setApprovalForAll(address operator, bool approved)"]).encodeFunctionData("setApprovalForAll",[address,approved])}__webpack_require__("./test/data/confirmations/contract-interaction.ts")},"./test/data/confirmations/token-approve.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A9:()=>buildApproveTransactionData,v2:()=>genUnapprovedApproveConfirmation});var _metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@metamask/transaction-controller/dist/types.mjs"),_ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ethersproject/abi/lib.esm/interface.js"),_contract_interaction__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./test/data/confirmations/contract-interaction.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function buildApproveTransactionData(address,amountOrTokenId){return new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.KA(["function approve(address spender, uint256 amountOrTokenId)"]).encodeFunctionData("approve",[address,amountOrTokenId])}var genUnapprovedApproveConfirmation=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_ref_address=_ref.address,address=void 0===_ref_address?_contract_interaction__WEBPACK_IMPORTED_MODULE_0__.n_:_ref_address,_ref_chainId=_ref.chainId,chainId=void 0===_ref_chainId?_contract_interaction__WEBPACK_IMPORTED_MODULE_0__.AC:_ref_chainId,_ref_amountHex=_ref.amountHex;return _object_spread_props(_object_spread({},(0,_contract_interaction__WEBPACK_IMPORTED_MODULE_0__.mg)({chainId:chainId})),{txParams:{from:address,data:"0x095ea7b30000000000000000000000002e0d7e8c45221fca00d74a3609a0f7097035d09b".concat(void 0===_ref_amountHex?"0000000000000000000000000000000000000000000000000000000000000001":_ref_amountHex),gas:"0x16a92",to:"0x076146c765189d51be3160a2140cf80bfc73ad68",value:"0x0",maxFeePerGas:"0x5b06b0c0d",maxPriorityFeePerGas:"0x59682f00"},gasLimitNoBuffer:"0x16a92",type:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.tokenMethodApprove})}},"./test/data/confirmations/typed_sign.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BC:()=>unapprovedTypedSignMsgV4,jH:()=>permitSignatureMsg,u0:()=>unapprovedTypedSignMsgV3,uF:()=>unapprovedTypedSignMsgV1});var _metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@metamask/transaction-controller/dist/constants.mjs"),_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@metamask/transaction-controller/dist/types.mjs"),_shared_constants_app__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./shared/constants/app.ts"),unapprovedTypedSignMsgV1={id:"82ab2400-e2c6-11ee-9627-73cc88f00492",chainId:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,securityAlertResponse:{reason:"loading",result_type:"validation_in_progress",securityAlertId:"3a938cfc-301d-4af0-96c4-b51fe1a5d6ad"},status:"unapproved",time:0x18e420f2240,type:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData,securityProviderResponse:null,msgParams:{from:"0x935e73edb9ff52e23bac7f7e043a1ecd06d05477",data:[{type:"string",name:"Message",value:"Hi, Alice!"},{type:"uint32",name:"A number",value:"1337"}],requestId:11,signatureMethod:"eth_signTypedData",version:"V1",origin:"https://metamask.github.io"}},unapprovedTypedSignMsgV3={id:"17e41af0-e073-11ee-9eec-5fd284826685",chainId:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,securityAlertResponse:{reason:"loading",result_type:"validation_in_progress",securityAlertId:"efefe1db-6c6e-4a2c-aa0d-6183ad3ec810"},status:"unapproved",time:0x18e32d1021f,type:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData,securityProviderResponse:null,msgParams:{data:JSON.stringify({types:{EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],Person:[{name:"name",type:"string"},{name:"wallet",type:"address"}],Mail:[{name:"from",type:"Person"},{name:"to",type:"Person"},{name:"contents",type:"string"}]},primaryType:"Mail",domain:{name:"Ether Mail",version:"1",chainId:1,verifyingContract:"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC"},message:{from:{name:"Cow",wallet:"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826"},to:{name:"Bob",wallet:"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB"},contents:"Hello, Bob!"}}),from:"0x935e73edb9ff52e23bac7f7e043a1ecd06d05477",version:"V3",requestId:12,signatureMethod:"eth_signTypedData_v3",origin:"https://metamask.github.io"}},unapprovedTypedSignMsgV4={id:"0050d5b0-c023-11ee-a0cb-3390a510a0ab",chainId:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,status:"unapproved",time:new Date().getTime(),chainid:"0x5",type:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData,securityProviderResponse:null,msgParams:{from:"0x0dcd5d886577d5081b0c52e242ef29e70be3e7bc",data:JSON.stringify({domain:{chainId:97,name:"Ether Mail",verifyingContract:"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",version:"1"},message:{contents:"Hello, Bob!",from:{name:"Cow",wallets:["0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826","0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF","0x06195827297c7A80a443b6894d3BDB8824b43896"]},to:[{name:"Bob",wallets:["0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB","0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57","0xB0B0b0b0b0b0B000000000000000000000000000"]}]},primaryType:"Mail",types:{EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],Mail:[{name:"from",type:"Person"},{name:"to",type:"Person[]"},{name:"contents",type:"string"}],Person:[{name:"name",type:"string"},{name:"wallets",type:"address[]"}]}}),origin:"https://metamask.github.io",requestId:0x75bcd15,signatureMethod:_shared_constants_app__WEBPACK_IMPORTED_MODULE_0__.$z.ETH_SIGN_TYPED_DATA_V4}};_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData;var permitSignatureMsg={id:"0b1787a0-1c44-11ef-b70d-e7064bd7b659",chainId:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,securityAlertResponse:{reason:"loading",result_type:"validation_in_progress",securityAlertId:"ab21395f-2190-472f-8cfa-3d224e7529d8"},status:"unapproved",time:0x18fbad3f51a,type:_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData,msgParams:{data:'{"types":{"EIP712Domain":[{"name":"name","type":"string"},{"name":"version","type":"string"},{"name":"chainId","type":"uint256"},{"name":"verifyingContract","type":"address"}],"Permit":[{"name":"owner","type":"address"},{"name":"spender","type":"address"},{"name":"value","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"deadline","type":"uint256"}]},"primaryType":"Permit","domain":{"name":"MyToken","version":"1","verifyingContract":"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC","chainId":1},"message":{"owner":"0x935e73edb9ff52e23bac7f7e043a1ecd06d05477","spender":"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4","value":3000,"nonce":0,"deadline":50000000000}}',from:"0x935e73edb9ff52e23bac7f7e043a1ecd06d05477",version:"V4",requestId:14,signatureMethod:"eth_signTypedData_v4",origin:"https://metamask.github.io"}};_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData,_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData,JSON.stringify({domain:{name:"Dai Stablecoin",version:"1",chainId:1,verifyingContract:"0x6B175474E89094C44Da98b954EedeAC495271d0F"},types:{EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],Permit:[{name:"holder",type:"address"},{name:"spender",type:"address"},{name:"nonce",type:"uint256"},{name:"expiry",type:"uint256"},{name:"allowed",type:"bool"}]},primaryType:"Permit",message:{spender:"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4",tokenId:"3606393",nonce:0,expiry:0,allowed:!1}}),_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_1__.tx.GOERLI,_metamask_transaction_controller__WEBPACK_IMPORTED_MODULE_2__.D_.signTypedData}}]);