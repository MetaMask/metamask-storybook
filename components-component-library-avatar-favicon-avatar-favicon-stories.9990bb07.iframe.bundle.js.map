{"version":3,"file":"components-component-library-avatar-favicon-avatar-favicon-stories.9990bb07.iframe.bundle.js","mappings":";AAyBA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAUA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AAGA;ACWA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/avatar-favicon/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {AvatarBase} from '../';\nimport {AvatarFavicon} from './avatar-favicon';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"avatarfavicon\",\n      children: \"AvatarFavicon\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AvatarFavicon\"\n      }), \" is an image component that represents a dapp or third party service\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarfavicon--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: AvatarFavicon\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"AvatarFaviconSize\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"../../component-library\"\n      }), \" to change the size of \", _jsx(_components.code, {\n        children: \"AvatarFavicon\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarFaviconSize.Xs\"\n        }), \" 16px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarFaviconSize.Sm\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarFaviconSize.Md\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarFaviconSize.Lg\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"AvatarFaviconSize.Xl\"\n        }), \" 48px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Defaults to \", _jsx(_components.code, {\n        children: \"AvatarFaviconSize.MD\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarfavicon--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarFavicon, AvatarFaviconSize } from '../../component-library';\\n\\n<AvatarFavicon size={AvatarFaviconSize.Xs} />\\n<AvatarFavicon size={AvatarFaviconSize.Sm} />\\n<AvatarFavicon size={AvatarFaviconSize.Md} />\\n<AvatarFavicon size={AvatarFaviconSize.Lg} />\\n<AvatarFavicon size={AvatarFaviconSize.Xl} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"src\",\n      children: \"Src\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"src\"\n      }), \" prop to set the image to be rendered of the \", _jsx(_components.code, {\n        children: \"AvatarFavicon\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarfavicon--src\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarFavicon } from '../../component-library';\\n\\n<AvatarFavicon src=\\\"https://uniswap.org/favicon.ico\\\" />\\n<AvatarFavicon src=\\\"https://1inch.exchange/assets/favicon/favicon-32x32.png\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"fallback-icon-props\",\n      children: \"Fallback Icon Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If there is no \", _jsx(_components.code, {\n        children: \"src\"\n      }), \" then in that case an \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-icon--default-story\",\n        children: \"icon\"\n      }), \" will be used as the fallback display and it can be customised via \", _jsx(_components.code, {\n        children: \"fallbackIconProps\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}