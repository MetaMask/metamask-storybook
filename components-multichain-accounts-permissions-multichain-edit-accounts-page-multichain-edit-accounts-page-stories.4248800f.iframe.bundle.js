"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[93024],{"./node_modules/@metamask/account-api/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var AccountGroupType,wallet_AccountWalletType;__webpack_require__.d(__webpack_exports__,{Bp:()=>AccountGroupType,ZG:()=>wallet_AccountWalletType}),__webpack_require__("./node_modules/@metamask/keyring-api/dist/index.mjs"),function(AccountGroupType){AccountGroupType.MultichainAccount="multichain-account",AccountGroupType.SingleAccount="single-account"}(AccountGroupType||(AccountGroupType={})),function(AccountWalletType){AccountWalletType.Entropy="entropy",AccountWalletType.Keyring="keyring",AccountWalletType.Snap="snap"}(wallet_AccountWalletType||(wallet_AccountWalletType={})),__webpack_require__("./node_modules/@metamask/keyring-utils/dist/index.mjs"),RegExp(`^${wallet_AccountWalletType.Entropy}:.*/(?<groupIndex>\\d+)$`,"u")},"./ui/components/multichain-accounts/permissions/multichain-edit-accounts-page/multichain-edit-accounts-page.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllAccountsConnected:()=>AllAccountsConnected,NoAccountsConnected:()=>NoAccountsConnected,OneAccountConnected:()=>OneAccountConnected,__namedExportsOrder:()=>__namedExportsOrder,default:()=>multichain_edit_accounts_page_stories});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),dist=__webpack_require__("./node_modules/@metamask/account-api/dist/index.mjs"),keyring_api_dist=__webpack_require__("./node_modules/@metamask/keyring-api/dist/index.mjs"),eth_methods=__webpack_require__("./shared/constants/eth-methods.ts"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),metametrics=__webpack_require__("./shared/constants/metametrics.ts"),contexts_metametrics=__webpack_require__("./ui/contexts/metametrics.js"),multichain_account_list=__webpack_require__("./ui/components/multichain-accounts/multichain-account-list/index.ts"),account_tree=__webpack_require__("./ui/selectors/multichain-accounts/account-tree.ts"),page=__webpack_require__("./ui/components/multichain/pages/page/index.ts"),utils=__webpack_require__("./ui/selectors/multichain-accounts/utils.ts");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _array_without_holes(arr){if(Array.isArray(arr))return _array_like_to_array(arr)}function _iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _to_consumable_array(arr){return _array_without_holes(arr)||_iterable_to_array(arr)||_unsupported_iterable_to_array(arr)||_non_iterable_spread()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var MultichainEditAccountsPage=function(param){var defaultSelectedAccountGroups=param.defaultSelectedAccountGroups,supportedAccountGroups=param.supportedAccountGroups,onSubmit=param.onSubmit,onClose=param.onClose,t=(0,useI18nContext.P)(),trackEvent=(0,react.useContext)(contexts_metametrics.O2),_useState=_sliced_to_array((0,react.useState)(defaultSelectedAccountGroups),2),selectedAccountGroups=_useState[0],setSelectedAccountGroups=_useState[1],accountTree=(0,es.d4)(account_tree.SL),walletsWithSupportedAccountGroups=(0,react.useMemo)(function(){var walletMap=new Map;return supportedAccountGroups.forEach(function(group){var walletId=(0,utils.q)(group.id),wallet=accountTree.wallets[walletId];wallet&&(walletMap.has(walletId)||walletMap.set(walletId,{id:wallet.id,type:wallet.type,metadata:wallet.metadata,groups:{}}),walletMap.get(walletId).groups[group.id]=group)}),Object.fromEntries(walletMap)},[accountTree.wallets,supportedAccountGroups]),handleAccountClick=(0,react.useCallback)(function(accountGroupId){selectedAccountGroups.includes(accountGroupId)?setSelectedAccountGroups(selectedAccountGroups.filter(function(id){return id!==accountGroupId})):setSelectedAccountGroups(_to_consumable_array(selectedAccountGroups).concat([accountGroupId]))},[selectedAccountGroups]),handleConnect=(0,react.useCallback)(function(){var defaultSet=new Set(defaultSelectedAccountGroups),selectedSet=new Set(selectedAccountGroups),addedAccounts=selectedAccountGroups.filter(function(accountGroup){return!defaultSet.has(accountGroup)}),removedAccounts=defaultSelectedAccountGroups.filter(function(accountGroup){return!selectedSet.has(accountGroup)});onSubmit(selectedAccountGroups),trackEvent({category:metametrics.FZ.Permissions,event:metametrics.gP.UpdatePermissionedAccounts,properties:{addedAccounts:addedAccounts.length,removedAccounts:removedAccounts.length,location:"Edit Accounts Modal"}}),onClose()},[selectedAccountGroups,defaultSelectedAccountGroups,onSubmit,trackEvent,onClose]);return react.createElement(page.YW,{"data-testid":"modal-page",className:"main-container connect-page",backgroundColor:design_system.i0.backgroundDefault},react.createElement(page.Y9,{paddingTop:8,paddingBottom:0,startAccessory:react.createElement(component_library.a2,{size:component_library.f3.Md,ariaLabel:t("back"),iconName:component_library.$M.ArrowLeft,onClick:onClose,"data-testid":"back-button"}),textProps:{variant:design_system.J3.headingSm}},t("editAccounts")),react.createElement(page.UC,{paddingLeft:4,paddingRight:4,backgroundColor:design_system.i0.transparent},react.createElement(component_library.az,{display:design_system.nl.Flex,flexDirection:design_system.bo.Column},react.createElement(multichain_account_list.k,{wallets:walletsWithSupportedAccountGroups,selectedAccountGroups:selectedAccountGroups,handleAccountClick:handleAccountClick}))),react.createElement(page.wi,null,react.createElement(component_library.nR,{"data-testid":"connect-more-accounts-button",onClick:handleConnect,size:component_library.S8.Lg,block:!0},t("connect"))))};try{MultichainEditAccountsPage.displayName="MultichainEditAccountsPage",MultichainEditAccountsPage.__docgenInfo={description:"",displayName:"MultichainEditAccountsPage",props:{defaultSelectedAccountGroups:{defaultValue:null,description:"",name:"defaultSelectedAccountGroups",required:!0,type:{name:"(`entropy:${string}/${string}` | `keyring:${string}/${string}` | `snap:${string}/${string}`)[]"}},supportedAccountGroups:{defaultValue:null,description:"",name:"supportedAccountGroups",required:!0,type:{name:"AccountGroupWithInternalAccounts[]"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!0,type:{name:"(accountGroups: (`entropy:${string}/${string}` | `keyring:${string}/${string}` | `snap:${string}/${string}`)[]) => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/components/multichain-accounts/permissions/multichain-edit-accounts-page/multichain-edit-accounts-page.tsx#MultichainEditAccountsPage"]={docgenInfo:MultichainEditAccountsPage.__docgenInfo,name:"MultichainEditAccountsPage",path:"ui/components/multichain-accounts/permissions/multichain-edit-accounts-page/multichain-edit-accounts-page.tsx#MultichainEditAccountsPage"})}catch(__react_docgen_typescript_loader_error){}var store=__webpack_require__("./ui/store/store.ts"),mock_state=__webpack_require__("./test/data/mock-state.json");let multichain_edit_accounts_page_stories={title:"Components/MultichainAccounts/Permissions/MultichainEditAccountsPage",component:MultichainEditAccountsPage,parameters:{docs:{description:{component:"A page for editing account permissions for a connected site"}}},argTypes:{onClose:{action:"onClose"},onSubmit:{action:"onSubmit"}}};var multichain_edit_accounts_page_stories_store=(0,store.A)({metamask:mock_state.metamask}),walletOneGroupId="".concat("entropy:01JKAF3DSGM3AB87EM9N0K41AJ","/0"),walletTwoGroupId="".concat("entropy:01JKAF3PJ247KAM6C03G5Q0NP8","/0"),walletThreeGroupId="".concat("keyring:Ledger Hardware","/0xc42edfcc21ed14dda456aa0756c153f7985d8813"),mockSupportedAccountGroups=[{id:walletOneGroupId,type:dist.Bp.MultichainAccount,metadata:{name:"Account 1",entropy:{groupIndex:0},hidden:!1,pinned:!1},accounts:[{address:"0x0dcd5d886577d5081b0c52e242ef29e70be3e7bc",id:"cf8dace4-9439-4bd4-b3a8-88c821c8fcb3",metadata:{name:"Account 1",keyring:{type:"HD Key Tree"},importTime:0},options:{},methods:eth_methods.z,scopes:[keyring_api_dist.OO.Eoa],type:keyring_api_dist.j0.Eoa}]},{id:walletTwoGroupId,type:dist.Bp.MultichainAccount,metadata:{name:"Account 2",entropy:{groupIndex:0},hidden:!1,pinned:!1},accounts:[{address:"0x123456789abcdef0123456789abcdef012345678",id:"784225f4-d30b-4e77-a900-c8bbce735b88",metadata:{name:"Account 2",keyring:{type:"HD Key Tree"},importTime:0},options:{},methods:eth_methods.z,scopes:[keyring_api_dist.OO.Eoa],type:keyring_api_dist.j0.Eoa}]},{id:walletThreeGroupId,type:dist.Bp.SingleAccount,metadata:{name:"Ledger Account 1",hidden:!1,pinned:!1},accounts:[{address:"0xc42edfcc21ed14dda456aa0756c153f7985d8813",id:"15e69915-2a1a-4019-93b3-916e11fd432f",metadata:{name:"Ledger Account 1",keyring:{type:"Ledger Hardware"},importTime:0},options:{},methods:eth_methods.z,scopes:[keyring_api_dist.OO.Eoa],type:keyring_api_dist.j0.Eoa}]}],Template=function(args){return react.createElement(es.Kq,{store:multichain_edit_accounts_page_stories_store},react.createElement(MultichainEditAccountsPage,args))},OneAccountConnected=Template.bind({});OneAccountConnected.args={defaultSelectedAccountGroups:[walletOneGroupId],supportedAccountGroups:mockSupportedAccountGroups,onClose:function(){},onSubmit:function(){}},OneAccountConnected.parameters={docs:{description:{story:"Shows the modal with 1 out of 3 accounts connected"}}};var AllAccountsConnected=Template.bind({});AllAccountsConnected.args={defaultSelectedAccountGroups:[walletOneGroupId,walletTwoGroupId,walletThreeGroupId],supportedAccountGroups:mockSupportedAccountGroups,onClose:function(){},onSubmit:function(){}},AllAccountsConnected.parameters={docs:{description:{story:"Shows the modal with all 3 accounts connected"}}};var NoAccountsConnected=Template.bind({});NoAccountsConnected.args={defaultSelectedAccountGroups:[],supportedAccountGroups:mockSupportedAccountGroups,onClose:function(){},onSubmit:function(){}},NoAccountsConnected.parameters={docs:{description:{story:"Shows the modal with no accounts connected"}}},OneAccountConnected.parameters={...OneAccountConnected.parameters,docs:{...OneAccountConnected.parameters?.docs,source:{originalSource:`args => <Provider store={store}>
    <MultichainEditAccountsPage {...args} />
  </Provider>`,...OneAccountConnected.parameters?.docs?.source}}},AllAccountsConnected.parameters={...AllAccountsConnected.parameters,docs:{...AllAccountsConnected.parameters?.docs,source:{originalSource:`args => <Provider store={store}>
    <MultichainEditAccountsPage {...args} />
  </Provider>`,...AllAccountsConnected.parameters?.docs?.source}}},NoAccountsConnected.parameters={...NoAccountsConnected.parameters,docs:{...NoAccountsConnected.parameters?.docs,source:{originalSource:`args => <Provider store={store}>
    <MultichainEditAccountsPage {...args} />
  </Provider>`,...NoAccountsConnected.parameters?.docs?.source}}};let __namedExportsOrder=["OneAccountConnected","AllAccountsConnected","NoAccountsConnected"]}}]);
//# sourceMappingURL=components-multichain-accounts-permissions-multichain-edit-accounts-page-multichain-edit-accounts-page-stories.4248800f.iframe.bundle.js.map