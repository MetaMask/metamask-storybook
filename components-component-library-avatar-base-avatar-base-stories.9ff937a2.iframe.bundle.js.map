{"version":3,"file":"components-component-library-avatar-base-avatar-base-stories.9ff937a2.iframe.bundle.js","mappings":";AAwBA;AAGA;AAIA;AAOA;AAIA;AAGA;AAEA;AAGA;AAMA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAcA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAUA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AC2DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/avatar-base/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {AvatarBase} from './avatar-base';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      id: \"this-is-a-base-component-it-should-not-be-used-in-your-feature-code-directly-but-as-a-base-for-other-ui-components\",\n      children: \"This is a base component. It should not be used in your feature code directly but as a \\\"base\\\" for other UI components\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"avatarbase\",\n      children: \"AvatarBase\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AvatarBase\"\n      }), \" is a wrapper component responsible for enforcing dimensions and border radius for Avatar components\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarbase--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: AvatarBase\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop to set the size of the \", _jsx(_components.code, {\n        children: \"AvatarBase\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"xs\"\n        }), \" 16px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"sm\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"md\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"lg\"\n        }), \" 40px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"xl\"\n        }), \" 48px\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Defaults to \", _jsx(_components.code, {\n        children: \"md\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The text styles of the \", _jsx(_components.code, {\n        children: \"AvatarBase\"\n      }), \" is based on the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop. To override this use the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component's \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" prop. \", _jsx(_components.code, {\n        children: \"AvatarBase\"\n      }), \" also accepts all \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component props.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarbase--size\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarBaseSize } from '../ui/component-library/avatar-base/avatar-base.types';\\nimport { AvatarBase } from '../../component-library/avatar-base';\\n<AvatarBase size={AvatarBaseSize.XS} />\\n<AvatarBase size={AvatarBaseSize.SM} />\\n<AvatarBase size={AvatarBaseSize.MD} />\\n<AvatarBase size={AvatarBaseSize.LG} />\\n<AvatarBase size={AvatarBaseSize.XL} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AvatarBase\"\n      }), \" component can contain images, icons or text\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarbase--children\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { AvatarBase } from '../../component-library';\\n<AvatarBase>\\n  <img src=\\\"./images/eth_logo.svg\\\" />\\n</AvatarBase>\\n<AvatarBase>\\n  <img width=\\\"100%\\\" src=\\\"./images/arbitrum.svg\\\" />\\n</AvatarBase>\\n<AvatarBase>\\n  <img width=\\\"100%\\\" src=\\\"./images/avax-token.svg\\\" />\\n</AvatarBase>\\n<AvatarBase>A</AvatarBase>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color-background-color-and-border-color\",\n      children: \"Color, Background Color And Border Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \", \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"borderColor\"\n      }), \" props to set the text color, background-color and border-color of the \", _jsx(_components.code, {\n        children: \"AvatarBase\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-avatarbase--color-background-color-and-border-color\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {   TextColor,\\n           BackgroundColor,\\n           BorderColor } from '../../../helpers/constants/design-system';\\nimport { AvatarBase } from '../../component-library';\\n<AvatarBase>B</AvatarBase>\\n<AvatarBase\\n    backgroundColor={BackgroundColor.goerli}\\n    borderColor={BorderColor.goerli}\\n    color={TextColor.primaryInverse}\\n  >\\n  G\\n</AvatarBase>\\n<AvatarBase\\n   backgroundColor={BackgroundColor.sepolia}\\n   borderColor={BorderColor.sepolia}\\n   color={TextColor.primaryInverse}\\n>\\n  S\\n</AvatarBase>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}