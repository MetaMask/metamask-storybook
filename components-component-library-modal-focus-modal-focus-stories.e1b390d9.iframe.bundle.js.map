{"version":3,"file":"components-component-library-modal-focus-modal-focus-stories.e1b390d9.iframe.bundle.js","mappings":";AAswFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/modal-focus/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {ModalFocus} from './modal-focus';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"modalfocus\",\n      children: \"ModalFocus\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"ModalFocus\"\n      }), \" traps the focus within the modal. This greatly improves the experience for screen readers and keyboard only users.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalfocus--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"ModalFocus\"\n      }), \" is built with \", _jsx(_components.a, {\n        href: \"https://github.com/theKashey/react-focus-lock\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"react-focus-lock\"\n      }), \" and accepts all of the props from that library.\"]\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: ModalFocus\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"children\",\n      children: \"Children\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" prop to render the component to lock focus to\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalfocus--children\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React from 'react';\\nimport {\\n  BorderColor,\\n  DISPLAY,\\n  FLEX_DIRECTION,\\n} from '../../../helpers/constants/design-system';\\n\\nimport Box from '../../ui/box';\\n\\nimport { ModalFocus } from '../../component-library';\\n\\nconst [open, setOpen] = React.useState(false);\\n\\n<button onClick={() => setOpen(true)} marginBottom={4}>\\n  Open\\n</button>;\\n\\n{\\n  open && (\\n    <ModalFocus>\\n      <Box\\n        padding={4}\\n        borderColor={BorderColor.borderDefault}\\n        display={DISPLAY.FLEX}\\n        flexDirection={FLEX_DIRECTION.COLUMN}\\n        gap={4}\\n      >\\n        <p>Modal focus children</p>\\n        <input />\\n        <p>\\n          Use the keyboard to try tabbing around you will notice that the focus\\n          is locked to the content within modal focus\\n        </p>\\n        <button onClick={() => setOpen(false)}>Close</button>\\n      </Box>\\n    </ModalFocus>\\n  );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"initial-focus-ref\",\n      children: \"Initial Focus Ref\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"initialFocusRef\"\n      }), \" to pass the \", _jsx(_components.code, {\n        children: \"ref\"\n      }), \" of the element to receive focus initially\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalfocus--initial-focus-ref\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React from 'react';\\nimport {\\n  BorderColor,\\n  DISPLAY,\\n  FLEX_DIRECTION,\\n} from '../../../helpers/constants/design-system';\\n\\nimport Box from '../../ui/box';\\n\\nimport { ModalFocus } from '../../component-library';\\n\\nconst [open, setOpen] = React.useState(false);\\nconst ref = React.useRef < HTMLButtonElement > null;\\n\\n<button onClick={() => setOpen(true)} marginBottom={4}>\\n  Open\\n</button>;\\n\\n{\\n  open && (\\n    <ModalFocus initialFocusRef={ref}>\\n      <Box\\n        padding={4}\\n        borderColor={BorderColor.borderDefault}\\n        display={DISPLAY.FLEX}\\n        flexDirection={FLEX_DIRECTION.COLUMN}\\n        gap={4}\\n      >\\n        <input />\\n        <p>Initial focus is on the close button</p>\\n        <button ref={ref} onClick={() => setOpen(false)}>\\n          Close\\n        </button>\\n      </Box>\\n    </ModalFocus>\\n  );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"final-focus-ref\",\n      children: \"Final Focus Ref\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"finalFocusRef\"\n      }), \" to pass the \", _jsx(_components.code, {\n        children: \"ref\"\n      }), \" of the element to return focus to when \", _jsx(_components.code, {\n        children: \"ModalFocus\"\n      }), \" unmounts\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalfocus--final-focus-ref\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React from 'react';\\nimport {\\n  BorderColor,\\n  DISPLAY,\\n  FLEX_DIRECTION,\\n} from '../../../helpers/constants/design-system';\\n\\nimport Box from '../../ui/box';\\n\\nimport { ModalFocus } from '../../component-library';\\n\\nconst [open, setOpen] = React.useState(false);\\nconst ref = React.useRef < HTMLInputElement > null;\\n\\n<button onClick={() => setOpen(true)} marginBottom={4}>\\n  Open\\n</button>;\\n<input placeholder=\\\"Focus will return here\\\" ref={ref} />;\\n\\n{\\n  open && (\\n    <ModalFocus finalFocusRef={ref}>\\n      <Box\\n        padding={4}\\n        borderColor={BorderColor.borderDefault}\\n        display={DISPLAY.FLEX}\\n        flexDirection={FLEX_DIRECTION.COLUMN}\\n        gap={4}\\n      >\\n        <p>Focus will be returned to the input once closed</p>\\n        <button onClick={() => setOpen(false)}>Close</button>\\n      </Box>\\n    </ModalFocus>\\n  );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"restore-focus\",\n      children: \"Restore Focus\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"restoreFocus\"\n      }), \" to restore focus to the element that triggered the \", _jsx(_components.code, {\n        children: \"ModalFocus\"\n      }), \" once it unmounts\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalfocus--restore-focus\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React from 'react';\\nimport {\\n  BorderColor,\\n  DISPLAY,\\n  FLEX_DIRECTION,\\n} from '../../../helpers/constants/design-system';\\n\\nimport Box from '../../ui/box';\\n\\nimport { ModalFocus } from '../../component-library';\\n\\nconst [open, setOpen] = React.useState(false);\\n\\n<button onClick={() => setOpen(true)} marginBottom={4}>\\n  Open\\n</button>;\\n{\\n  open && (\\n    <ModalFocus restoreFocus>\\n      <Box\\n        padding={4}\\n        borderColor={BorderColor.borderDefault}\\n        display={DISPLAY.FLEX}\\n        flexDirection={FLEX_DIRECTION.COLUMN}\\n        gap={4}\\n      >\\n        <p>Focus will be restored to the open button once closed</p>\\n        <button onClick={() => setOpen(false)}>Close</button>\\n      </Box>\\n    </ModalFocus>\\n  );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"auto-focus\",\n      children: \"Auto Focus\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"autoFocus\"\n      }), \" to auto focus to the first focusable element within the \", _jsx(_components.code, {\n        children: \"ModalFocus\"\n      }), \" once it mounts\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Defaults to \", _jsx(_components.code, {\n        children: \"true\"\n      })]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-modalfocus--auto-focus\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React from 'react';\\nimport {\\n  BorderColor,\\n  DISPLAY,\\n  FLEX_DIRECTION,\\n} from '../../../helpers/constants/design-system';\\n\\nimport Box from '../../ui/box';\\n\\nimport { ModalFocus } from '../../component-library';\\n\\nconst [open, setOpen] = React.useState(false);\\n\\n<button onClick={() => setOpen(true)} marginBottom={4}>\\n  Open\\n</button>;\\n{\\n  open && (\\n    <ModalFocus autoFocus={false}>\\n      <Box\\n        padding={4}\\n        borderColor={BorderColor.borderDefault}\\n        display={DISPLAY.FLEX}\\n        flexDirection={FLEX_DIRECTION.COLUMN}\\n        gap={4}\\n      >\\n        <p>auto focus set to false</p>\\n        <button onClick={() => setOpen(false)}>Close</button>\\n      </Box>\\n    </ModalFocus>\\n  );\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}