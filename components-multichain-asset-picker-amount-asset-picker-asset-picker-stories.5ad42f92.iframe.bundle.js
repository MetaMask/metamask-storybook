"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[55637],{"./ui/components/multichain/asset-picker-amount/asset-picker/asset-picker.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,DisabledStory:()=>DisabledStory,MultichainNetworksStory:()=>MultichainNetworksStory,NetworksStory:()=>NetworksStory,SendDestStory:()=>SendDestStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_redux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-redux/es/index.js"),_store_store__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/store/store.ts"),_test_data_mock_state_json__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./test/data/mock-state.json"),_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./shared/constants/transaction.ts"),_asset_picker__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/components/multichain/asset-picker-amount/asset-picker/asset-picker.tsx"),_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./ui/hooks/useI18nContext.js"),_asset_picker_modal_asset_picker_modal_tabs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./ui/components/multichain/asset-picker-amount/asset-picker-modal/asset-picker-modal-tabs.tsx"),_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./shared/constants/network.ts"),_test_stub_networks__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./test/stub/networks.ts"),_metamask_network_controller__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@metamask/network-controller/dist/NetworkController.mjs");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}var storybook={title:"Components/Multichain/AssetPicker",component:_asset_picker__WEBPACK_IMPORTED_MODULE_5__.b},props={asset:{symbol:"ETH",address:"0xaddress1",image:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.RBA["0x1"],type:_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_4__.PW.token,chainId:"0x1"}},DefaultStory=function(){var t=(0,_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_6__.P)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_asset_picker__WEBPACK_IMPORTED_MODULE_5__.b,_object_spread({header:t("sendSelectReceiveAsset"),onAssetChange:function(){return{}}},props))};DefaultStory.storyName="Default";var DisabledStory=function(){var t=(0,_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_6__.P)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_asset_picker__WEBPACK_IMPORTED_MODULE_5__.b,_object_spread_props(_object_spread({header:t("sendSelectReceiveAsset"),onAssetChange:function(){return{}}},props),{isDisabled:!0}))};DisabledStory.storyName="Disabled";var SendDestStory=function(){var t=(0,_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_6__.P)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_asset_picker__WEBPACK_IMPORTED_MODULE_5__.b,_object_spread_props(_object_spread({header:t("sendSelectReceiveAsset"),onAssetChange:function(){return{}}},props),{asset:{symbol:"ETH",image:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.RBA["0x1"],type:_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_4__.PW.native,chainId:"0x1"},sendingAsset:{image:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.RBA["0x1"],symbol:"ETH"}}))};function store(){var defaultMockState=_object_spread({},_test_data_mock_state_json__WEBPACK_IMPORTED_MODULE_3__);return defaultMockState.metamask=_object_spread({},defaultMockState.metamask,(0,_test_stub_networks__WEBPACK_IMPORTED_MODULE_9__.gX)({chainId:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.tx6.MAINNET},{chainId:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.tx6.LINEA_MAINNET},{chainId:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.tx6.GOERLI})),(0,_store_store__WEBPACK_IMPORTED_MODULE_2__.A)(defaultMockState)}SendDestStory.decorators=[function(story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_redux__WEBPACK_IMPORTED_MODULE_1__.Kq,{store:store()},story())}],SendDestStory.storyName="With Sending Asset";var networkProps={network:{chainId:"0x1",name:"Mainnet",blockExplorerUrls:[],defaultRpcEndpointIndex:0,rpcEndpoints:[{networkClientId:"test1",url:"https://mainnet.infura.io/v3/",type:_metamask_network_controller__WEBPACK_IMPORTED_MODULE_10__.ZE.Custom}],nativeCurrency:"ETH"},networks:[{chainId:"0x1",name:"Mainnet Name That Is Very Long",blockExplorerUrls:[],defaultRpcEndpointIndex:0,rpcEndpoints:[{networkClientId:"test1",url:"https://mainnet.infura.io/v3/",type:_metamask_network_controller__WEBPACK_IMPORTED_MODULE_10__.ZE.Custom}],nativeCurrency:"ETH"},{chainId:"0x10",name:"Optimism",blockExplorerUrls:[],defaultRpcEndpointIndex:0,rpcEndpoints:[{networkClientId:"test2",url:"https://optimism.infura.io/v3/",type:_metamask_network_controller__WEBPACK_IMPORTED_MODULE_10__.ZE.Custom}],nativeCurrency:"ETH"},{chainId:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.tx6.LINEA_MAINNET,name:"Linea Mainnet Test Name",blockExplorerUrls:[],defaultRpcEndpointIndex:0,rpcEndpoints:[{networkClientId:"test3",url:"https://linea.infura.io/v3/",type:_metamask_network_controller__WEBPACK_IMPORTED_MODULE_10__.ZE.Custom}],nativeCurrency:"ETH"}],shouldDisableNetwork:function(networkConfig){return networkConfig.chainId===_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.tx6.LINEA_MAINNET},onNetworkChange:function(){return{}}},NetworksStory=function(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_asset_picker__WEBPACK_IMPORTED_MODULE_5__.b,_object_spread_props(_object_spread({header:"Bridge from",onAssetChange:function(){return{}}},props),{asset:{symbol:"ETH",image:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.RBA["0x1"],type:_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_4__.PW.native,chainId:"0x1"},networkProps:networkProps,visibleTabs:[_asset_picker_modal_asset_picker_modal_tabs__WEBPACK_IMPORTED_MODULE_7__.T.TOKENS]}))};NetworksStory.decorators=[function(story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_redux__WEBPACK_IMPORTED_MODULE_1__.Kq,{store:store()},story())}],NetworksStory.storyName="With Network Picker";var MultichainNetworksStory=function(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_asset_picker__WEBPACK_IMPORTED_MODULE_5__.b,_object_spread_props(_object_spread({header:"Bridge from",onAssetChange:function(){return{}}},props),{asset:{symbol:"ETH",image:_shared_constants_network__WEBPACK_IMPORTED_MODULE_8__.RBA["0x1"],type:_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_4__.PW.native,chainId:"0x1"},isMultiselectEnabled:!0,networkProps:networkProps,visibleTabs:[_asset_picker_modal_asset_picker_modal_tabs__WEBPACK_IMPORTED_MODULE_7__.T.TOKENS]}))};MultichainNetworksStory.decorators=[function(story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_redux__WEBPACK_IMPORTED_MODULE_1__.Kq,{store:store()},story())}],MultichainNetworksStory.storyName="With Multichain Network Picker";let __WEBPACK_DEFAULT_EXPORT__=storybook;DefaultStory.parameters={...DefaultStory.parameters,docs:{...DefaultStory.parameters?.docs,source:{originalSource:`() => {
  const t = useI18nContext();
  return <AssetPicker header={t('sendSelectReceiveAsset')} onAssetChange={() => ({})} {...props} />;
}`,...DefaultStory.parameters?.docs?.source}}},DisabledStory.parameters={...DisabledStory.parameters,docs:{...DisabledStory.parameters?.docs,source:{originalSource:`() => {
  const t = useI18nContext();
  return <AssetPicker header={t('sendSelectReceiveAsset')} onAssetChange={() => ({})} {...props} isDisabled />;
}`,...DisabledStory.parameters?.docs?.source}}},SendDestStory.parameters={...SendDestStory.parameters,docs:{...SendDestStory.parameters?.docs,source:{originalSource:`() => {
  const t = useI18nContext();
  return <AssetPicker header={t('sendSelectReceiveAsset')} onAssetChange={() => ({})} {...props} asset={{
    symbol: 'ETH',
    image: CHAIN_ID_TOKEN_IMAGE_MAP['0x1'],
    type: AssetType.native,
    chainId: '0x1'
  }} sendingAsset={{
    image: CHAIN_ID_TOKEN_IMAGE_MAP['0x1'],
    symbol: 'ETH'
  }} />;
}`,...SendDestStory.parameters?.docs?.source}}},NetworksStory.parameters={...NetworksStory.parameters,docs:{...NetworksStory.parameters?.docs,source:{originalSource:`() => {
  return <AssetPicker header={'Bridge from'} onAssetChange={() => ({})} {...props} asset={{
    symbol: 'ETH',
    image: CHAIN_ID_TOKEN_IMAGE_MAP['0x1'],
    type: AssetType.native,
    chainId: '0x1'
  }} networkProps={networkProps as never} visibleTabs={[TabName.TOKENS]} />;
}`,...NetworksStory.parameters?.docs?.source}}},MultichainNetworksStory.parameters={...MultichainNetworksStory.parameters,docs:{...MultichainNetworksStory.parameters?.docs,source:{originalSource:`() => {
  return <AssetPicker header={'Bridge from'} onAssetChange={() => ({})} {...props} asset={{
    symbol: 'ETH',
    image: CHAIN_ID_TOKEN_IMAGE_MAP['0x1'],
    type: AssetType.native,
    chainId: '0x1'
  }} isMultiselectEnabled={true} networkProps={networkProps as never} visibleTabs={[TabName.TOKENS]} />;
}`,...MultichainNetworksStory.parameters?.docs?.source}}};let __namedExportsOrder=["DefaultStory","DisabledStory","SendDestStory","NetworksStory","MultichainNetworksStory"]}}]);
//# sourceMappingURL=components-multichain-asset-picker-amount-asset-picker-asset-picker-stories.5ad42f92.iframe.bundle.js.map