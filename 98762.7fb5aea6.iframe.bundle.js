"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[98762],{"./node_modules/@metamask/assets-controllers/dist/selectors/token-selectors.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{w:()=>selectAssetsBySelectedAccountGroup});var util=__webpack_require__("./node_modules/@metamask/controller-utils/dist/util.mjs"),number=__webpack_require__("./node_modules/@metamask/utils/dist/number.mjs"),caip_types=__webpack_require__("./node_modules/@metamask/utils/dist/caip-types.mjs"),reselect=__webpack_require__("./node_modules/reselect/dist/reselect.mjs");function stringifyBalanceWithDecimals(balance,decimals,balanceDecimals=5){if(0n===balance||0===decimals)return balance.toString();let bal=balance.toString(),len=bal.length,decimalIndex=len-decimals,prefix="";if(decimalIndex<=0){for(;prefix.length<=-1*decimalIndex;)prefix+="0",len+=1;bal=prefix+bal,decimalIndex=1}let whole=bal.slice(0,len-decimals);if(0===balanceDecimals)return whole;let fractional=bal.slice(decimalIndex,decimalIndex+balanceDecimals);if(/0+$/u.test(fractional)){let withOnlySigZeroes=bal.slice(decimalIndex).replace(/0+$/u,"");return withOnlySigZeroes.length>0&&(withOnlySigZeroes=`.${withOnlySigZeroes}`),`${whole}${withOnlySigZeroes}`}return`${whole}.${fractional}`}function parseBalanceWithDecimals(balanceString,decimals){if(!/^\d+(\.\d+)?$/u.test(balanceString))return;let[integerPart,fractionalPart=""]=balanceString.split(".");return 0===decimals?(0,number.Q9)(BigInt(integerPart)):fractionalPart.length>=decimals?(0,number.Q9)(BigInt(`${integerPart}${fractionalPart.slice(0,decimals)}`)):(0,number.Q9)(BigInt(`${integerPart}${fractionalPart}${"0".repeat(decimals-fractionalPart.length)}`))}var codefi_v2=__webpack_require__("./node_modules/@metamask/assets-controllers/dist/token-prices-service/codefi-v2.mjs");let MULTICHAIN_NATIVE_ASSET_IDS=["bip122:000000000019d6689c085ae165831e93/slip44:0","solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp/slip44:501"],createAssetListSelector=reselect.Mz.withTypes(),selectAccountsToGroupIdMap=createAssetListSelector([state=>state.accountTree,state=>state.internalAccounts],(accountTree,internalAccounts)=>{let accountsMap={};for(let{groups}of Object.values(accountTree.wallets))for(let{id:accountGroupId,accounts}of Object.values(groups))for(let accountId of accounts){let internalAccount=internalAccounts.accounts[accountId];accountsMap[internalAccount.type.startsWith("eip155")?internalAccount.address:accountId]={accountGroupId,type:internalAccount.type,accountId}}return accountsMap}),selectAllEvmAccountNativeBalances=createAssetListSelector([selectAccountsToGroupIdMap,state=>state.accountsByChainId,state=>state.marketData,state=>state.currencyRates,state=>state.currentCurrency,state=>state.networkConfigurationsByChainId],(accountsMap,accountsByChainId,marketData,currencyRates,currentCurrency,networkConfigurationsByChainId)=>{var _a;let groupAssets={};for(let[chainId,chainAccounts]of Object.entries(accountsByChainId))for(let[accountAddress,accountBalance]of Object.entries(chainAccounts)){let account=accountsMap[accountAddress.toLowerCase()];if(!account)continue;let{accountGroupId,type,accountId}=account;groupAssets[accountGroupId]??(groupAssets[accountGroupId]={}),(_a=groupAssets[accountGroupId])[chainId]??(_a[chainId]=[]);let groupChainAssets=groupAssets[accountGroupId][chainId],rawBalance=accountBalance.balance||"0x0",nativeCurrency=networkConfigurationsByChainId[chainId]?.nativeCurrency||"NATIVE",nativeToken={address:(0,codefi_v2.NH)(chainId),decimals:18,name:"ETH"===nativeCurrency?"Ethereum":nativeCurrency,symbol:nativeCurrency,image:""},fiatData=getFiatBalanceForEvmToken(rawBalance,nativeToken.decimals,marketData,currencyRates,chainId,nativeToken.address);groupChainAssets.push({type:type,assetId:nativeToken.address,isNative:!0,address:nativeToken.address,image:nativeToken.image,name:nativeToken.name,symbol:nativeToken.symbol,accountId,decimals:nativeToken.decimals,rawBalance,balance:stringifyBalanceWithDecimals((0,number.uU)(rawBalance),nativeToken.decimals),fiat:fiatData?{balance:fiatData.balance,currency:currentCurrency,conversionRate:fiatData.conversionRate}:void 0,chainId})}return groupAssets}),selectAllEvmAssets=createAssetListSelector([selectAccountsToGroupIdMap,state=>state.allTokens,state=>state.allIgnoredTokens,state=>state.tokenBalances,state=>state.marketData,state=>state.currencyRates,state=>state.currentCurrency],(accountsMap,evmTokens,ignoredEvmTokens,tokenBalances,marketData,currencyRates,currentCurrency)=>{var _a;let groupAssets={};for(let[chainId,chainTokens]of Object.entries(evmTokens))for(let[accountAddress,addressTokens]of Object.entries(chainTokens))for(let token of addressTokens){let tokenAddress=token.address,account=accountsMap[accountAddress];if(!account)continue;let{accountGroupId,type,accountId}=account;if(ignoredEvmTokens[chainId]?.[accountAddress]?.includes(tokenAddress))continue;let rawBalance=tokenBalances[accountAddress]?.[chainId]?.[tokenAddress];if(!rawBalance)continue;groupAssets[accountGroupId]??(groupAssets[accountGroupId]={}),(_a=groupAssets[accountGroupId])[chainId]??(_a[chainId]=[]);let groupChainAssets=groupAssets[accountGroupId][chainId],fiatData=getFiatBalanceForEvmToken(rawBalance,token.decimals,marketData,currencyRates,chainId,tokenAddress);groupChainAssets.push({type:type,assetId:tokenAddress,isNative:!1,address:tokenAddress,image:token.image??"",name:token.name??token.symbol,symbol:token.symbol,accountId,decimals:token.decimals,rawBalance,balance:stringifyBalanceWithDecimals((0,number.uU)(rawBalance),token.decimals),fiat:fiatData?{balance:fiatData.balance,currency:currentCurrency,conversionRate:fiatData.conversionRate}:void 0,chainId})}return groupAssets}),selectAllMultichainAssets=createAssetListSelector([selectAccountsToGroupIdMap,state=>state.accountsAssets,state=>state.assetsMetadata,state=>state.balances,state=>state.conversionRates,state=>state.currentCurrency],(accountsMap,multichainTokens,multichainAssetsMetadata,multichainBalances,multichainConversionRates,currentCurrency)=>{var _a;let groupAssets={};for(let[accountId,accountAssets]of Object.entries(multichainTokens))for(let assetId of accountAssets){let caipAsset;try{caipAsset=(0,caip_types.Ts)(assetId)}catch{continue}let{chainId}=caipAsset,asset=`${caipAsset.assetNamespace}:${caipAsset.assetReference}`,account=accountsMap[accountId],assetMetadata=multichainAssetsMetadata[assetId];if(!account||!assetMetadata)continue;let{accountGroupId,type}=account;groupAssets[accountGroupId]??(groupAssets[accountGroupId]={}),(_a=groupAssets[accountGroupId])[chainId]??(_a[chainId]=[]);let groupChainAssets=groupAssets[accountGroupId][chainId],balance=multichainBalances[accountId]?.[assetId],decimals=assetMetadata.units.find(unit=>unit.name===assetMetadata.name&&unit.symbol===assetMetadata.symbol)?.decimals;if(!balance||void 0===decimals)continue;let rawBalance=parseBalanceWithDecimals(balance.amount,decimals);if(!rawBalance)continue;let fiatData=getFiatBalanceForMultichainAsset(balance,multichainConversionRates,assetId);groupChainAssets.push({type:type,assetId,isNative:MULTICHAIN_NATIVE_ASSET_IDS.includes(assetId),image:assetMetadata.iconUrl,name:assetMetadata.name??assetMetadata.symbol??asset,symbol:assetMetadata.symbol??asset,accountId,decimals,rawBalance,balance:balance.amount,fiat:fiatData?{balance:fiatData.balance,currency:currentCurrency,conversionRate:fiatData.conversionRate}:void 0,chainId})}return groupAssets}),selectAllAssets=createAssetListSelector([selectAllEvmAssets,selectAllMultichainAssets,selectAllEvmAccountNativeBalances],(evmAssets,multichainAssets,evmAccountNativeBalances)=>{let groupAssets={};return mergeAssets(groupAssets,evmAssets),mergeAssets(groupAssets,multichainAssets),mergeAssets(groupAssets,evmAccountNativeBalances),groupAssets}),selectAssetsBySelectedAccountGroup=createAssetListSelector([selectAllAssets,state=>state.accountTree],(groupAssets,accountTree)=>{let{selectedAccountGroup}=accountTree;return selectedAccountGroup&&groupAssets[selectedAccountGroup]||{}});function mergeAssets(existingAssets,newAssets){for(let[accountGroupId,accountAssets]of Object.entries(newAssets)){let existingAccountGroupAssets=existingAssets[accountGroupId];if(existingAccountGroupAssets)for(let[network,chainAssets]of Object.entries(accountAssets))existingAccountGroupAssets[network]??(existingAccountGroupAssets[network]=[]),existingAccountGroupAssets[network].push(...chainAssets);else for(let[network,chainAssets]of(existingAssets[accountGroupId]={},Object.entries(accountAssets)))existingAssets[accountGroupId][network]=[...chainAssets]}}function getFiatBalanceForEvmToken(rawBalance,decimals,marketData,currencyRates,chainId,tokenAddress){let tokenMarketData=marketData[chainId]?.[tokenAddress];if(!tokenMarketData)return;let currencyRate=currencyRates[tokenMarketData.currency];if(currencyRate?.conversionRate)return{balance:(0,util.n6)(rawBalance)/10**decimals*tokenMarketData.price*currencyRate.conversionRate,conversionRate:currencyRate.conversionRate}}function getFiatBalanceForMultichainAsset(balance,multichainConversionRates,assetId){let assetMarketData=multichainConversionRates[assetId];if(assetMarketData?.rate)return{balance:Number(balance.amount)*Number(assetMarketData.rate),conversionRate:Number(assetMarketData.rate)}}},"./node_modules/react-simple-file-input/lib/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_react=__webpack_require__("./node_modules/react/index.js"),_react2=_interopRequireDefault(_react),_propTypes2=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return call&&("object"==typeof call||"function"==typeof call)?call:self}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}var READ_METHOD_ALIASES={buffer:"readAsArrayBuffer",binary:"readAsBinaryString",dataUrl:"readAsDataURL",text:"readAsText"},SUPPORTED_EVENTS=["onLoadStart","onLoadEnd","onLoad","onAbort","onError"],UNSUPPORTED_BY_INPUT={readAs:!0,abortIf:!0,cancelIf:!0,onCancel:!0},FileInput=function(_Component){function FileInput(props,context){_classCallCheck(this,FileInput);var _this=_possibleConstructorReturn(this,(FileInput.__proto__||Object.getPrototypeOf(FileInput)).call(this,props,context));return _this.handleChange=_this.handleChange.bind(_this),_this}return _inherits(FileInput,_Component),_createClass(FileInput,[{key:"componentDidMount",value:function componentDidMount(){(!window||window.File)&&window.FileReader||console.warn("Browser does not appear to support API react-simple-file-input relies upon")}},{key:"handleChange",value:function handleChange(event){var _this2=this,_props=this.props,readAs=_props.readAs,cancelIf=_props.cancelIf,onCancel=_props.onCancel,onProgress=_props.onProgress,abortIf=_props.abortIf,onChange=_props.onChange,multiple=_props.multiple,files=event.target.files;if(onChange&&onChange(multiple?files:files[0]),readAs)for(var i=0;i<files.length;i++){var _ret=function _loop(i){var file=files[i];if(cancelIf&&cancelIf(file))return onCancel&&onCancel(file),{v:void 0};for(var fileReader=new window.FileReader,_i=0;_i<SUPPORTED_EVENTS.length;_i++)!function _loop2(_i){var handlerName=SUPPORTED_EVENTS[_i];_this2.props[handlerName]&&(fileReader[handlerName.toLowerCase()]=function(fileReadEvent){_this2.props[handlerName](fileReadEvent,file)})}(_i);void 0!==abortIf?fileReader.onprogress=function(event){abortIf(event,file)?fileReader.abort():onProgress&&onProgress(event,file)}:onProgress&&(fileReader.onprogress=onProgress),fileReader[READ_METHOD_ALIASES[readAs]](file)}(i);if((void 0===_ret?"undefined":_typeof(_ret))==="object")return _ret.v}}},{key:"render",value:function render(){var inputProps={};for(var property in this.props)this.props.hasOwnProperty(property)&&!UNSUPPORTED_BY_INPUT[property]&&(inputProps[property]=this.props[property]);return _react2.default.createElement("input",_extends({},inputProps,{type:"file",ref:"inputField",onChange:this.handleChange}))}}]),FileInput}(_react.Component);FileInput.propTypes={id:_propTypes2.default.string,className:_propTypes2.default.string,multiple:_propTypes2.default.bool,readAs:_propTypes2.default.oneOf(Object.keys(READ_METHOD_ALIASES)),onLoadStart:_propTypes2.default.func,onLoadEnd:_propTypes2.default.func,onLoad:_propTypes2.default.func,onAbort:_propTypes2.default.func,onCancel:_propTypes2.default.func,onChange:_propTypes2.default.func,onError:_propTypes2.default.func,onProgress:_propTypes2.default.func,cancelIf:_propTypes2.default.func,abortIf:_propTypes2.default.func},exports.A=FileInput}}]);