{"version":3,"file":"components-component-library-text-field-search-text-field-search-stories.e41977b1.iframe.bundle.js","mappings":";AAwBA;AAIA;AAOA;AAIA;AAGA;AAOA;AAEA;AAMA;AACA;AAEA;AAGA;AAYA;AAKA;AAMA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAIA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACqMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://metamask-crx/./ui/components/component-library/text-field-search/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {TextField} from '../text-field';\nimport {TextFieldSearch} from './text-field-search';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"textfieldsearch\",\n      children: \"TextFieldSearch\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"TextFieldSearch\"\n      }), \" allows users to enter text to search\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-textfieldsearch--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"TextFieldSearch\"\n      }), \" accepts all props below as well as all \", _jsx(_components.a, {\n        href: \"/docs/components-ui-box--default-story#props\",\n        children: \"Box\"\n      }), \" component props\"]\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: TextFieldSearch\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"TextFieldSearch\"\n      }), \" accepts all \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-textfield--default-story#props\",\n        children: \"TextField\"\n      }), \"\\ncomponent props\"]\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: TextField\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"clear-button-on-click\",\n      children: \"Clear Button On Click\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"TextFieldSearch\"\n      }), \" displays a clear button when text is entered into the input. Use the \", _jsx(_components.code, {\n        children: \"clearButtonOnClick\"\n      }), \" prop to pass an \", _jsx(_components.code, {\n        children: \"onClick\"\n      }), \" event handler to clear the value of the input. To hide the clear button, pass \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to the \", _jsx(_components.code, {\n        children: \"showClearButton\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The clear button uses \", _jsx(_components.a, {\n        href: \"/docs/components-componentlibrary-buttonicon--default-story\",\n        children: \"ButtonIcon\"\n      }), \" and accepts all props from that component.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.strong, {\n        children: [\"NOTE: The \", _jsx(_components.code, {\n          children: \"showClearButton\"\n        }), \" only works with a controlled input.\"]\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-textfieldsearch--clear-button-on-click\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TextFieldSearch } from '../../component-library';\\n\\nconst [value, setValue] = useState('show clear');\\n\\nconst handleOnChange = (e) => {\\n  setValue(e.target.value);\\n};\\n\\nconst handleOnClear = () => {\\n  setValue('');\\n};\\n\\n<TextFieldSearch\\n  placeholder=\\\"Enter text to show clear\\\"\\n  value={value}\\n  onChange={handleOnChange}\\n  clearButtonOnClick={handleOnClear}\\n/>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"clear-button-props\",\n      children: \"Clear Button Props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"clearButtonProps\"\n      }), \" to access other props of the clear button.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-textfieldsearch--clear-button-props\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React, { useState } from 'react';\\nimport { Color, BorderRadius } from '../../../helpers/constants/design-system';\\n\\nimport { TextFieldSearch } from '../../component-library';\\n\\nconst [value, setValue] = useState('show clear');\\n\\nconst handleOnChange = (e) => {\\n  setValue(e.target.value);\\n};\\n\\nconst handleOnClear = () => {\\n  setValue('');\\n};\\n\\n<TextFieldSearch\\n  value={value}\\n  onChange={handleOnChange}\\n  clearButtonOnClick={handleOnClear}\\n  clearButtonProps={{\\n    backgroundColor: Color.backgroundAlternative,\\n    borderRadius: BorderRadius.XS,\\n    'data-testid': 'clear-button',\\n  }}\\n/>;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}