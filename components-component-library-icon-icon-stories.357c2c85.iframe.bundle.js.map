{"version":3,"file":"components-component-library-icon-icon-stories.357c2c85.iframe.bundle.js","mappings":";AA0BA;AAMA;AAOA;AAIA;AAGA;AAEA;AAGA;AAMA;AAKA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAUA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAYA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAiBA;AASA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAEA;AAGA;AAOA;AAIA;AAGA;AAAA;AAAA;AAEA;AAIA;AAGA;AAIA;AAGA;AAMA;ACwsources":["webpack://metamask-crx/./ui/components/component-library/icon/README.mdx","webpack://metamask-crx/"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/metamask-extension/metamask-extension/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Story, Canvas, ArgsTable} from '@storybook/addon-docs';\nimport {Icon} from './icon';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    h4: \"h4\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"icon\",\n      children: \"Icon\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Icon\"\n      }), \" component in conjunction with \", _jsx(_components.code, {\n        children: \"IconName\"\n      }), \" can be used for all icons in the extension\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"MetaMask Design System Guides\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-icon--default-story\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: Icon\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"name\",\n      children: \"Name\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"IconName\"\n      }), \" enum to change the icon.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/story/components-componentlibrary-icon--default-story\",\n        children: \"IconSearch\"\n      }), \" story to find the icon you want to use.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-icon--name\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Icon, IconName } from '../../component-library';\\n\\n<Icon name={IconName.AddSquare} />\\n<Icon name={IconName.Bank} />\\n<Icon name={IconName.Calculator} />\\n<Icon name={IconName.Coin} />\\n// etc...\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"size\",\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"IconSize\"\n      }), \" enum to change the size of \", _jsx(_components.code, {\n        children: \"Icon\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"IconSize.Sm\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Possible sizes include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"IconSize.Xs\"\n        }), \" 12px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"IconSize.Sm\"\n        }), \" 16px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"IconSize.Md\"\n        }), \" 20px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"IconSize.Lg\"\n        }), \" 24px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"IconSize.Xl\"\n        }), \" 32px\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"IconSize.Inherit\"\n        }), \" inherits the font-size from parent element. This is useful for inline icons in text.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-icon--size-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { TextVariant } from '../../../helpers/constants/design-system';\\nimport { Icon, IconName, IconSize, Text } from '../../component-library';\\n\\n<Icon name={IconName.AddSquare} size={IconSize.Xs} />\\n<Icon name={IconName.AddSquare} size={IconSize.Sm} />\\n<Icon name={IconName.AddSquare} size={IconSize.Md} />\\n<Icon name={IconName.AddSquare} size={IconSize.Lg} />\\n<Icon name={IconName.AddSquare} size={IconSize.Xl} />\\n<Text as=\\\"p\\\" variant={TextVariant.bodySm}>\\n    <Icon size={IconSize.Inherit} />  inherits the\\n    font-size of the parent element.\\n</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color\",\n      children: \"Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop and the \", _jsx(_components.code, {\n        children: \"IconColor\"\n      }), \" enum from \", _jsx(_components.code, {\n        children: \"./ui/helpers/constants/design-system.js\"\n      }), \" to change the color of \", _jsx(_components.code, {\n        children: \"Icon\"\n      }), \". Defaults to \", _jsx(_components.code, {\n        children: \"IconColor.inherit\"\n      }), \" which will use the text color of the parent element. This is useful for inline icons.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-icon--color-story\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { IconColor } from '../../../helpers/constants/design-system';\\nimport { Icon, IconName } from '../../component-library';\\n\\n<Icon name={IconName.AddSquare} color={IconColor.inherit} />\\n<Icon name={IconName.AddSquare} color={IconColor.iconDefault} />\\n<Icon name={IconName.AddSquare} color={IconColor.iconAlternative} />\\n<Icon name={IconName.AddSquare} color={IconColor.iconMuted} />\\n<Icon name={IconName.AddSquare} color={IconColor.overlayInverse} />\\n<Icon name={IconName.AddSquare} color={IconColor.primaryDefault} />\\n<Icon name={IconName.AddSquare} color={IconColor.primaryInverse} />\\n<Icon name={IconName.AddSquare} color={IconColor.errorDefault} />\\n<Icon name={IconName.AddSquare} color={IconColor.errorInverse} />\\n<Icon name={IconName.AddSquare} color={IconColor.successDefault} />\\n<Icon name={IconName.AddSquare} color={IconColor.successInverse} />\\n<Icon name={IconName.AddSquare} color={IconColor.warningDefault} />\\n<Icon name={IconName.AddSquare} color={IconColor.warningInverse} />\\n<Icon name={IconName.AddSquare} color={IconColor.infoDefault} />\\n<Icon name={IconName.AddSquare} color={IconColor.infoInverse} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"layout--spacing\",\n      children: \"Layout & Spacing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Icon\"\n      }), \" component accepts all \", _jsx(_components.a, {\n        href: \"/docs/components-ui-box--default-story#props\",\n        children: \"Box\"\n      }), \" component props including \", _jsx(_components.code, {\n        children: \"marginTop\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginRight\"\n      }), \", \", _jsx(_components.code, {\n        children: \" marginBottom\"\n      }), \", \", _jsx(_components.code, {\n        children: \"marginLeft\"\n      }), \" which you can use directly to adjust the space between icons and other components like \", _jsx(_components.code, {\n        children: \"Text\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Some examples of \", _jsx(_components.code, {\n        children: \"Icon\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" using \", _jsx(_components.a, {\n        href: \"/docs/components-ui-box--default-story#props\",\n        children: \"Box\"\n      }), \" component props\"]\n    }), \"\\n\", _jsx(Canvas, {\n      children: _jsx(Story, {\n        id: \"components-componentlibrary-icon--layout-and-spacing\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  AlignItems,\\n  Display,\\n  IconColor,\\n  FlexDirection,\\n  BorderColor,\\n  BorderRadius,\\n} from '../../../helpers/constants/design-system';\\n\\nimport Box from '../../ui/box/box';\\n\\nimport { IconName, Icon, IconSize, Text, Label } from '../../component-library';\\n\\n<Box display={Display.Flex} flexDirection={FlexDirection.Column} gap={4}>\\n  <Box display={Display.Flex} alignItems={AlignItems.center}>\\n    <Icon\\n      name={IconName.Check}\\n      color={IconColor.successDefault}\\n      marginRight={1}\\n    />\\n    <Text>Always allow you to opt-out via Settings</Text>\\n  </Box>\\n  <Box\\n    as=\\\"button\\\"\\n    display={Display.Flex}\\n    alignItems={AlignItems.center}\\n    borderRadius={BorderRadius.pill}\\n    backgroundColor={BackgroundColor.primaryMuted}\\n    marginRight=\\\"auto\\\"\\n  >\\n    <Text color={Color.primaryDefault}>\\n      0x79fAaFe7B6D5DB5D8c63FE88DFF0AF1Fe53358db\\n    </Text>\\n    <Icon\\n      name={IconName.Copy}\\n      color={IconColor.primaryDefault}\\n      marginLeft={1}\\n    />\\n  </Box>\\n  <Box\\n    as=\\\"button\\\"\\n    display={Display.Flex}\\n    alignItems={AlignItems.center}\\n    padding={4}\\n    borderColor={BorderColor.borderMuted}\\n    backgroundColor={BackgroundColor.backgroundDefault}\\n  >\\n    <Icon name={IconName.Add} color={IconColor.iconDefault} marginRight={2} />\\n    <Text>Create account</Text>\\n  </Box>\\n  <Label>\\n    Custom spending cap{' '}\\n    <Icon name={IconName.Info} size={IconSize.Inherit} marginLeft={1} />\\n  </Label>\\n  <div>\\n    <Text>\\n      <Icon\\n        name={IconName.Warning}\\n        size={IconSize.Inherit}\\n        marginLeft={1}\\n        color={IconColor.warningDefault}\\n      />{' '}\\n      Warning\\n    </Text>\\n  </div>\\n</Box>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"adding-a-new-icon\",\n      children: \"Adding a new icon\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In order to ensure that a new icon is added correctly, there are a few steps that need to be followed:\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"step-1\",\n      children: \"Step 1.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Optimize the svg using \", _jsx(_components.a, {\n        href: \"https://fontastic.me/\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Fontastic\"\n      }), \". This will remove any unnecessary code from the svg. Your svg should only contain a single path.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of a correctly optimized svg \", _jsx(_components.code, {\n        children: \"add-square-filled.svg\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-xml\",\n        children: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\">\\n  <path d=\\\"m337 51l-171 0c-75 0-119 45-119 119l0 172c0 74 44 119 119 119l171 0c75 0 119-45 119-119l0-172c1-74-44-119-119-119z m-3 220l-67 0 0 67c0 8-7 15-15 15-9 0-16-7-16-15l0-67-66 0c-9 0-16-7-16-15 0-8 7-15 16-15l66 0 0-67c0-8 7-15 16-15 8 0 15 7 15 15l0 67 67 0c8 0 15 7 15 15 0 8-7 15-15 15z\\\" />\\n</svg>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If your svg \", _jsx(_components.strong, {\n        children: \"does not\"\n      }), \" contain a single path, you will need to get a designer to join all paths and outline strokes into a single path.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"step-2\",\n      children: \"Step 2.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add your optimized svg file to \", _jsx(_components.code, {\n        children: \"app/images/icons\"\n      })]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"step-3\",\n      children: \"Step 3.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add your icon to the \", _jsx(_components.code, {\n        children: \"IconName\"\n      }), \" enum in \", _jsx(_components.code, {\n        children: \"./ui/components/ui/icon/icon.types.ts\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you have any questions please reach out to the design system team in the \", _jsx(_components.a, {\n        href: \"https://consensys.slack.com/archives/C0354T27M5M\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"#metamask-design-system\"\n      }), \" channel on slack.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}